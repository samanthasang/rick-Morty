{"ast":null,"code":"import { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genTreeStyle } from '../../tree/style'; // =============================== Base ===============================\n\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    treePrefixCls,\n    colorBgElevated\n  } = token;\n  const treeCls = `.${treePrefixCls}`;\n  return [// ======================================================\n  // ==                     Dropdown                     ==\n  // ======================================================\n  {\n    [`${componentCls}-dropdown`]: [{\n      padding: `${token.paddingXS}px ${token.paddingXS / 2}px`\n    }, // ====================== Tree ======================\n    genTreeStyle(treePrefixCls, mergeToken(token, {\n      colorBgContainer: colorBgElevated\n    })), {\n      [treeCls]: {\n        borderRadius: 0,\n        '&-list-holder-inner': {\n          alignItems: 'stretch',\n          [`${treeCls}-treenode`]: {\n            [`${treeCls}-node-content-wrapper`]: {\n              flex: 'auto'\n            }\n          }\n        }\n      }\n    }, // ==================== Checkbox ====================\n    getCheckboxStyle(`${treePrefixCls}-checkbox`, token), // ====================== RTL =======================\n    {\n      '&-rtl': {\n        direction: 'rtl',\n        [`${treeCls}-switcher${treeCls}-switcher_close`]: {\n          [`${treeCls}-switcher-icon svg`]: {\n            transform: 'rotate(90deg)'\n          }\n        }\n      }\n    }]\n  }];\n}; // ============================== Export ==============================\n\n\nexport default function useTreeSelectStyle(prefixCls, treePrefixCls) {\n  return genComponentStyleHook('TreeSelect', token => {\n    const treeSelectToken = mergeToken(token, {\n      treePrefixCls\n    });\n    return [genBaseStyle(treeSelectToken)];\n  })(prefixCls);\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/tree-select/style/index.js"],"names":["getStyle","getCheckboxStyle","genComponentStyleHook","mergeToken","genTreeStyle","genBaseStyle","token","componentCls","treePrefixCls","colorBgElevated","treeCls","padding","paddingXS","colorBgContainer","borderRadius","alignItems","flex","direction","transform","useTreeSelectStyle","prefixCls","treeSelectToken"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,gBAArB,QAA6C,sBAA7C;AACA,SAASC,qBAAT,EAAgCC,UAAhC,QAAkD,sBAAlD;AACA,SAASC,YAAT,QAA6B,kBAA7B,C,CACA;;AACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA;AAHI,MAIFH,KAJJ;AAKA,QAAMI,OAAO,GAAI,IAAGF,aAAc,EAAlC;AACA,SAAO,CACP;AACA;AACA;AACA;AACE,KAAE,GAAED,YAAa,WAAjB,GAA8B,CAAC;AAC7BI,MAAAA,OAAO,EAAG,GAAEL,KAAK,CAACM,SAAU,MAAKN,KAAK,CAACM,SAAN,GAAkB,CAAE;AADxB,KAAD,EAG9B;AACAR,IAAAA,YAAY,CAACI,aAAD,EAAgBL,UAAU,CAACG,KAAD,EAAQ;AAC5CO,MAAAA,gBAAgB,EAAEJ;AAD0B,KAAR,CAA1B,CAJkB,EAMzB;AACH,OAACC,OAAD,GAAW;AACTI,QAAAA,YAAY,EAAE,CADL;AAET,+BAAuB;AACrBC,UAAAA,UAAU,EAAE,SADS;AAErB,WAAE,GAAEL,OAAQ,WAAZ,GAAyB;AACvB,aAAE,GAAEA,OAAQ,uBAAZ,GAAqC;AACnCM,cAAAA,IAAI,EAAE;AAD6B;AADd;AAFJ;AAFd;AADR,KANyB,EAmB9B;AACAf,IAAAA,gBAAgB,CAAE,GAAEO,aAAc,WAAlB,EAA8BF,KAA9B,CApBc,EAqB9B;AACA;AACE,eAAS;AACPW,QAAAA,SAAS,EAAE,KADJ;AAEP,SAAE,GAAEP,OAAQ,YAAWA,OAAQ,iBAA/B,GAAkD;AAChD,WAAE,GAAEA,OAAQ,oBAAZ,GAAkC;AAChCQ,YAAAA,SAAS,EAAE;AADqB;AADc;AAF3C;AADX,KAtB8B;AADhC,GAJO,CAAP;AAsCD,CA7CD,C,CA8CA;;;AACA,eAAe,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCZ,aAAvC,EAAsD;AACnE,SAAON,qBAAqB,CAAC,YAAD,EAAeI,KAAK,IAAI;AAClD,UAAMe,eAAe,GAAGlB,UAAU,CAACG,KAAD,EAAQ;AACxCE,MAAAA;AADwC,KAAR,CAAlC;AAGA,WAAO,CAACH,YAAY,CAACgB,eAAD,CAAb,CAAP;AACD,GAL2B,CAArB,CAKJD,SALI,CAAP;AAMD","sourcesContent":["import { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genTreeStyle } from '../../tree/style';\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    treePrefixCls,\n    colorBgElevated\n  } = token;\n  const treeCls = `.${treePrefixCls}`;\n  return [\n  // ======================================================\n  // ==                     Dropdown                     ==\n  // ======================================================\n  {\n    [`${componentCls}-dropdown`]: [{\n      padding: `${token.paddingXS}px ${token.paddingXS / 2}px`\n    },\n    // ====================== Tree ======================\n    genTreeStyle(treePrefixCls, mergeToken(token, {\n      colorBgContainer: colorBgElevated\n    })), {\n      [treeCls]: {\n        borderRadius: 0,\n        '&-list-holder-inner': {\n          alignItems: 'stretch',\n          [`${treeCls}-treenode`]: {\n            [`${treeCls}-node-content-wrapper`]: {\n              flex: 'auto'\n            }\n          }\n        }\n      }\n    },\n    // ==================== Checkbox ====================\n    getCheckboxStyle(`${treePrefixCls}-checkbox`, token),\n    // ====================== RTL =======================\n    {\n      '&-rtl': {\n        direction: 'rtl',\n        [`${treeCls}-switcher${treeCls}-switcher_close`]: {\n          [`${treeCls}-switcher-icon svg`]: {\n            transform: 'rotate(90deg)'\n          }\n        }\n      }\n    }]\n  }];\n};\n// ============================== Export ==============================\nexport default function useTreeSelectStyle(prefixCls, treePrefixCls) {\n  return genComponentStyleHook('TreeSelect', token => {\n    const treeSelectToken = mergeToken(token, {\n      treePrefixCls\n    });\n    return [genBaseStyle(treeSelectToken)];\n  })(prefixCls);\n}"]},"metadata":{},"sourceType":"module"}