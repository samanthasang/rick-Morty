{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport warning from '../_util/warning';\nimport Circle from './Circle';\nimport Line from './Line';\nimport Steps from './Steps';\nimport useStyle from './style';\nimport { getSize, getSuccessPercent, validProgress } from './utils';\nexport var ProgressTypes = ['line', 'circle', 'dashboard'];\nvar ProgressStatuses = ['normal', 'exception', 'active', 'success'];\n\nvar Progress = function Progress(props) {\n  var _classNames;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      rootClassName = props.rootClassName,\n      steps = props.steps,\n      strokeColor = props.strokeColor,\n      _props$percent = props.percent,\n      percent = _props$percent === void 0 ? 0 : _props$percent,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'default' : _props$size,\n      _props$showInfo = props.showInfo,\n      showInfo = _props$showInfo === void 0 ? true : _props$showInfo,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'line' : _props$type,\n      status = props.status,\n      format = props.format,\n      restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"steps\", \"strokeColor\", \"percent\", \"size\", \"showInfo\", \"type\", \"status\", \"format\"]);\n\n  var percentNumber = React.useMemo(function () {\n    var _a, _b;\n\n    var successPercent = getSuccessPercent(props);\n    return parseInt(successPercent !== undefined ? (_a = successPercent !== null && successPercent !== void 0 ? successPercent : 0) === null || _a === void 0 ? void 0 : _a.toString() : (_b = percent !== null && percent !== void 0 ? percent : 0) === null || _b === void 0 ? void 0 : _b.toString(), 10);\n  }, [percent, props.success, props.successPercent]);\n  var progressStatus = React.useMemo(function () {\n    if (!ProgressStatuses.includes(status) && percentNumber >= 100) {\n      return 'success';\n    }\n\n    return status || 'normal';\n  }, [status, percentNumber]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('progress', customizePrefixCls);\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1];\n\n  var progressInfo = React.useMemo(function () {\n    if (!showInfo) {\n      return null;\n    }\n\n    var successPercent = getSuccessPercent(props);\n    var text;\n\n    var textFormatter = format || function (number) {\n      return \"\".concat(number, \"%\");\n    };\n\n    var isLineType = type === 'line';\n\n    if (format || progressStatus !== 'exception' && progressStatus !== 'success') {\n      text = textFormatter(validProgress(percent), validProgress(successPercent));\n    } else if (progressStatus === 'exception') {\n      text = isLineType ? /*#__PURE__*/React.createElement(CloseCircleFilled, null) : /*#__PURE__*/React.createElement(CloseOutlined, null);\n    } else if (progressStatus === 'success') {\n      text = isLineType ? /*#__PURE__*/React.createElement(CheckCircleFilled, null) : /*#__PURE__*/React.createElement(CheckOutlined, null);\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-text\"),\n      title: typeof text === 'string' ? text : undefined\n    }, text);\n  }, [showInfo, percent, percentNumber, progressStatus, type, prefixCls, format]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('successPercent' in props), 'Progress', '`successPercent` is deprecated. Please use `success.percent` instead.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!('width' in props), 'Progress', '`width` is deprecated. Please use `size` instead.') : void 0;\n  }\n\n  var strokeColorNotArray = Array.isArray(strokeColor) ? strokeColor[0] : strokeColor;\n  var strokeColorNotGradient = typeof strokeColor === 'string' || Array.isArray(strokeColor) ? strokeColor : undefined;\n  var progress; // Render progress shape\n\n  if (type === 'line') {\n    progress = steps ? /*#__PURE__*/React.createElement(Steps, Object.assign({}, props, {\n      strokeColor: strokeColorNotGradient,\n      prefixCls: prefixCls,\n      steps: steps\n    }), progressInfo) : /*#__PURE__*/React.createElement(Line, Object.assign({}, props, {\n      strokeColor: strokeColorNotArray,\n      prefixCls: prefixCls,\n      direction: direction\n    }), progressInfo);\n  } else if (type === 'circle' || type === 'dashboard') {\n    progress = /*#__PURE__*/React.createElement(Circle, Object.assign({}, props, {\n      strokeColor: strokeColorNotArray,\n      prefixCls: prefixCls,\n      progressStatus: progressStatus\n    }), progressInfo);\n  }\n\n  var classString = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-inline-circle\"), type === 'circle' && getSize(size, 'circle')[0] <= 20), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type === 'dashboard' && 'circle' || steps && 'steps' || type), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-\").concat(progressStatus), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-info\"), showInfo), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(size), typeof size === 'string'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString,\n    role: \"progressbar\"\n  }, omit(restProps, ['trailColor', 'strokeWidth', 'width', 'gapDegree', 'gapPosition', 'strokeLinecap', 'success', 'successPercent'])), progress));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Progress.displayName = 'Progress';\n}\n\nexport default Progress;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/progress/progress.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","CheckCircleFilled","CheckOutlined","CloseCircleFilled","CloseOutlined","classNames","omit","React","ConfigContext","warning","Circle","Line","Steps","useStyle","getSize","getSuccessPercent","validProgress","ProgressTypes","ProgressStatuses","Progress","props","customizePrefixCls","prefixCls","className","rootClassName","steps","strokeColor","percent","size","showInfo","type","status","format","restProps","percentNumber","useMemo","_a","_b","successPercent","parseInt","undefined","toString","success","progressStatus","includes","useContext","getPrefixCls","direction","wrapSSR","hashId","progressInfo","text","textFormatter","number","isLineType","createElement","title","process","env","NODE_ENV","strokeColorNotArray","Array","isArray","strokeColorNotGradient","progress","assign","classString","role","displayName"],"mappings":"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","sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport warning from '../_util/warning';\nimport Circle from './Circle';\nimport Line from './Line';\nimport Steps from './Steps';\nimport useStyle from './style';\nimport { getSize, getSuccessPercent, validProgress } from './utils';\nexport const ProgressTypes = ['line', 'circle', 'dashboard'];\nconst ProgressStatuses = ['normal', 'exception', 'active', 'success'];\nconst Progress = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      steps,\n      strokeColor,\n      percent = 0,\n      size = 'default',\n      showInfo = true,\n      type = 'line',\n      status,\n      format\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"steps\", \"strokeColor\", \"percent\", \"size\", \"showInfo\", \"type\", \"status\", \"format\"]);\n  const percentNumber = React.useMemo(() => {\n    var _a, _b;\n    const successPercent = getSuccessPercent(props);\n    return parseInt(successPercent !== undefined ? (_a = successPercent !== null && successPercent !== void 0 ? successPercent : 0) === null || _a === void 0 ? void 0 : _a.toString() : (_b = percent !== null && percent !== void 0 ? percent : 0) === null || _b === void 0 ? void 0 : _b.toString(), 10);\n  }, [percent, props.success, props.successPercent]);\n  const progressStatus = React.useMemo(() => {\n    if (!ProgressStatuses.includes(status) && percentNumber >= 100) {\n      return 'success';\n    }\n    return status || 'normal';\n  }, [status, percentNumber]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('progress', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const progressInfo = React.useMemo(() => {\n    if (!showInfo) {\n      return null;\n    }\n    const successPercent = getSuccessPercent(props);\n    let text;\n    const textFormatter = format || (number => `${number}%`);\n    const isLineType = type === 'line';\n    if (format || progressStatus !== 'exception' && progressStatus !== 'success') {\n      text = textFormatter(validProgress(percent), validProgress(successPercent));\n    } else if (progressStatus === 'exception') {\n      text = isLineType ? /*#__PURE__*/React.createElement(CloseCircleFilled, null) : /*#__PURE__*/React.createElement(CloseOutlined, null);\n    } else if (progressStatus === 'success') {\n      text = isLineType ? /*#__PURE__*/React.createElement(CheckCircleFilled, null) : /*#__PURE__*/React.createElement(CheckOutlined, null);\n    }\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-text`,\n      title: typeof text === 'string' ? text : undefined\n    }, text);\n  }, [showInfo, percent, percentNumber, progressStatus, type, prefixCls, format]);\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('successPercent' in props), 'Progress', '`successPercent` is deprecated. Please use `success.percent` instead.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!('width' in props), 'Progress', '`width` is deprecated. Please use `size` instead.') : void 0;\n  }\n  const strokeColorNotArray = Array.isArray(strokeColor) ? strokeColor[0] : strokeColor;\n  const strokeColorNotGradient = typeof strokeColor === 'string' || Array.isArray(strokeColor) ? strokeColor : undefined;\n  let progress;\n  // Render progress shape\n  if (type === 'line') {\n    progress = steps ? /*#__PURE__*/React.createElement(Steps, Object.assign({}, props, {\n      strokeColor: strokeColorNotGradient,\n      prefixCls: prefixCls,\n      steps: steps\n    }), progressInfo) : /*#__PURE__*/React.createElement(Line, Object.assign({}, props, {\n      strokeColor: strokeColorNotArray,\n      prefixCls: prefixCls,\n      direction: direction\n    }), progressInfo);\n  } else if (type === 'circle' || type === 'dashboard') {\n    progress = /*#__PURE__*/React.createElement(Circle, Object.assign({}, props, {\n      strokeColor: strokeColorNotArray,\n      prefixCls: prefixCls,\n      progressStatus: progressStatus\n    }), progressInfo);\n  }\n  const classString = classNames(prefixCls, {\n    [`${prefixCls}-inline-circle`]: type === 'circle' && getSize(size, 'circle')[0] <= 20,\n    [`${prefixCls}-${type === 'dashboard' && 'circle' || steps && 'steps' || type}`]: true,\n    [`${prefixCls}-status-${progressStatus}`]: true,\n    [`${prefixCls}-show-info`]: showInfo,\n    [`${prefixCls}-${size}`]: typeof size === 'string',\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString,\n    role: \"progressbar\"\n  }, omit(restProps, ['trailColor', 'strokeWidth', 'width', 'gapDegree', 'gapPosition', 'strokeLinecap', 'success', 'successPercent'])), progress));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Progress.displayName = 'Progress';\n}\nexport default Progress;"]},"metadata":{},"sourceType":"module"}