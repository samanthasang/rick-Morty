{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Checkbox from './Checkbox';\nimport useStyle from './style';\nexport const GroupContext = /*#__PURE__*/React.createContext(null);\n\nconst InternalCheckboxGroup = (_a, ref) => {\n  var {\n    defaultValue,\n    children,\n    options = [],\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    onChange\n  } = _a,\n      restProps = __rest(_a, [\"defaultValue\", \"children\", \"options\", \"prefixCls\", \"className\", \"rootClassName\", \"style\", \"onChange\"]);\n\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [value, setValue] = React.useState(restProps.value || defaultValue || []);\n  const [registeredValues, setRegisteredValues] = React.useState([]);\n  React.useEffect(() => {\n    if ('value' in restProps) {\n      setValue(restProps.value || []);\n    }\n  }, [restProps.value]);\n\n  const getOptions = () => options.map(option => {\n    if (typeof option === 'string' || typeof option === 'number') {\n      return {\n        label: option,\n        value: option\n      };\n    }\n\n    return option;\n  });\n\n  const cancelValue = val => {\n    setRegisteredValues(prevValues => prevValues.filter(v => v !== val));\n  };\n\n  const registerValue = val => {\n    setRegisteredValues(prevValues => [].concat(_toConsumableArray(prevValues), [val]));\n  };\n\n  const toggleOption = option => {\n    const optionIndex = value.indexOf(option.value);\n\n    const newValue = _toConsumableArray(value);\n\n    if (optionIndex === -1) {\n      newValue.push(option.value);\n    } else {\n      newValue.splice(optionIndex, 1);\n    }\n\n    if (!('value' in restProps)) {\n      setValue(newValue);\n    }\n\n    const opts = getOptions();\n    onChange === null || onChange === void 0 ? void 0 : onChange(newValue.filter(val => registeredValues.includes(val)).sort((a, b) => {\n      const indexA = opts.findIndex(opt => opt.value === a);\n      const indexB = opts.findIndex(opt => opt.value === b);\n      return indexA - indexB;\n    }));\n  };\n\n  const prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const domProps = omit(restProps, ['value', 'disabled']);\n\n  if (options && options.length > 0) {\n    children = getOptions().map(option => /*#__PURE__*/React.createElement(Checkbox, {\n      prefixCls: prefixCls,\n      key: option.value.toString(),\n      disabled: 'disabled' in option ? option.disabled : restProps.disabled,\n      value: option.value,\n      checked: value.includes(option.value),\n      onChange: option.onChange,\n      className: `${groupPrefixCls}-item`,\n      style: option.style\n    }, option.label));\n  } // eslint-disable-next-line react/jsx-no-constructed-context-values\n\n\n  const context = {\n    toggleOption,\n    value,\n    disabled: restProps.disabled,\n    name: restProps.name,\n    // https://github.com/ant-design/ant-design/issues/16376\n    registerValue,\n    cancelValue\n  };\n  const classString = classNames(groupPrefixCls, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString,\n    style: style\n  }, domProps, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(GroupContext.Provider, {\n    value: context\n  }, children)));\n};\n\nconst CheckboxGroup = /*#__PURE__*/React.forwardRef(InternalCheckboxGroup);\nexport default /*#__PURE__*/React.memo(CheckboxGroup);","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/checkbox/Group.js"],"names":["_toConsumableArray","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","classNames","omit","React","ConfigContext","Checkbox","useStyle","GroupContext","createContext","InternalCheckboxGroup","_a","ref","defaultValue","children","options","prefixCls","customizePrefixCls","className","rootClassName","style","onChange","restProps","getPrefixCls","direction","useContext","value","setValue","useState","registeredValues","setRegisteredValues","useEffect","getOptions","map","option","label","cancelValue","val","prevValues","filter","v","registerValue","concat","toggleOption","optionIndex","newValue","push","splice","opts","includes","sort","a","b","indexA","findIndex","opt","indexB","groupPrefixCls","wrapSSR","hashId","domProps","createElement","key","toString","disabled","checked","context","name","classString","assign","Provider","CheckboxGroup","forwardRef","memo"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Checkbox from './Checkbox';\nimport useStyle from './style';\nexport const GroupContext = /*#__PURE__*/React.createContext(null);\nconst InternalCheckboxGroup = (_a, ref) => {\n  var {\n      defaultValue,\n      children,\n      options = [],\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      style,\n      onChange\n    } = _a,\n    restProps = __rest(_a, [\"defaultValue\", \"children\", \"options\", \"prefixCls\", \"className\", \"rootClassName\", \"style\", \"onChange\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [value, setValue] = React.useState(restProps.value || defaultValue || []);\n  const [registeredValues, setRegisteredValues] = React.useState([]);\n  React.useEffect(() => {\n    if ('value' in restProps) {\n      setValue(restProps.value || []);\n    }\n  }, [restProps.value]);\n  const getOptions = () => options.map(option => {\n    if (typeof option === 'string' || typeof option === 'number') {\n      return {\n        label: option,\n        value: option\n      };\n    }\n    return option;\n  });\n  const cancelValue = val => {\n    setRegisteredValues(prevValues => prevValues.filter(v => v !== val));\n  };\n  const registerValue = val => {\n    setRegisteredValues(prevValues => [].concat(_toConsumableArray(prevValues), [val]));\n  };\n  const toggleOption = option => {\n    const optionIndex = value.indexOf(option.value);\n    const newValue = _toConsumableArray(value);\n    if (optionIndex === -1) {\n      newValue.push(option.value);\n    } else {\n      newValue.splice(optionIndex, 1);\n    }\n    if (!('value' in restProps)) {\n      setValue(newValue);\n    }\n    const opts = getOptions();\n    onChange === null || onChange === void 0 ? void 0 : onChange(newValue.filter(val => registeredValues.includes(val)).sort((a, b) => {\n      const indexA = opts.findIndex(opt => opt.value === a);\n      const indexB = opts.findIndex(opt => opt.value === b);\n      return indexA - indexB;\n    }));\n  };\n  const prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const domProps = omit(restProps, ['value', 'disabled']);\n  if (options && options.length > 0) {\n    children = getOptions().map(option => /*#__PURE__*/React.createElement(Checkbox, {\n      prefixCls: prefixCls,\n      key: option.value.toString(),\n      disabled: 'disabled' in option ? option.disabled : restProps.disabled,\n      value: option.value,\n      checked: value.includes(option.value),\n      onChange: option.onChange,\n      className: `${groupPrefixCls}-item`,\n      style: option.style\n    }, option.label));\n  }\n  // eslint-disable-next-line react/jsx-no-constructed-context-values\n  const context = {\n    toggleOption,\n    value,\n    disabled: restProps.disabled,\n    name: restProps.name,\n    // https://github.com/ant-design/ant-design/issues/16376\n    registerValue,\n    cancelValue\n  };\n  const classString = classNames(groupPrefixCls, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString,\n    style: style\n  }, domProps, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(GroupContext.Provider, {\n    value: context\n  }, children)));\n};\nconst CheckboxGroup = /*#__PURE__*/React.forwardRef(InternalCheckboxGroup);\nexport default /*#__PURE__*/React.memo(CheckboxGroup);"]},"metadata":{},"sourceType":"module"}