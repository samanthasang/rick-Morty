{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { FieldContext } from '.';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { useState, useContext, useEffect, useRef, useMemo } from 'react';\nimport { getNamePath, getValue } from './utils/valueUtil';\nimport { isFormInstance } from './utils/typeUtil';\nexport function stringify(value) {\n  try {\n    return JSON.stringify(value);\n  } catch (err) {\n    return Math.random();\n  }\n}\nvar useWatchWarning = process.env.NODE_ENV !== 'production' ? function (namePath) {\n  var fullyStr = namePath.join('__RC_FIELD_FORM_SPLIT__');\n  var nameStrRef = useRef(fullyStr);\n  warning(nameStrRef.current === fullyStr, '`useWatch` is not support dynamic `namePath`. Please provide static instead.');\n} : function () {};\n\nfunction useWatch() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var _args$ = args[0],\n      dependencies = _args$ === void 0 ? [] : _args$,\n      _args$2 = args[1],\n      _form = _args$2 === void 0 ? {} : _args$2;\n\n  var options = isFormInstance(_form) ? {\n    form: _form\n  } : _form;\n  var form = options.form;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var valueStr = useMemo(function () {\n    return stringify(value);\n  }, [value]);\n  var valueStrRef = useRef(valueStr);\n  valueStrRef.current = valueStr;\n  var fieldContext = useContext(FieldContext);\n  var formInstance = form || fieldContext;\n  var isValidForm = formInstance && formInstance._init; // Warning if not exist form instance\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(args.length === 2 ? form ? isValidForm : true : isValidForm, 'useWatch requires a form instance since it can not auto detect from context.');\n  }\n\n  var namePath = getNamePath(dependencies);\n  var namePathRef = useRef(namePath);\n  namePathRef.current = namePath;\n  useWatchWarning(namePath);\n  useEffect(function () {\n    // Skip if not exist form instance\n    if (!isValidForm) {\n      return;\n    }\n\n    var getFieldsValue = formInstance.getFieldsValue,\n        getInternalHooks = formInstance.getInternalHooks;\n\n    var _getInternalHooks = getInternalHooks(HOOK_MARK),\n        registerWatch = _getInternalHooks.registerWatch;\n\n    var cancelRegister = registerWatch(function (values, allValues) {\n      var newValue = getValue(options.preserve ? allValues : values, namePathRef.current);\n      var nextValueStr = stringify(newValue); // Compare stringify in case it's nest object\n\n      if (valueStrRef.current !== nextValueStr) {\n        valueStrRef.current = nextValueStr;\n        setValue(newValue);\n      }\n    }); // TODO: We can improve this perf in future\n\n    var initialValue = getValue(options.preserve ? getFieldsValue(true) : getFieldsValue(), namePathRef.current);\n    setValue(initialValue);\n    return cancelRegister;\n  }, // We do not need re-register since namePath content is the same\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [isValidForm]);\n  return value;\n}\n\nexport default useWatch;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-field-form/es/useWatch.js"],"names":["_slicedToArray","FieldContext","warning","HOOK_MARK","useState","useContext","useEffect","useRef","useMemo","getNamePath","getValue","isFormInstance","stringify","value","JSON","err","Math","random","useWatchWarning","process","env","NODE_ENV","namePath","fullyStr","join","nameStrRef","current","useWatch","_len","arguments","length","args","Array","_key","_args$","dependencies","_args$2","_form","options","form","_useState","_useState2","setValue","valueStr","valueStrRef","fieldContext","formInstance","isValidForm","_init","namePathRef","getFieldsValue","getInternalHooks","_getInternalHooks","registerWatch","cancelRegister","values","allValues","newValue","preserve","nextValueStr","initialValue"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { FieldContext } from '.';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { useState, useContext, useEffect, useRef, useMemo } from 'react';\nimport { getNamePath, getValue } from './utils/valueUtil';\nimport { isFormInstance } from './utils/typeUtil';\nexport function stringify(value) {\n  try {\n    return JSON.stringify(value);\n  } catch (err) {\n    return Math.random();\n  }\n}\nvar useWatchWarning = process.env.NODE_ENV !== 'production' ? function (namePath) {\n  var fullyStr = namePath.join('__RC_FIELD_FORM_SPLIT__');\n  var nameStrRef = useRef(fullyStr);\n  warning(nameStrRef.current === fullyStr, '`useWatch` is not support dynamic `namePath`. Please provide static instead.');\n} : function () {};\nfunction useWatch() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  var _args$ = args[0],\n    dependencies = _args$ === void 0 ? [] : _args$,\n    _args$2 = args[1],\n    _form = _args$2 === void 0 ? {} : _args$2;\n  var options = isFormInstance(_form) ? {\n    form: _form\n  } : _form;\n  var form = options.form;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var valueStr = useMemo(function () {\n    return stringify(value);\n  }, [value]);\n  var valueStrRef = useRef(valueStr);\n  valueStrRef.current = valueStr;\n  var fieldContext = useContext(FieldContext);\n  var formInstance = form || fieldContext;\n  var isValidForm = formInstance && formInstance._init;\n  // Warning if not exist form instance\n  if (process.env.NODE_ENV !== 'production') {\n    warning(args.length === 2 ? form ? isValidForm : true : isValidForm, 'useWatch requires a form instance since it can not auto detect from context.');\n  }\n  var namePath = getNamePath(dependencies);\n  var namePathRef = useRef(namePath);\n  namePathRef.current = namePath;\n  useWatchWarning(namePath);\n  useEffect(function () {\n    // Skip if not exist form instance\n    if (!isValidForm) {\n      return;\n    }\n    var getFieldsValue = formInstance.getFieldsValue,\n      getInternalHooks = formInstance.getInternalHooks;\n    var _getInternalHooks = getInternalHooks(HOOK_MARK),\n      registerWatch = _getInternalHooks.registerWatch;\n    var cancelRegister = registerWatch(function (values, allValues) {\n      var newValue = getValue(options.preserve ? allValues : values, namePathRef.current);\n      var nextValueStr = stringify(newValue);\n      // Compare stringify in case it's nest object\n      if (valueStrRef.current !== nextValueStr) {\n        valueStrRef.current = nextValueStr;\n        setValue(newValue);\n      }\n    });\n    // TODO: We can improve this perf in future\n    var initialValue = getValue(options.preserve ? getFieldsValue(true) : getFieldsValue(), namePathRef.current);\n    setValue(initialValue);\n    return cancelRegister;\n  },\n  // We do not need re-register since namePath content is the same\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [isValidForm]);\n  return value;\n}\nexport default useWatch;"]},"metadata":{},"sourceType":"module"}