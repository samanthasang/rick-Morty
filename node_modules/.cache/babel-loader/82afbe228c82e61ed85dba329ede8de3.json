{"ast":null,"code":"import { textEllipsis } from '../../style';\n\nconst genEllipsisStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-wrapper`]: {\n      [`${componentCls}-cell-ellipsis`]: Object.assign(Object.assign({}, textEllipsis), {\n        wordBreak: 'keep-all',\n        // Fixed first or last should special process\n        [`\n          &${componentCls}-cell-fix-left-last,\n          &${componentCls}-cell-fix-right-first\n        `]: {\n          overflow: 'visible',\n          [`${componentCls}-cell-content`]: {\n            display: 'block',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n          }\n        },\n        [`${componentCls}-column-title`]: {\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          wordBreak: 'keep-all'\n        }\n      })\n    }\n  };\n};\n\nexport default genEllipsisStyle;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/table/style/ellipsis.js"],"names":["textEllipsis","genEllipsisStyle","token","componentCls","Object","assign","wordBreak","overflow","display","textOverflow"],"mappings":"AAAA,SAASA,YAAT,QAA6B,aAA7B;;AACA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChC,QAAM;AACJC,IAAAA;AADI,MAEFD,KAFJ;AAGA,SAAO;AACL,KAAE,GAAEC,YAAa,UAAjB,GAA6B;AAC3B,OAAE,GAAEA,YAAa,gBAAjB,GAAmCC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,YAAlB,CAAd,EAA+C;AAChFM,QAAAA,SAAS,EAAE,UADqE;AAEhF;AACA,SAAE;AACV,aAAaH,YAAa;AAC1B,aAAaA,YAAa;AAC1B,SAHQ,GAGI;AACFI,UAAAA,QAAQ,EAAE,SADR;AAEF,WAAE,GAAEJ,YAAa,eAAjB,GAAkC;AAChCK,YAAAA,OAAO,EAAE,OADuB;AAEhCD,YAAAA,QAAQ,EAAE,QAFsB;AAGhCE,YAAAA,YAAY,EAAE;AAHkB;AAFhC,SAN4E;AAchF,SAAE,GAAEN,YAAa,eAAjB,GAAkC;AAChCI,UAAAA,QAAQ,EAAE,QADsB;AAEhCE,UAAAA,YAAY,EAAE,UAFkB;AAGhCH,UAAAA,SAAS,EAAE;AAHqB;AAd8C,OAA/C;AADR;AADxB,GAAP;AAwBD,CA5BD;;AA6BA,eAAeL,gBAAf","sourcesContent":["import { textEllipsis } from '../../style';\nconst genEllipsisStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-wrapper`]: {\n      [`${componentCls}-cell-ellipsis`]: Object.assign(Object.assign({}, textEllipsis), {\n        wordBreak: 'keep-all',\n        // Fixed first or last should special process\n        [`\n          &${componentCls}-cell-fix-left-last,\n          &${componentCls}-cell-fix-right-first\n        `]: {\n          overflow: 'visible',\n          [`${componentCls}-cell-content`]: {\n            display: 'block',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n          }\n        },\n        [`${componentCls}-column-title`]: {\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          wordBreak: 'keep-all'\n        }\n      })\n    }\n  };\n};\nexport default genEllipsisStyle;"]},"metadata":{},"sourceType":"module"}