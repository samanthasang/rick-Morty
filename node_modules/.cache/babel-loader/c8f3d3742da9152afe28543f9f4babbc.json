{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { resetComponent } from '../../style';\nimport { initZoomMotion } from '../../style/motion';\nimport getArrowStyle, { MAX_VERTICAL_CONTENT_RADIUS } from '../../style/placementArrow';\nimport { genComponentStyleHook, mergeToken, genPresetColor } from '../../theme/internal';\n\nvar genTooltipStyle = function genTooltipStyle(token) {\n  var _Object$assign;\n\n  var componentCls = token.componentCls,\n      tooltipMaxWidth = token.tooltipMaxWidth,\n      tooltipColor = token.tooltipColor,\n      tooltipBg = token.tooltipBg,\n      tooltipBorderRadius = token.tooltipBorderRadius,\n      zIndexPopup = token.zIndexPopup,\n      controlHeight = token.controlHeight,\n      boxShadowSecondary = token.boxShadowSecondary,\n      paddingSM = token.paddingSM,\n      paddingXS = token.paddingXS,\n      tooltipRadiusOuter = token.tooltipRadiusOuter;\n  return [_defineProperty({}, componentCls, Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    position: 'absolute',\n    zIndex: zIndexPopup,\n    display: 'block',\n    width: 'max-content',\n    maxWidth: tooltipMaxWidth,\n    visibility: 'visible',\n    '&-hidden': {\n      display: 'none'\n    },\n    '--antd-arrow-background-color': tooltipBg\n  }, _defineProperty(_Object$assign, \"\".concat(componentCls, \"-inner\"), {\n    minWidth: controlHeight,\n    minHeight: controlHeight,\n    padding: \"\".concat(paddingSM / 2, \"px \").concat(paddingXS, \"px\"),\n    color: tooltipColor,\n    textAlign: 'start',\n    textDecoration: 'none',\n    wordWrap: 'break-word',\n    backgroundColor: tooltipBg,\n    borderRadius: tooltipBorderRadius,\n    boxShadow: boxShadowSecondary\n  }), _defineProperty(_Object$assign, [\"&-placement-left\", \"&-placement-leftTop\", \"&-placement-leftBottom\", \"&-placement-right\", \"&-placement-rightTop\", \"&-placement-rightBottom\"].join(','), _defineProperty({}, \"\".concat(componentCls, \"-inner\"), {\n    borderRadius: Math.min(tooltipBorderRadius, MAX_VERTICAL_CONTENT_RADIUS)\n  })), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-content\"), {\n    position: 'relative'\n  }), _Object$assign)), genPresetColor(token, function (colorKey, _ref) {\n    var _$concat$concat;\n\n    var darkColor = _ref.darkColor;\n    return _defineProperty({}, \"&\".concat(componentCls, \"-\").concat(colorKey), (_$concat$concat = {}, _defineProperty(_$concat$concat, \"\".concat(componentCls, \"-inner\"), {\n      backgroundColor: darkColor\n    }), _defineProperty(_$concat$concat, \"\".concat(componentCls, \"-arrow\"), {\n      '--antd-arrow-background-color': darkColor\n    }), _$concat$concat));\n  })), {\n    // RTL\n    '&-rtl': {\n      direction: 'rtl'\n    }\n  })), // Arrow Style\n  getArrowStyle(mergeToken(token, {\n    borderRadiusOuter: tooltipRadiusOuter\n  }), {\n    colorBg: 'var(--antd-arrow-background-color)',\n    contentRadius: tooltipBorderRadius,\n    limitVerticalRadius: true\n  }), // Pure Render\n  _defineProperty({}, \"\".concat(componentCls, \"-pure\"), {\n    position: 'relative',\n    maxWidth: 'none',\n    margin: token.sizePopupArrow\n  })];\n}; // ============================== Export ==============================\n\n\nexport default (function (prefixCls, injectStyle) {\n  var useOriginHook = genComponentStyleHook('Tooltip', function (token) {\n    // Popover use Tooltip as internal component. We do not need to handle this.\n    if (injectStyle === false) {\n      return [];\n    }\n\n    var borderRadius = token.borderRadius,\n        colorTextLightSolid = token.colorTextLightSolid,\n        colorBgDefault = token.colorBgDefault,\n        borderRadiusOuter = token.borderRadiusOuter;\n    var TooltipToken = mergeToken(token, {\n      // default variables\n      tooltipMaxWidth: 250,\n      tooltipColor: colorTextLightSolid,\n      tooltipBorderRadius: borderRadius,\n      tooltipBg: colorBgDefault,\n      tooltipRadiusOuter: borderRadiusOuter > 4 ? 4 : borderRadiusOuter\n    });\n    return [genTooltipStyle(TooltipToken), initZoomMotion(token, 'zoom-big-fast')];\n  }, function (_ref2) {\n    var zIndexPopupBase = _ref2.zIndexPopupBase,\n        colorBgSpotlight = _ref2.colorBgSpotlight;\n    return {\n      zIndexPopup: zIndexPopupBase + 70,\n      colorBgDefault: colorBgSpotlight\n    };\n  });\n  return useOriginHook(prefixCls);\n});","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/tooltip/style/index.js"],"names":["resetComponent","initZoomMotion","getArrowStyle","MAX_VERTICAL_CONTENT_RADIUS","genComponentStyleHook","mergeToken","genPresetColor","genTooltipStyle","token","componentCls","tooltipMaxWidth","tooltipColor","tooltipBg","tooltipBorderRadius","zIndexPopup","controlHeight","boxShadowSecondary","paddingSM","paddingXS","tooltipRadiusOuter","Object","assign","position","zIndex","display","width","maxWidth","visibility","minWidth","minHeight","padding","color","textAlign","textDecoration","wordWrap","backgroundColor","borderRadius","boxShadow","join","Math","min","colorKey","_ref","darkColor","direction","borderRadiusOuter","colorBg","contentRadius","limitVerticalRadius","margin","sizePopupArrow","prefixCls","injectStyle","useOriginHook","colorTextLightSolid","colorBgDefault","TooltipToken","_ref2","zIndexPopupBase","colorBgSpotlight"],"mappings":"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","sourcesContent":["import { resetComponent } from '../../style';\nimport { initZoomMotion } from '../../style/motion';\nimport getArrowStyle, { MAX_VERTICAL_CONTENT_RADIUS } from '../../style/placementArrow';\nimport { genComponentStyleHook, mergeToken, genPresetColor } from '../../theme/internal';\nconst genTooltipStyle = token => {\n  const {\n    componentCls,\n    // ant-tooltip\n    tooltipMaxWidth,\n    tooltipColor,\n    tooltipBg,\n    tooltipBorderRadius,\n    zIndexPopup,\n    controlHeight,\n    boxShadowSecondary,\n    paddingSM,\n    paddingXS,\n    tooltipRadiusOuter\n  } = token;\n  return [{\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      zIndex: zIndexPopup,\n      display: 'block',\n      width: 'max-content',\n      maxWidth: tooltipMaxWidth,\n      visibility: 'visible',\n      '&-hidden': {\n        display: 'none'\n      },\n      '--antd-arrow-background-color': tooltipBg,\n      // Wrapper for the tooltip content\n      [`${componentCls}-inner`]: {\n        minWidth: controlHeight,\n        minHeight: controlHeight,\n        padding: `${paddingSM / 2}px ${paddingXS}px`,\n        color: tooltipColor,\n        textAlign: 'start',\n        textDecoration: 'none',\n        wordWrap: 'break-word',\n        backgroundColor: tooltipBg,\n        borderRadius: tooltipBorderRadius,\n        boxShadow: boxShadowSecondary\n      },\n      // Limit left and right placement radius\n      [[`&-placement-left`, `&-placement-leftTop`, `&-placement-leftBottom`, `&-placement-right`, `&-placement-rightTop`, `&-placement-rightBottom`].join(',')]: {\n        [`${componentCls}-inner`]: {\n          borderRadius: Math.min(tooltipBorderRadius, MAX_VERTICAL_CONTENT_RADIUS)\n        }\n      },\n      [`${componentCls}-content`]: {\n        position: 'relative'\n      }\n    }), genPresetColor(token, (colorKey, _ref) => {\n      let {\n        darkColor\n      } = _ref;\n      return {\n        [`&${componentCls}-${colorKey}`]: {\n          [`${componentCls}-inner`]: {\n            backgroundColor: darkColor\n          },\n          [`${componentCls}-arrow`]: {\n            '--antd-arrow-background-color': darkColor\n          }\n        }\n      };\n    })), {\n      // RTL\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  },\n  // Arrow Style\n  getArrowStyle(mergeToken(token, {\n    borderRadiusOuter: tooltipRadiusOuter\n  }), {\n    colorBg: 'var(--antd-arrow-background-color)',\n    contentRadius: tooltipBorderRadius,\n    limitVerticalRadius: true\n  }),\n  // Pure Render\n  {\n    [`${componentCls}-pure`]: {\n      position: 'relative',\n      maxWidth: 'none',\n      margin: token.sizePopupArrow\n    }\n  }];\n};\n// ============================== Export ==============================\nexport default ((prefixCls, injectStyle) => {\n  const useOriginHook = genComponentStyleHook('Tooltip', token => {\n    // Popover use Tooltip as internal component. We do not need to handle this.\n    if (injectStyle === false) {\n      return [];\n    }\n    const {\n      borderRadius,\n      colorTextLightSolid,\n      colorBgDefault,\n      borderRadiusOuter\n    } = token;\n    const TooltipToken = mergeToken(token, {\n      // default variables\n      tooltipMaxWidth: 250,\n      tooltipColor: colorTextLightSolid,\n      tooltipBorderRadius: borderRadius,\n      tooltipBg: colorBgDefault,\n      tooltipRadiusOuter: borderRadiusOuter > 4 ? 4 : borderRadiusOuter\n    });\n    return [genTooltipStyle(TooltipToken), initZoomMotion(token, 'zoom-big-fast')];\n  }, _ref2 => {\n    let {\n      zIndexPopupBase,\n      colorBgSpotlight\n    } = _ref2;\n    return {\n      zIndexPopup: zIndexPopupBase + 70,\n      colorBgDefault: colorBgSpotlight\n    };\n  });\n  return useOriginHook(prefixCls);\n});"]},"metadata":{},"sourceType":"module"}