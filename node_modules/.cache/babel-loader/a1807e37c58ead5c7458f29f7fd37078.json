{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"rootClassName\", \"style\", \"className\", \"tabIndex\", \"items\", \"children\", \"direction\", \"id\", \"mode\", \"inlineCollapsed\", \"disabled\", \"disabledOverflow\", \"subMenuOpenDelay\", \"subMenuCloseDelay\", \"forceSubMenuRender\", \"defaultOpenKeys\", \"openKeys\", \"activeKey\", \"defaultActiveFirst\", \"selectable\", \"multiple\", \"defaultSelectedKeys\", \"selectedKeys\", \"onSelect\", \"onDeselect\", \"inlineIndent\", \"motion\", \"defaultMotions\", \"triggerSubMenuAction\", \"builtinPlacements\", \"itemIcon\", \"expandIcon\", \"overflowedIndicator\", \"overflowedIndicatorPopupClassName\", \"getPopupContainer\", \"onClick\", \"onOpenChange\", \"onKeyDown\", \"openAnimation\", \"openTransitionName\", \"_internalRenderMenuItem\", \"_internalRenderSubMenuItem\"];\nimport classNames from 'classnames';\nimport Overflow from 'rc-overflow';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { useImperativeHandle } from 'react';\nimport { flushSync } from 'react-dom';\nimport isEqual from \"rc-util/es/isEqual\";\nimport { getMenuId, IdContext } from \"./context/IdContext\";\nimport MenuContextProvider from \"./context/MenuContext\";\nimport { PathRegisterContext, PathUserContext } from \"./context/PathContext\";\nimport PrivateContext from \"./context/PrivateContext\";\nimport useAccessibility from \"./hooks/useAccessibility\";\nimport useKeyRecords, { OVERFLOW_KEY } from \"./hooks/useKeyRecords\";\nimport useMemoCallback from \"./hooks/useMemoCallback\";\nimport useUUID from \"./hooks/useUUID\";\nimport MenuItem from \"./MenuItem\";\nimport SubMenu from \"./SubMenu\";\nimport { parseItems } from \"./utils/nodeUtil\";\nimport { warnItemProp } from \"./utils/warnUtil\";\n/**\n * Menu modify after refactor:\n * ## Add\n * - disabled\n *\n * ## Remove\n * - openTransitionName\n * - openAnimation\n * - onDestroy\n * - siderCollapsed: Seems antd do not use this prop (Need test in antd)\n * - collapsedWidth: Seems this logic should be handle by antd Layout.Sider\n */\n// optimize for render\n\nvar EMPTY_LIST = [];\nvar Menu = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _childList$, _classNames;\n\n  var _ref = props,\n      _ref$prefixCls = _ref.prefixCls,\n      prefixCls = _ref$prefixCls === void 0 ? 'rc-menu' : _ref$prefixCls,\n      rootClassName = _ref.rootClassName,\n      style = _ref.style,\n      className = _ref.className,\n      _ref$tabIndex = _ref.tabIndex,\n      tabIndex = _ref$tabIndex === void 0 ? 0 : _ref$tabIndex,\n      items = _ref.items,\n      children = _ref.children,\n      direction = _ref.direction,\n      id = _ref.id,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'vertical' : _ref$mode,\n      inlineCollapsed = _ref.inlineCollapsed,\n      disabled = _ref.disabled,\n      disabledOverflow = _ref.disabledOverflow,\n      _ref$subMenuOpenDelay = _ref.subMenuOpenDelay,\n      subMenuOpenDelay = _ref$subMenuOpenDelay === void 0 ? 0.1 : _ref$subMenuOpenDelay,\n      _ref$subMenuCloseDela = _ref.subMenuCloseDelay,\n      subMenuCloseDelay = _ref$subMenuCloseDela === void 0 ? 0.1 : _ref$subMenuCloseDela,\n      forceSubMenuRender = _ref.forceSubMenuRender,\n      defaultOpenKeys = _ref.defaultOpenKeys,\n      openKeys = _ref.openKeys,\n      activeKey = _ref.activeKey,\n      defaultActiveFirst = _ref.defaultActiveFirst,\n      _ref$selectable = _ref.selectable,\n      selectable = _ref$selectable === void 0 ? true : _ref$selectable,\n      _ref$multiple = _ref.multiple,\n      multiple = _ref$multiple === void 0 ? false : _ref$multiple,\n      defaultSelectedKeys = _ref.defaultSelectedKeys,\n      selectedKeys = _ref.selectedKeys,\n      onSelect = _ref.onSelect,\n      onDeselect = _ref.onDeselect,\n      _ref$inlineIndent = _ref.inlineIndent,\n      inlineIndent = _ref$inlineIndent === void 0 ? 24 : _ref$inlineIndent,\n      motion = _ref.motion,\n      defaultMotions = _ref.defaultMotions,\n      _ref$triggerSubMenuAc = _ref.triggerSubMenuAction,\n      triggerSubMenuAction = _ref$triggerSubMenuAc === void 0 ? 'hover' : _ref$triggerSubMenuAc,\n      builtinPlacements = _ref.builtinPlacements,\n      itemIcon = _ref.itemIcon,\n      expandIcon = _ref.expandIcon,\n      _ref$overflowedIndica = _ref.overflowedIndicator,\n      overflowedIndicator = _ref$overflowedIndica === void 0 ? '...' : _ref$overflowedIndica,\n      overflowedIndicatorPopupClassName = _ref.overflowedIndicatorPopupClassName,\n      getPopupContainer = _ref.getPopupContainer,\n      onClick = _ref.onClick,\n      onOpenChange = _ref.onOpenChange,\n      onKeyDown = _ref.onKeyDown,\n      openAnimation = _ref.openAnimation,\n      openTransitionName = _ref.openTransitionName,\n      _internalRenderMenuItem = _ref._internalRenderMenuItem,\n      _internalRenderSubMenuItem = _ref._internalRenderSubMenuItem,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var childList = React.useMemo(function () {\n    return parseItems(children, items, EMPTY_LIST);\n  }, [children, items]);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mounted = _React$useState2[0],\n      setMounted = _React$useState2[1];\n\n  var containerRef = React.useRef();\n  var uuid = useUUID(id);\n  var isRtl = direction === 'rtl'; // ========================= Warn =========================\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(!openAnimation && !openTransitionName, '`openAnimation` and `openTransitionName` is removed. Please use `motion` or `defaultMotion` instead.');\n  } // ========================= Open =========================\n\n\n  var _useMergedState = useMergedState(defaultOpenKeys, {\n    value: openKeys,\n    postState: function postState(keys) {\n      return keys || EMPTY_LIST;\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedOpenKeys = _useMergedState2[0],\n      setMergedOpenKeys = _useMergedState2[1]; // React 18 will merge mouse event which means we open key will not sync\n  // ref: https://github.com/ant-design/ant-design/issues/38818\n\n\n  var triggerOpenKeys = function triggerOpenKeys(keys) {\n    var forceFlush = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    function doUpdate() {\n      setMergedOpenKeys(keys);\n      onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(keys);\n    }\n\n    if (forceFlush) {\n      flushSync(doUpdate);\n    } else {\n      doUpdate();\n    }\n  }; // >>>>> Cache & Reset open keys when inlineCollapsed changed\n\n\n  var _React$useState3 = React.useState(mergedOpenKeys),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      inlineCacheOpenKeys = _React$useState4[0],\n      setInlineCacheOpenKeys = _React$useState4[1];\n\n  var mountRef = React.useRef(false); // ========================= Mode =========================\n\n  var _React$useMemo = React.useMemo(function () {\n    if ((mode === 'inline' || mode === 'vertical') && inlineCollapsed) {\n      return ['vertical', inlineCollapsed];\n    }\n\n    return [mode, false];\n  }, [mode, inlineCollapsed]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      mergedMode = _React$useMemo2[0],\n      mergedInlineCollapsed = _React$useMemo2[1];\n\n  var isInlineMode = mergedMode === 'inline';\n\n  var _React$useState5 = React.useState(mergedMode),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      internalMode = _React$useState6[0],\n      setInternalMode = _React$useState6[1];\n\n  var _React$useState7 = React.useState(mergedInlineCollapsed),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      internalInlineCollapsed = _React$useState8[0],\n      setInternalInlineCollapsed = _React$useState8[1];\n\n  React.useEffect(function () {\n    setInternalMode(mergedMode);\n    setInternalInlineCollapsed(mergedInlineCollapsed);\n\n    if (!mountRef.current) {\n      return;\n    } // Synchronously update MergedOpenKeys\n\n\n    if (isInlineMode) {\n      setMergedOpenKeys(inlineCacheOpenKeys);\n    } else {\n      // Trigger open event in case its in control\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }, [mergedMode, mergedInlineCollapsed]); // ====================== Responsive ======================\n\n  var _React$useState9 = React.useState(0),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      lastVisibleIndex = _React$useState10[0],\n      setLastVisibleIndex = _React$useState10[1];\n\n  var allVisible = lastVisibleIndex >= childList.length - 1 || internalMode !== 'horizontal' || disabledOverflow; // Cache\n\n  React.useEffect(function () {\n    if (isInlineMode) {\n      setInlineCacheOpenKeys(mergedOpenKeys);\n    }\n  }, [mergedOpenKeys]);\n  React.useEffect(function () {\n    mountRef.current = true;\n    return function () {\n      mountRef.current = false;\n    };\n  }, []); // ========================= Path =========================\n\n  var _useKeyRecords = useKeyRecords(),\n      registerPath = _useKeyRecords.registerPath,\n      unregisterPath = _useKeyRecords.unregisterPath,\n      refreshOverflowKeys = _useKeyRecords.refreshOverflowKeys,\n      isSubPathKey = _useKeyRecords.isSubPathKey,\n      getKeyPath = _useKeyRecords.getKeyPath,\n      getKeys = _useKeyRecords.getKeys,\n      getSubPathKeys = _useKeyRecords.getSubPathKeys;\n\n  var registerPathContext = React.useMemo(function () {\n    return {\n      registerPath: registerPath,\n      unregisterPath: unregisterPath\n    };\n  }, [registerPath, unregisterPath]);\n  var pathUserContext = React.useMemo(function () {\n    return {\n      isSubPathKey: isSubPathKey\n    };\n  }, [isSubPathKey]);\n  React.useEffect(function () {\n    refreshOverflowKeys(allVisible ? EMPTY_LIST : childList.slice(lastVisibleIndex + 1).map(function (child) {\n      return child.key;\n    }));\n  }, [lastVisibleIndex, allVisible]); // ======================== Active ========================\n\n  var _useMergedState3 = useMergedState(activeKey || defaultActiveFirst && ((_childList$ = childList[0]) === null || _childList$ === void 0 ? void 0 : _childList$.key), {\n    value: activeKey\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      mergedActiveKey = _useMergedState4[0],\n      setMergedActiveKey = _useMergedState4[1];\n\n  var onActive = useMemoCallback(function (key) {\n    setMergedActiveKey(key);\n  });\n  var onInactive = useMemoCallback(function () {\n    setMergedActiveKey(undefined);\n  });\n  useImperativeHandle(ref, function () {\n    return {\n      list: containerRef.current,\n      focus: function focus(options) {\n        var _childList$find;\n\n        var shouldFocusKey = mergedActiveKey !== null && mergedActiveKey !== void 0 ? mergedActiveKey : (_childList$find = childList.find(function (node) {\n          return !node.props.disabled;\n        })) === null || _childList$find === void 0 ? void 0 : _childList$find.key;\n\n        if (shouldFocusKey) {\n          var _containerRef$current, _containerRef$current2, _containerRef$current3;\n\n          (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : (_containerRef$current2 = _containerRef$current.querySelector(\"li[data-menu-id='\".concat(getMenuId(uuid, shouldFocusKey), \"']\"))) === null || _containerRef$current2 === void 0 ? void 0 : (_containerRef$current3 = _containerRef$current2.focus) === null || _containerRef$current3 === void 0 ? void 0 : _containerRef$current3.call(_containerRef$current2, options);\n        }\n      }\n    };\n  }); // ======================== Select ========================\n  // >>>>> Select keys\n\n  var _useMergedState5 = useMergedState(defaultSelectedKeys || [], {\n    value: selectedKeys,\n    // Legacy convert key to array\n    postState: function postState(keys) {\n      if (Array.isArray(keys)) {\n        return keys;\n      }\n\n      if (keys === null || keys === undefined) {\n        return EMPTY_LIST;\n      }\n\n      return [keys];\n    }\n  }),\n      _useMergedState6 = _slicedToArray(_useMergedState5, 2),\n      mergedSelectKeys = _useMergedState6[0],\n      setMergedSelectKeys = _useMergedState6[1]; // >>>>> Trigger select\n\n\n  var triggerSelection = function triggerSelection(info) {\n    if (selectable) {\n      // Insert or Remove\n      var targetKey = info.key;\n      var exist = mergedSelectKeys.includes(targetKey);\n      var newSelectKeys;\n\n      if (multiple) {\n        if (exist) {\n          newSelectKeys = mergedSelectKeys.filter(function (key) {\n            return key !== targetKey;\n          });\n        } else {\n          newSelectKeys = [].concat(_toConsumableArray(mergedSelectKeys), [targetKey]);\n        }\n      } else {\n        newSelectKeys = [targetKey];\n      }\n\n      setMergedSelectKeys(newSelectKeys); // Trigger event\n\n      var selectInfo = _objectSpread(_objectSpread({}, info), {}, {\n        selectedKeys: newSelectKeys\n      });\n\n      if (exist) {\n        onDeselect === null || onDeselect === void 0 ? void 0 : onDeselect(selectInfo);\n      } else {\n        onSelect === null || onSelect === void 0 ? void 0 : onSelect(selectInfo);\n      }\n    } // Whatever selectable, always close it\n\n\n    if (!multiple && mergedOpenKeys.length && internalMode !== 'inline') {\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }; // ========================= Open =========================\n\n  /**\n   * Click for item. SubMenu do not have selection status\n   */\n\n\n  var onInternalClick = useMemoCallback(function (info) {\n    onClick === null || onClick === void 0 ? void 0 : onClick(warnItemProp(info));\n    triggerSelection(info);\n  });\n  var onInternalOpenChange = useMemoCallback(function (key, open) {\n    var newOpenKeys = mergedOpenKeys.filter(function (k) {\n      return k !== key;\n    });\n\n    if (open) {\n      newOpenKeys.push(key);\n    } else if (internalMode !== 'inline') {\n      // We need find all related popup to close\n      var subPathKeys = getSubPathKeys(key);\n      newOpenKeys = newOpenKeys.filter(function (k) {\n        return !subPathKeys.has(k);\n      });\n    }\n\n    if (!isEqual(mergedOpenKeys, newOpenKeys, true)) {\n      triggerOpenKeys(newOpenKeys, true);\n    }\n  });\n  var getInternalPopupContainer = useMemoCallback(getPopupContainer); // ==================== Accessibility =====================\n\n  var triggerAccessibilityOpen = function triggerAccessibilityOpen(key, open) {\n    var nextOpen = open !== null && open !== void 0 ? open : !mergedOpenKeys.includes(key);\n    onInternalOpenChange(key, nextOpen);\n  };\n\n  var onInternalKeyDown = useAccessibility(internalMode, mergedActiveKey, isRtl, uuid, containerRef, getKeys, getKeyPath, setMergedActiveKey, triggerAccessibilityOpen, onKeyDown); // ======================== Effect ========================\n\n  React.useEffect(function () {\n    setMounted(true);\n  }, []); // ======================= Context ========================\n\n  var privateContext = React.useMemo(function () {\n    return {\n      _internalRenderMenuItem: _internalRenderMenuItem,\n      _internalRenderSubMenuItem: _internalRenderSubMenuItem\n    };\n  }, [_internalRenderMenuItem, _internalRenderSubMenuItem]); // ======================== Render ========================\n  // >>>>> Children\n\n  var wrappedChildList = internalMode !== 'horizontal' || disabledOverflow ? childList : // Need wrap for overflow dropdown that do not response for open\n  childList.map(function (child, index) {\n    return (\n      /*#__PURE__*/\n      // Always wrap provider to avoid sub node re-mount\n      React.createElement(MenuContextProvider, {\n        key: child.key,\n        overflowDisabled: index > lastVisibleIndex\n      }, child)\n    );\n  }); // >>>>> Container\n\n  var container = /*#__PURE__*/React.createElement(Overflow, _extends({\n    id: id,\n    ref: containerRef,\n    prefixCls: \"\".concat(prefixCls, \"-overflow\"),\n    component: \"ul\",\n    itemComponent: MenuItem,\n    className: classNames(prefixCls, \"\".concat(prefixCls, \"-root\"), \"\".concat(prefixCls, \"-\").concat(internalMode), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-inline-collapsed\"), internalInlineCollapsed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), isRtl), _classNames), rootClassName),\n    dir: direction,\n    style: style,\n    role: \"menu\",\n    tabIndex: tabIndex,\n    data: wrappedChildList,\n    renderRawItem: function renderRawItem(node) {\n      return node;\n    },\n    renderRawRest: function renderRawRest(omitItems) {\n      // We use origin list since wrapped list use context to prevent open\n      var len = omitItems.length;\n      var originOmitItems = len ? childList.slice(-len) : null;\n      return /*#__PURE__*/React.createElement(SubMenu, {\n        eventKey: OVERFLOW_KEY,\n        title: overflowedIndicator,\n        disabled: allVisible,\n        internalPopupClose: len === 0,\n        popupClassName: overflowedIndicatorPopupClassName\n      }, originOmitItems);\n    },\n    maxCount: internalMode !== 'horizontal' || disabledOverflow ? Overflow.INVALIDATE : Overflow.RESPONSIVE,\n    ssr: \"full\",\n    \"data-menu-list\": true,\n    onVisibleChange: function onVisibleChange(newLastIndex) {\n      setLastVisibleIndex(newLastIndex);\n    },\n    onKeyDown: onInternalKeyDown\n  }, restProps)); // >>>>> Render\n\n  return /*#__PURE__*/React.createElement(PrivateContext.Provider, {\n    value: privateContext\n  }, /*#__PURE__*/React.createElement(IdContext.Provider, {\n    value: uuid\n  }, /*#__PURE__*/React.createElement(MenuContextProvider, {\n    prefixCls: prefixCls,\n    rootClassName: rootClassName,\n    mode: internalMode,\n    openKeys: mergedOpenKeys,\n    rtl: isRtl // Disabled\n    ,\n    disabled: disabled // Motion\n    ,\n    motion: mounted ? motion : null,\n    defaultMotions: mounted ? defaultMotions : null // Active\n    ,\n    activeKey: mergedActiveKey,\n    onActive: onActive,\n    onInactive: onInactive // Selection\n    ,\n    selectedKeys: mergedSelectKeys // Level\n    ,\n    inlineIndent: inlineIndent // Popup\n    ,\n    subMenuOpenDelay: subMenuOpenDelay,\n    subMenuCloseDelay: subMenuCloseDelay,\n    forceSubMenuRender: forceSubMenuRender,\n    builtinPlacements: builtinPlacements,\n    triggerSubMenuAction: triggerSubMenuAction,\n    getPopupContainer: getInternalPopupContainer // Icon\n    ,\n    itemIcon: itemIcon,\n    expandIcon: expandIcon // Events\n    ,\n    onItemClick: onInternalClick,\n    onOpenChange: onInternalOpenChange\n  }, /*#__PURE__*/React.createElement(PathUserContext.Provider, {\n    value: pathUserContext\n  }, container), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none'\n    },\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(PathRegisterContext.Provider, {\n    value: registerPathContext\n  }, childList)))));\n});\nexport default Menu;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-menu/es/Menu.js"],"names":["_extends","_defineProperty","_objectSpread","_toConsumableArray","_slicedToArray","_objectWithoutProperties","_excluded","classNames","Overflow","useMergedState","warning","React","useImperativeHandle","flushSync","isEqual","getMenuId","IdContext","MenuContextProvider","PathRegisterContext","PathUserContext","PrivateContext","useAccessibility","useKeyRecords","OVERFLOW_KEY","useMemoCallback","useUUID","MenuItem","SubMenu","parseItems","warnItemProp","EMPTY_LIST","Menu","forwardRef","props","ref","_childList$","_classNames","_ref","_ref$prefixCls","prefixCls","rootClassName","style","className","_ref$tabIndex","tabIndex","items","children","direction","id","_ref$mode","mode","inlineCollapsed","disabled","disabledOverflow","_ref$subMenuOpenDelay","subMenuOpenDelay","_ref$subMenuCloseDela","subMenuCloseDelay","forceSubMenuRender","defaultOpenKeys","openKeys","activeKey","defaultActiveFirst","_ref$selectable","selectable","_ref$multiple","multiple","defaultSelectedKeys","selectedKeys","onSelect","onDeselect","_ref$inlineIndent","inlineIndent","motion","defaultMotions","_ref$triggerSubMenuAc","triggerSubMenuAction","builtinPlacements","itemIcon","expandIcon","_ref$overflowedIndica","overflowedIndicator","overflowedIndicatorPopupClassName","getPopupContainer","onClick","onOpenChange","onKeyDown","openAnimation","openTransitionName","_internalRenderMenuItem","_internalRenderSubMenuItem","restProps","childList","useMemo","_React$useState","useState","_React$useState2","mounted","setMounted","containerRef","useRef","uuid","isRtl","process","env","NODE_ENV","_useMergedState","value","postState","keys","_useMergedState2","mergedOpenKeys","setMergedOpenKeys","triggerOpenKeys","forceFlush","arguments","length","undefined","doUpdate","_React$useState3","_React$useState4","inlineCacheOpenKeys","setInlineCacheOpenKeys","mountRef","_React$useMemo","_React$useMemo2","mergedMode","mergedInlineCollapsed","isInlineMode","_React$useState5","_React$useState6","internalMode","setInternalMode","_React$useState7","_React$useState8","internalInlineCollapsed","setInternalInlineCollapsed","useEffect","current","_React$useState9","_React$useState10","lastVisibleIndex","setLastVisibleIndex","allVisible","_useKeyRecords","registerPath","unregisterPath","refreshOverflowKeys","isSubPathKey","getKeyPath","getKeys","getSubPathKeys","registerPathContext","pathUserContext","slice","map","child","key","_useMergedState3","_useMergedState4","mergedActiveKey","setMergedActiveKey","onActive","onInactive","list","focus","options","_childList$find","shouldFocusKey","find","node","_containerRef$current","_containerRef$current2","_containerRef$current3","querySelector","concat","call","_useMergedState5","Array","isArray","_useMergedState6","mergedSelectKeys","setMergedSelectKeys","triggerSelection","info","targetKey","exist","includes","newSelectKeys","filter","selectInfo","onInternalClick","onInternalOpenChange","open","newOpenKeys","k","push","subPathKeys","has","getInternalPopupContainer","triggerAccessibilityOpen","nextOpen","onInternalKeyDown","privateContext","wrappedChildList","index","createElement","overflowDisabled","container","component","itemComponent","dir","role","data","renderRawItem","renderRawRest","omitItems","len","originOmitItems","eventKey","title","internalPopupClose","popupClassName","maxCount","INVALIDATE","RESPONSIVE","ssr","onVisibleChange","newLastIndex","Provider","rtl","onItemClick","display"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"rootClassName\", \"style\", \"className\", \"tabIndex\", \"items\", \"children\", \"direction\", \"id\", \"mode\", \"inlineCollapsed\", \"disabled\", \"disabledOverflow\", \"subMenuOpenDelay\", \"subMenuCloseDelay\", \"forceSubMenuRender\", \"defaultOpenKeys\", \"openKeys\", \"activeKey\", \"defaultActiveFirst\", \"selectable\", \"multiple\", \"defaultSelectedKeys\", \"selectedKeys\", \"onSelect\", \"onDeselect\", \"inlineIndent\", \"motion\", \"defaultMotions\", \"triggerSubMenuAction\", \"builtinPlacements\", \"itemIcon\", \"expandIcon\", \"overflowedIndicator\", \"overflowedIndicatorPopupClassName\", \"getPopupContainer\", \"onClick\", \"onOpenChange\", \"onKeyDown\", \"openAnimation\", \"openTransitionName\", \"_internalRenderMenuItem\", \"_internalRenderSubMenuItem\"];\nimport classNames from 'classnames';\nimport Overflow from 'rc-overflow';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { useImperativeHandle } from 'react';\nimport { flushSync } from 'react-dom';\nimport isEqual from \"rc-util/es/isEqual\";\nimport { getMenuId, IdContext } from \"./context/IdContext\";\nimport MenuContextProvider from \"./context/MenuContext\";\nimport { PathRegisterContext, PathUserContext } from \"./context/PathContext\";\nimport PrivateContext from \"./context/PrivateContext\";\nimport useAccessibility from \"./hooks/useAccessibility\";\nimport useKeyRecords, { OVERFLOW_KEY } from \"./hooks/useKeyRecords\";\nimport useMemoCallback from \"./hooks/useMemoCallback\";\nimport useUUID from \"./hooks/useUUID\";\nimport MenuItem from \"./MenuItem\";\nimport SubMenu from \"./SubMenu\";\nimport { parseItems } from \"./utils/nodeUtil\";\nimport { warnItemProp } from \"./utils/warnUtil\";\n\n/**\n * Menu modify after refactor:\n * ## Add\n * - disabled\n *\n * ## Remove\n * - openTransitionName\n * - openAnimation\n * - onDestroy\n * - siderCollapsed: Seems antd do not use this prop (Need test in antd)\n * - collapsedWidth: Seems this logic should be handle by antd Layout.Sider\n */\n\n// optimize for render\nvar EMPTY_LIST = [];\nvar Menu = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _childList$, _classNames;\n  var _ref = props,\n    _ref$prefixCls = _ref.prefixCls,\n    prefixCls = _ref$prefixCls === void 0 ? 'rc-menu' : _ref$prefixCls,\n    rootClassName = _ref.rootClassName,\n    style = _ref.style,\n    className = _ref.className,\n    _ref$tabIndex = _ref.tabIndex,\n    tabIndex = _ref$tabIndex === void 0 ? 0 : _ref$tabIndex,\n    items = _ref.items,\n    children = _ref.children,\n    direction = _ref.direction,\n    id = _ref.id,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'vertical' : _ref$mode,\n    inlineCollapsed = _ref.inlineCollapsed,\n    disabled = _ref.disabled,\n    disabledOverflow = _ref.disabledOverflow,\n    _ref$subMenuOpenDelay = _ref.subMenuOpenDelay,\n    subMenuOpenDelay = _ref$subMenuOpenDelay === void 0 ? 0.1 : _ref$subMenuOpenDelay,\n    _ref$subMenuCloseDela = _ref.subMenuCloseDelay,\n    subMenuCloseDelay = _ref$subMenuCloseDela === void 0 ? 0.1 : _ref$subMenuCloseDela,\n    forceSubMenuRender = _ref.forceSubMenuRender,\n    defaultOpenKeys = _ref.defaultOpenKeys,\n    openKeys = _ref.openKeys,\n    activeKey = _ref.activeKey,\n    defaultActiveFirst = _ref.defaultActiveFirst,\n    _ref$selectable = _ref.selectable,\n    selectable = _ref$selectable === void 0 ? true : _ref$selectable,\n    _ref$multiple = _ref.multiple,\n    multiple = _ref$multiple === void 0 ? false : _ref$multiple,\n    defaultSelectedKeys = _ref.defaultSelectedKeys,\n    selectedKeys = _ref.selectedKeys,\n    onSelect = _ref.onSelect,\n    onDeselect = _ref.onDeselect,\n    _ref$inlineIndent = _ref.inlineIndent,\n    inlineIndent = _ref$inlineIndent === void 0 ? 24 : _ref$inlineIndent,\n    motion = _ref.motion,\n    defaultMotions = _ref.defaultMotions,\n    _ref$triggerSubMenuAc = _ref.triggerSubMenuAction,\n    triggerSubMenuAction = _ref$triggerSubMenuAc === void 0 ? 'hover' : _ref$triggerSubMenuAc,\n    builtinPlacements = _ref.builtinPlacements,\n    itemIcon = _ref.itemIcon,\n    expandIcon = _ref.expandIcon,\n    _ref$overflowedIndica = _ref.overflowedIndicator,\n    overflowedIndicator = _ref$overflowedIndica === void 0 ? '...' : _ref$overflowedIndica,\n    overflowedIndicatorPopupClassName = _ref.overflowedIndicatorPopupClassName,\n    getPopupContainer = _ref.getPopupContainer,\n    onClick = _ref.onClick,\n    onOpenChange = _ref.onOpenChange,\n    onKeyDown = _ref.onKeyDown,\n    openAnimation = _ref.openAnimation,\n    openTransitionName = _ref.openTransitionName,\n    _internalRenderMenuItem = _ref._internalRenderMenuItem,\n    _internalRenderSubMenuItem = _ref._internalRenderSubMenuItem,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  var childList = React.useMemo(function () {\n    return parseItems(children, items, EMPTY_LIST);\n  }, [children, items]);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mounted = _React$useState2[0],\n    setMounted = _React$useState2[1];\n  var containerRef = React.useRef();\n  var uuid = useUUID(id);\n  var isRtl = direction === 'rtl';\n\n  // ========================= Warn =========================\n  if (process.env.NODE_ENV !== 'production') {\n    warning(!openAnimation && !openTransitionName, '`openAnimation` and `openTransitionName` is removed. Please use `motion` or `defaultMotion` instead.');\n  }\n\n  // ========================= Open =========================\n  var _useMergedState = useMergedState(defaultOpenKeys, {\n      value: openKeys,\n      postState: function postState(keys) {\n        return keys || EMPTY_LIST;\n      }\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedOpenKeys = _useMergedState2[0],\n    setMergedOpenKeys = _useMergedState2[1];\n\n  // React 18 will merge mouse event which means we open key will not sync\n  // ref: https://github.com/ant-design/ant-design/issues/38818\n  var triggerOpenKeys = function triggerOpenKeys(keys) {\n    var forceFlush = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    function doUpdate() {\n      setMergedOpenKeys(keys);\n      onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(keys);\n    }\n    if (forceFlush) {\n      flushSync(doUpdate);\n    } else {\n      doUpdate();\n    }\n  };\n\n  // >>>>> Cache & Reset open keys when inlineCollapsed changed\n  var _React$useState3 = React.useState(mergedOpenKeys),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    inlineCacheOpenKeys = _React$useState4[0],\n    setInlineCacheOpenKeys = _React$useState4[1];\n  var mountRef = React.useRef(false);\n\n  // ========================= Mode =========================\n  var _React$useMemo = React.useMemo(function () {\n      if ((mode === 'inline' || mode === 'vertical') && inlineCollapsed) {\n        return ['vertical', inlineCollapsed];\n      }\n      return [mode, false];\n    }, [mode, inlineCollapsed]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    mergedMode = _React$useMemo2[0],\n    mergedInlineCollapsed = _React$useMemo2[1];\n  var isInlineMode = mergedMode === 'inline';\n  var _React$useState5 = React.useState(mergedMode),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    internalMode = _React$useState6[0],\n    setInternalMode = _React$useState6[1];\n  var _React$useState7 = React.useState(mergedInlineCollapsed),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    internalInlineCollapsed = _React$useState8[0],\n    setInternalInlineCollapsed = _React$useState8[1];\n  React.useEffect(function () {\n    setInternalMode(mergedMode);\n    setInternalInlineCollapsed(mergedInlineCollapsed);\n    if (!mountRef.current) {\n      return;\n    }\n    // Synchronously update MergedOpenKeys\n    if (isInlineMode) {\n      setMergedOpenKeys(inlineCacheOpenKeys);\n    } else {\n      // Trigger open event in case its in control\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }, [mergedMode, mergedInlineCollapsed]);\n\n  // ====================== Responsive ======================\n  var _React$useState9 = React.useState(0),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    lastVisibleIndex = _React$useState10[0],\n    setLastVisibleIndex = _React$useState10[1];\n  var allVisible = lastVisibleIndex >= childList.length - 1 || internalMode !== 'horizontal' || disabledOverflow;\n\n  // Cache\n  React.useEffect(function () {\n    if (isInlineMode) {\n      setInlineCacheOpenKeys(mergedOpenKeys);\n    }\n  }, [mergedOpenKeys]);\n  React.useEffect(function () {\n    mountRef.current = true;\n    return function () {\n      mountRef.current = false;\n    };\n  }, []);\n\n  // ========================= Path =========================\n  var _useKeyRecords = useKeyRecords(),\n    registerPath = _useKeyRecords.registerPath,\n    unregisterPath = _useKeyRecords.unregisterPath,\n    refreshOverflowKeys = _useKeyRecords.refreshOverflowKeys,\n    isSubPathKey = _useKeyRecords.isSubPathKey,\n    getKeyPath = _useKeyRecords.getKeyPath,\n    getKeys = _useKeyRecords.getKeys,\n    getSubPathKeys = _useKeyRecords.getSubPathKeys;\n  var registerPathContext = React.useMemo(function () {\n    return {\n      registerPath: registerPath,\n      unregisterPath: unregisterPath\n    };\n  }, [registerPath, unregisterPath]);\n  var pathUserContext = React.useMemo(function () {\n    return {\n      isSubPathKey: isSubPathKey\n    };\n  }, [isSubPathKey]);\n  React.useEffect(function () {\n    refreshOverflowKeys(allVisible ? EMPTY_LIST : childList.slice(lastVisibleIndex + 1).map(function (child) {\n      return child.key;\n    }));\n  }, [lastVisibleIndex, allVisible]);\n\n  // ======================== Active ========================\n  var _useMergedState3 = useMergedState(activeKey || defaultActiveFirst && ((_childList$ = childList[0]) === null || _childList$ === void 0 ? void 0 : _childList$.key), {\n      value: activeKey\n    }),\n    _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n    mergedActiveKey = _useMergedState4[0],\n    setMergedActiveKey = _useMergedState4[1];\n  var onActive = useMemoCallback(function (key) {\n    setMergedActiveKey(key);\n  });\n  var onInactive = useMemoCallback(function () {\n    setMergedActiveKey(undefined);\n  });\n  useImperativeHandle(ref, function () {\n    return {\n      list: containerRef.current,\n      focus: function focus(options) {\n        var _childList$find;\n        var shouldFocusKey = mergedActiveKey !== null && mergedActiveKey !== void 0 ? mergedActiveKey : (_childList$find = childList.find(function (node) {\n          return !node.props.disabled;\n        })) === null || _childList$find === void 0 ? void 0 : _childList$find.key;\n        if (shouldFocusKey) {\n          var _containerRef$current, _containerRef$current2, _containerRef$current3;\n          (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : (_containerRef$current2 = _containerRef$current.querySelector(\"li[data-menu-id='\".concat(getMenuId(uuid, shouldFocusKey), \"']\"))) === null || _containerRef$current2 === void 0 ? void 0 : (_containerRef$current3 = _containerRef$current2.focus) === null || _containerRef$current3 === void 0 ? void 0 : _containerRef$current3.call(_containerRef$current2, options);\n        }\n      }\n    };\n  });\n\n  // ======================== Select ========================\n  // >>>>> Select keys\n  var _useMergedState5 = useMergedState(defaultSelectedKeys || [], {\n      value: selectedKeys,\n      // Legacy convert key to array\n      postState: function postState(keys) {\n        if (Array.isArray(keys)) {\n          return keys;\n        }\n        if (keys === null || keys === undefined) {\n          return EMPTY_LIST;\n        }\n        return [keys];\n      }\n    }),\n    _useMergedState6 = _slicedToArray(_useMergedState5, 2),\n    mergedSelectKeys = _useMergedState6[0],\n    setMergedSelectKeys = _useMergedState6[1];\n\n  // >>>>> Trigger select\n  var triggerSelection = function triggerSelection(info) {\n    if (selectable) {\n      // Insert or Remove\n      var targetKey = info.key;\n      var exist = mergedSelectKeys.includes(targetKey);\n      var newSelectKeys;\n      if (multiple) {\n        if (exist) {\n          newSelectKeys = mergedSelectKeys.filter(function (key) {\n            return key !== targetKey;\n          });\n        } else {\n          newSelectKeys = [].concat(_toConsumableArray(mergedSelectKeys), [targetKey]);\n        }\n      } else {\n        newSelectKeys = [targetKey];\n      }\n      setMergedSelectKeys(newSelectKeys);\n\n      // Trigger event\n      var selectInfo = _objectSpread(_objectSpread({}, info), {}, {\n        selectedKeys: newSelectKeys\n      });\n      if (exist) {\n        onDeselect === null || onDeselect === void 0 ? void 0 : onDeselect(selectInfo);\n      } else {\n        onSelect === null || onSelect === void 0 ? void 0 : onSelect(selectInfo);\n      }\n    }\n\n    // Whatever selectable, always close it\n    if (!multiple && mergedOpenKeys.length && internalMode !== 'inline') {\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  };\n\n  // ========================= Open =========================\n  /**\n   * Click for item. SubMenu do not have selection status\n   */\n  var onInternalClick = useMemoCallback(function (info) {\n    onClick === null || onClick === void 0 ? void 0 : onClick(warnItemProp(info));\n    triggerSelection(info);\n  });\n  var onInternalOpenChange = useMemoCallback(function (key, open) {\n    var newOpenKeys = mergedOpenKeys.filter(function (k) {\n      return k !== key;\n    });\n    if (open) {\n      newOpenKeys.push(key);\n    } else if (internalMode !== 'inline') {\n      // We need find all related popup to close\n      var subPathKeys = getSubPathKeys(key);\n      newOpenKeys = newOpenKeys.filter(function (k) {\n        return !subPathKeys.has(k);\n      });\n    }\n    if (!isEqual(mergedOpenKeys, newOpenKeys, true)) {\n      triggerOpenKeys(newOpenKeys, true);\n    }\n  });\n  var getInternalPopupContainer = useMemoCallback(getPopupContainer);\n\n  // ==================== Accessibility =====================\n  var triggerAccessibilityOpen = function triggerAccessibilityOpen(key, open) {\n    var nextOpen = open !== null && open !== void 0 ? open : !mergedOpenKeys.includes(key);\n    onInternalOpenChange(key, nextOpen);\n  };\n  var onInternalKeyDown = useAccessibility(internalMode, mergedActiveKey, isRtl, uuid, containerRef, getKeys, getKeyPath, setMergedActiveKey, triggerAccessibilityOpen, onKeyDown);\n\n  // ======================== Effect ========================\n  React.useEffect(function () {\n    setMounted(true);\n  }, []);\n\n  // ======================= Context ========================\n  var privateContext = React.useMemo(function () {\n    return {\n      _internalRenderMenuItem: _internalRenderMenuItem,\n      _internalRenderSubMenuItem: _internalRenderSubMenuItem\n    };\n  }, [_internalRenderMenuItem, _internalRenderSubMenuItem]);\n\n  // ======================== Render ========================\n\n  // >>>>> Children\n  var wrappedChildList = internalMode !== 'horizontal' || disabledOverflow ? childList :\n  // Need wrap for overflow dropdown that do not response for open\n  childList.map(function (child, index) {\n    return (\n      /*#__PURE__*/\n      // Always wrap provider to avoid sub node re-mount\n      React.createElement(MenuContextProvider, {\n        key: child.key,\n        overflowDisabled: index > lastVisibleIndex\n      }, child)\n    );\n  });\n\n  // >>>>> Container\n  var container = /*#__PURE__*/React.createElement(Overflow, _extends({\n    id: id,\n    ref: containerRef,\n    prefixCls: \"\".concat(prefixCls, \"-overflow\"),\n    component: \"ul\",\n    itemComponent: MenuItem,\n    className: classNames(prefixCls, \"\".concat(prefixCls, \"-root\"), \"\".concat(prefixCls, \"-\").concat(internalMode), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-inline-collapsed\"), internalInlineCollapsed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), isRtl), _classNames), rootClassName),\n    dir: direction,\n    style: style,\n    role: \"menu\",\n    tabIndex: tabIndex,\n    data: wrappedChildList,\n    renderRawItem: function renderRawItem(node) {\n      return node;\n    },\n    renderRawRest: function renderRawRest(omitItems) {\n      // We use origin list since wrapped list use context to prevent open\n      var len = omitItems.length;\n      var originOmitItems = len ? childList.slice(-len) : null;\n      return /*#__PURE__*/React.createElement(SubMenu, {\n        eventKey: OVERFLOW_KEY,\n        title: overflowedIndicator,\n        disabled: allVisible,\n        internalPopupClose: len === 0,\n        popupClassName: overflowedIndicatorPopupClassName\n      }, originOmitItems);\n    },\n    maxCount: internalMode !== 'horizontal' || disabledOverflow ? Overflow.INVALIDATE : Overflow.RESPONSIVE,\n    ssr: \"full\",\n    \"data-menu-list\": true,\n    onVisibleChange: function onVisibleChange(newLastIndex) {\n      setLastVisibleIndex(newLastIndex);\n    },\n    onKeyDown: onInternalKeyDown\n  }, restProps));\n\n  // >>>>> Render\n  return /*#__PURE__*/React.createElement(PrivateContext.Provider, {\n    value: privateContext\n  }, /*#__PURE__*/React.createElement(IdContext.Provider, {\n    value: uuid\n  }, /*#__PURE__*/React.createElement(MenuContextProvider, {\n    prefixCls: prefixCls,\n    rootClassName: rootClassName,\n    mode: internalMode,\n    openKeys: mergedOpenKeys,\n    rtl: isRtl\n    // Disabled\n    ,\n    disabled: disabled\n    // Motion\n    ,\n    motion: mounted ? motion : null,\n    defaultMotions: mounted ? defaultMotions : null\n    // Active\n    ,\n    activeKey: mergedActiveKey,\n    onActive: onActive,\n    onInactive: onInactive\n    // Selection\n    ,\n    selectedKeys: mergedSelectKeys\n    // Level\n    ,\n    inlineIndent: inlineIndent\n    // Popup\n    ,\n    subMenuOpenDelay: subMenuOpenDelay,\n    subMenuCloseDelay: subMenuCloseDelay,\n    forceSubMenuRender: forceSubMenuRender,\n    builtinPlacements: builtinPlacements,\n    triggerSubMenuAction: triggerSubMenuAction,\n    getPopupContainer: getInternalPopupContainer\n    // Icon\n    ,\n    itemIcon: itemIcon,\n    expandIcon: expandIcon\n    // Events\n    ,\n    onItemClick: onInternalClick,\n    onOpenChange: onInternalOpenChange\n  }, /*#__PURE__*/React.createElement(PathUserContext.Provider, {\n    value: pathUserContext\n  }, container), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none'\n    },\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(PathRegisterContext.Provider, {\n    value: registerPathContext\n  }, childList)))));\n});\nexport default Menu;"]},"metadata":{},"sourceType":"module"}