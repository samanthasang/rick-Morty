{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport Input from \"./Input\";\nimport { getTitle } from \"../utils/commonUtil\";\n\nvar SingleSelector = function SingleSelector(props) {\n  var inputElement = props.inputElement,\n      prefixCls = props.prefixCls,\n      id = props.id,\n      inputRef = props.inputRef,\n      disabled = props.disabled,\n      autoFocus = props.autoFocus,\n      autoComplete = props.autoComplete,\n      activeDescendantId = props.activeDescendantId,\n      mode = props.mode,\n      open = props.open,\n      values = props.values,\n      placeholder = props.placeholder,\n      tabIndex = props.tabIndex,\n      showSearch = props.showSearch,\n      searchValue = props.searchValue,\n      activeValue = props.activeValue,\n      maxLength = props.maxLength,\n      onInputKeyDown = props.onInputKeyDown,\n      onInputMouseDown = props.onInputMouseDown,\n      onInputChange = props.onInputChange,\n      onInputPaste = props.onInputPaste,\n      onInputCompositionStart = props.onInputCompositionStart,\n      onInputCompositionEnd = props.onInputCompositionEnd,\n      title = props.title;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      inputChanged = _React$useState2[0],\n      setInputChanged = _React$useState2[1];\n\n  var combobox = mode === 'combobox';\n  var inputEditable = combobox || showSearch;\n  var item = values[0];\n  var inputValue = searchValue || '';\n\n  if (combobox && activeValue && !inputChanged) {\n    inputValue = activeValue;\n  }\n\n  React.useEffect(function () {\n    if (combobox) {\n      setInputChanged(false);\n    }\n  }, [combobox, activeValue]); // Not show text when closed expect combobox mode\n\n  var hasTextInput = mode !== 'combobox' && !open && !showSearch ? false : !!inputValue; // Get title of selection item\n\n  var selectionTitle = title === undefined ? getTitle(item) : title;\n\n  var renderPlaceholder = function renderPlaceholder() {\n    if (item) {\n      return null;\n    }\n\n    var hiddenStyle = hasTextInput ? {\n      visibility: 'hidden'\n    } : undefined;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-selection-placeholder\"),\n      style: hiddenStyle\n    }, placeholder);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-search\")\n  }, /*#__PURE__*/React.createElement(Input, {\n    ref: inputRef,\n    prefixCls: prefixCls,\n    id: id,\n    open: open,\n    inputElement: inputElement,\n    disabled: disabled,\n    autoFocus: autoFocus,\n    autoComplete: autoComplete,\n    editable: inputEditable,\n    activeDescendantId: activeDescendantId,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onMouseDown: onInputMouseDown,\n    onChange: function onChange(e) {\n      setInputChanged(true);\n      onInputChange(e);\n    },\n    onPaste: onInputPaste,\n    onCompositionStart: onInputCompositionStart,\n    onCompositionEnd: onInputCompositionEnd,\n    tabIndex: tabIndex,\n    attrs: pickAttrs(props, true),\n    maxLength: combobox ? maxLength : undefined\n  })), !combobox && item ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-item\"),\n    title: selectionTitle // 当 Select 已经选中选项时，还需 selection 隐藏但留在原地占位\n    // https://github.com/ant-design/ant-design/issues/27688\n    // https://github.com/ant-design/ant-design/issues/41530\n    ,\n    style: hasTextInput ? {\n      visibility: 'hidden'\n    } : undefined\n  }, item.label) : null, renderPlaceholder());\n};\n\nexport default SingleSelector;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-select/es/Selector/SingleSelector.js"],"names":["_slicedToArray","React","pickAttrs","Input","getTitle","SingleSelector","props","inputElement","prefixCls","id","inputRef","disabled","autoFocus","autoComplete","activeDescendantId","mode","open","values","placeholder","tabIndex","showSearch","searchValue","activeValue","maxLength","onInputKeyDown","onInputMouseDown","onInputChange","onInputPaste","onInputCompositionStart","onInputCompositionEnd","title","_React$useState","useState","_React$useState2","inputChanged","setInputChanged","combobox","inputEditable","item","inputValue","useEffect","hasTextInput","selectionTitle","undefined","renderPlaceholder","hiddenStyle","visibility","createElement","className","concat","style","Fragment","ref","editable","value","onKeyDown","onMouseDown","onChange","e","onPaste","onCompositionStart","onCompositionEnd","attrs","label"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport Input from \"./Input\";\nimport { getTitle } from \"../utils/commonUtil\";\nvar SingleSelector = function SingleSelector(props) {\n  var inputElement = props.inputElement,\n    prefixCls = props.prefixCls,\n    id = props.id,\n    inputRef = props.inputRef,\n    disabled = props.disabled,\n    autoFocus = props.autoFocus,\n    autoComplete = props.autoComplete,\n    activeDescendantId = props.activeDescendantId,\n    mode = props.mode,\n    open = props.open,\n    values = props.values,\n    placeholder = props.placeholder,\n    tabIndex = props.tabIndex,\n    showSearch = props.showSearch,\n    searchValue = props.searchValue,\n    activeValue = props.activeValue,\n    maxLength = props.maxLength,\n    onInputKeyDown = props.onInputKeyDown,\n    onInputMouseDown = props.onInputMouseDown,\n    onInputChange = props.onInputChange,\n    onInputPaste = props.onInputPaste,\n    onInputCompositionStart = props.onInputCompositionStart,\n    onInputCompositionEnd = props.onInputCompositionEnd,\n    title = props.title;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    inputChanged = _React$useState2[0],\n    setInputChanged = _React$useState2[1];\n  var combobox = mode === 'combobox';\n  var inputEditable = combobox || showSearch;\n  var item = values[0];\n  var inputValue = searchValue || '';\n  if (combobox && activeValue && !inputChanged) {\n    inputValue = activeValue;\n  }\n  React.useEffect(function () {\n    if (combobox) {\n      setInputChanged(false);\n    }\n  }, [combobox, activeValue]);\n\n  // Not show text when closed expect combobox mode\n  var hasTextInput = mode !== 'combobox' && !open && !showSearch ? false : !!inputValue;\n\n  // Get title of selection item\n  var selectionTitle = title === undefined ? getTitle(item) : title;\n  var renderPlaceholder = function renderPlaceholder() {\n    if (item) {\n      return null;\n    }\n    var hiddenStyle = hasTextInput ? {\n      visibility: 'hidden'\n    } : undefined;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-selection-placeholder\"),\n      style: hiddenStyle\n    }, placeholder);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-search\")\n  }, /*#__PURE__*/React.createElement(Input, {\n    ref: inputRef,\n    prefixCls: prefixCls,\n    id: id,\n    open: open,\n    inputElement: inputElement,\n    disabled: disabled,\n    autoFocus: autoFocus,\n    autoComplete: autoComplete,\n    editable: inputEditable,\n    activeDescendantId: activeDescendantId,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onMouseDown: onInputMouseDown,\n    onChange: function onChange(e) {\n      setInputChanged(true);\n      onInputChange(e);\n    },\n    onPaste: onInputPaste,\n    onCompositionStart: onInputCompositionStart,\n    onCompositionEnd: onInputCompositionEnd,\n    tabIndex: tabIndex,\n    attrs: pickAttrs(props, true),\n    maxLength: combobox ? maxLength : undefined\n  })), !combobox && item ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-item\"),\n    title: selectionTitle\n    // 当 Select 已经选中选项时，还需 selection 隐藏但留在原地占位\n    // https://github.com/ant-design/ant-design/issues/27688\n    // https://github.com/ant-design/ant-design/issues/41530\n    ,\n    style: hasTextInput ? {\n      visibility: 'hidden'\n    } : undefined\n  }, item.label) : null, renderPlaceholder());\n};\nexport default SingleSelector;"]},"metadata":{},"sourceType":"module"}