{"ast":null,"code":"import raf from \"rc-util/es/raf\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport Tooltip from '../tooltip';\nvar SliderTooltip = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var open = props.open;\n  var innerRef = useRef(null);\n  var rafRef = useRef(null);\n\n  function cancelKeepAlign() {\n    raf.cancel(rafRef.current);\n    rafRef.current = null;\n  }\n\n  function keepAlign() {\n    rafRef.current = raf(function () {\n      var _a;\n\n      (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.forceAlign();\n      rafRef.current = null;\n    });\n  }\n\n  React.useEffect(function () {\n    if (open) {\n      keepAlign();\n    } else {\n      cancelKeepAlign();\n    }\n\n    return cancelKeepAlign;\n  }, [open, props.title]);\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    ref: composeRef(innerRef, ref)\n  }, props));\n});\nexport default SliderTooltip;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/slider/SliderTooltip.js"],"names":["raf","composeRef","React","useRef","Tooltip","SliderTooltip","forwardRef","props","ref","open","innerRef","rafRef","cancelKeepAlign","cancel","current","keepAlign","_a","forceAlign","useEffect","title","createElement","Object","assign"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,gBAAhB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,IAAMC,aAAa,GAAG,aAAaH,KAAK,CAACI,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAClE,MACEC,IADF,GAEIF,KAFJ,CACEE,IADF;AAGA,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AACA,MAAMQ,MAAM,GAAGR,MAAM,CAAC,IAAD,CAArB;;AACA,WAASS,eAAT,GAA2B;AACzBZ,IAAAA,GAAG,CAACa,MAAJ,CAAWF,MAAM,CAACG,OAAlB;AACAH,IAAAA,MAAM,CAACG,OAAP,GAAiB,IAAjB;AACD;;AACD,WAASC,SAAT,GAAqB;AACnBJ,IAAAA,MAAM,CAACG,OAAP,GAAiBd,GAAG,CAAC,YAAM;AACzB,UAAIgB,EAAJ;;AACA,OAACA,EAAE,GAAGN,QAAQ,CAACI,OAAf,MAA4B,IAA5B,IAAoCE,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACC,UAAH,EAA7D;AACAN,MAAAA,MAAM,CAACG,OAAP,GAAiB,IAAjB;AACD,KAJmB,CAApB;AAKD;;AACDZ,EAAAA,KAAK,CAACgB,SAAN,CAAgB,YAAM;AACpB,QAAIT,IAAJ,EAAU;AACRM,MAAAA,SAAS;AACV,KAFD,MAEO;AACLH,MAAAA,eAAe;AAChB;;AACD,WAAOA,eAAP;AACD,GAPD,EAOG,CAACH,IAAD,EAAOF,KAAK,CAACY,KAAb,CAPH;AAQA,SAAO,aAAajB,KAAK,CAACkB,aAAN,CAAoBhB,OAApB,EAA6BiB,MAAM,CAACC,MAAP,CAAc;AAC7Dd,IAAAA,GAAG,EAAEP,UAAU,CAACS,QAAD,EAAWF,GAAX;AAD8C,GAAd,EAE9CD,KAF8C,CAA7B,CAApB;AAGD,CA5BkC,CAAnC;AA6BA,eAAeF,aAAf","sourcesContent":["import raf from \"rc-util/es/raf\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport Tooltip from '../tooltip';\nconst SliderTooltip = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    open\n  } = props;\n  const innerRef = useRef(null);\n  const rafRef = useRef(null);\n  function cancelKeepAlign() {\n    raf.cancel(rafRef.current);\n    rafRef.current = null;\n  }\n  function keepAlign() {\n    rafRef.current = raf(() => {\n      var _a;\n      (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.forceAlign();\n      rafRef.current = null;\n    });\n  }\n  React.useEffect(() => {\n    if (open) {\n      keepAlign();\n    } else {\n      cancelKeepAlign();\n    }\n    return cancelKeepAlign;\n  }, [open, props.title]);\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    ref: composeRef(innerRef, ref)\n  }, props));\n});\nexport default SliderTooltip;"]},"metadata":{},"sourceType":"module"}