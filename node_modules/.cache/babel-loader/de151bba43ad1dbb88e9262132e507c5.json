{"ast":null,"code":"import * as React from 'react';\nexport default function useEvent(callback) {\n  var fnRef = React.useRef();\n  fnRef.current = callback;\n  var memoFn = React.useCallback(function () {\n    var _fnRef$current;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (_fnRef$current = fnRef.current) === null || _fnRef$current === void 0 ? void 0 : _fnRef$current.call.apply(_fnRef$current, [fnRef].concat(args));\n  }, []);\n  return memoFn;\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-util/es/hooks/useEvent.js"],"names":["React","useEvent","callback","fnRef","useRef","current","memoFn","useCallback","_fnRef$current","_len","arguments","length","args","Array","_key","call","apply","concat"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,eAAe,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AACzC,MAAIC,KAAK,GAAGH,KAAK,CAACI,MAAN,EAAZ;AACAD,EAAAA,KAAK,CAACE,OAAN,GAAgBH,QAAhB;AACA,MAAII,MAAM,GAAGN,KAAK,CAACO,WAAN,CAAkB,YAAY;AACzC,QAAIC,cAAJ;;AACA,SAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;AACvFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AACD,WAAO,CAACN,cAAc,GAAGL,KAAK,CAACE,OAAxB,MAAqC,IAArC,IAA6CG,cAAc,KAAK,KAAK,CAArE,GAAyE,KAAK,CAA9E,GAAkFA,cAAc,CAACO,IAAf,CAAoBC,KAApB,CAA0BR,cAA1B,EAA0C,CAACL,KAAD,EAAQc,MAAR,CAAeL,IAAf,CAA1C,CAAzF;AACD,GANY,EAMV,EANU,CAAb;AAOA,SAAON,MAAP;AACD","sourcesContent":["import * as React from 'react';\nexport default function useEvent(callback) {\n  var fnRef = React.useRef();\n  fnRef.current = callback;\n  var memoFn = React.useCallback(function () {\n    var _fnRef$current;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (_fnRef$current = fnRef.current) === null || _fnRef$current === void 0 ? void 0 : _fnRef$current.call.apply(_fnRef$current, [fnRef].concat(args));\n  }, []);\n  return memoFn;\n}"]},"metadata":{},"sourceType":"module"}