{"ast":null,"code":"/** converting camel-cased strings to be lowercase and link it with Separato */\nexport function toLowercaseSeparator(key) {\n  return key.replace(/([A-Z])/g, '-$1').toLowerCase();\n}\nexport function getStyleStr(style) {\n  return Object.keys(style).map(key => `${toLowercaseSeparator(key)}: ${style[key]};`).join(' ');\n}\n/** Returns the ratio of the device's physical pixel resolution to the css pixel resolution */\n\nexport function getPixelRatio() {\n  return window.devicePixelRatio || 1;\n}\n/** Rotate with the watermark as the center point */\n\nexport function rotateWatermark(ctx, rotateX, rotateY, rotate) {\n  ctx.translate(rotateX, rotateY);\n  ctx.rotate(Math.PI / 180 * Number(rotate));\n  ctx.translate(-rotateX, -rotateY);\n}\n/** Whether to re-render the watermark */\n\nexport const reRendering = (mutation, watermarkElement) => {\n  let flag = false; // Whether to delete the watermark node\n\n  if (mutation.removedNodes.length) {\n    flag = Array.from(mutation.removedNodes).some(node => node === watermarkElement);\n  } // Whether the watermark dom property value has been modified\n\n\n  if (mutation.type === 'attributes' && mutation.target === watermarkElement) {\n    flag = true;\n  }\n\n  return flag;\n};","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/watermark/utils.js"],"names":["toLowercaseSeparator","key","replace","toLowerCase","getStyleStr","style","Object","keys","map","join","getPixelRatio","window","devicePixelRatio","rotateWatermark","ctx","rotateX","rotateY","rotate","translate","Math","PI","Number","reRendering","mutation","watermarkElement","flag","removedNodes","length","Array","from","some","node","type","target"],"mappings":"AAAA;AACA,OAAO,SAASA,oBAAT,CAA8BC,GAA9B,EAAmC;AACxC,SAAOA,GAAG,CAACC,OAAJ,CAAY,UAAZ,EAAwB,KAAxB,EAA+BC,WAA/B,EAAP;AACD;AACD,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjC,SAAOC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,GAAnB,CAAuBP,GAAG,IAAK,GAAED,oBAAoB,CAACC,GAAD,CAAM,KAAII,KAAK,CAACJ,GAAD,CAAM,GAA1E,EAA8EQ,IAA9E,CAAmF,GAAnF,CAAP;AACD;AACD;;AACA,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAOC,MAAM,CAACC,gBAAP,IAA2B,CAAlC;AACD;AACD;;AACA,OAAO,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgDC,MAAhD,EAAwD;AAC7DH,EAAAA,GAAG,CAACI,SAAJ,CAAcH,OAAd,EAAuBC,OAAvB;AACAF,EAAAA,GAAG,CAACG,MAAJ,CAAWE,IAAI,CAACC,EAAL,GAAU,GAAV,GAAgBC,MAAM,CAACJ,MAAD,CAAjC;AACAH,EAAAA,GAAG,CAACI,SAAJ,CAAc,CAACH,OAAf,EAAwB,CAACC,OAAzB;AACD;AACD;;AACA,OAAO,MAAMM,WAAW,GAAG,CAACC,QAAD,EAAWC,gBAAX,KAAgC;AACzD,MAAIC,IAAI,GAAG,KAAX,CADyD,CAEzD;;AACA,MAAIF,QAAQ,CAACG,YAAT,CAAsBC,MAA1B,EAAkC;AAChCF,IAAAA,IAAI,GAAGG,KAAK,CAACC,IAAN,CAAWN,QAAQ,CAACG,YAApB,EAAkCI,IAAlC,CAAuCC,IAAI,IAAIA,IAAI,KAAKP,gBAAxD,CAAP;AACD,GALwD,CAMzD;;;AACA,MAAID,QAAQ,CAACS,IAAT,KAAkB,YAAlB,IAAkCT,QAAQ,CAACU,MAAT,KAAoBT,gBAA1D,EAA4E;AAC1EC,IAAAA,IAAI,GAAG,IAAP;AACD;;AACD,SAAOA,IAAP;AACD,CAXM","sourcesContent":["/** converting camel-cased strings to be lowercase and link it with Separato */\nexport function toLowercaseSeparator(key) {\n  return key.replace(/([A-Z])/g, '-$1').toLowerCase();\n}\nexport function getStyleStr(style) {\n  return Object.keys(style).map(key => `${toLowercaseSeparator(key)}: ${style[key]};`).join(' ');\n}\n/** Returns the ratio of the device's physical pixel resolution to the css pixel resolution */\nexport function getPixelRatio() {\n  return window.devicePixelRatio || 1;\n}\n/** Rotate with the watermark as the center point */\nexport function rotateWatermark(ctx, rotateX, rotateY, rotate) {\n  ctx.translate(rotateX, rotateY);\n  ctx.rotate(Math.PI / 180 * Number(rotate));\n  ctx.translate(-rotateX, -rotateY);\n}\n/** Whether to re-render the watermark */\nexport const reRendering = (mutation, watermarkElement) => {\n  let flag = false;\n  // Whether to delete the watermark node\n  if (mutation.removedNodes.length) {\n    flag = Array.from(mutation.removedNodes).some(node => node === watermarkElement);\n  }\n  // Whether the watermark dom property value has been modified\n  if (mutation.type === 'attributes' && mutation.target === watermarkElement) {\n    flag = true;\n  }\n  return flag;\n};"]},"metadata":{},"sourceType":"module"}