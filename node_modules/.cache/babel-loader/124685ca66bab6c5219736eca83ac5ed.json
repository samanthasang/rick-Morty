{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { Row } from '../../grid';\nimport FormItemInput from '../FormItemInput';\nimport FormItemLabel from '../FormItemLabel';\nimport { FormContext, FormItemInputContext, NoStyleItemContext } from '../context';\nimport useDebounce from '../hooks/useDebounce';\nconst iconMap = {\n  success: CheckCircleFilled,\n  warning: ExclamationCircleFilled,\n  error: CloseCircleFilled,\n  validating: LoadingOutlined\n};\nexport default function ItemHolder(props) {\n  const {\n    prefixCls,\n    className,\n    rootClassName,\n    style,\n    help,\n    errors,\n    warnings,\n    validateStatus,\n    meta,\n    hasFeedback,\n    hidden,\n    children,\n    fieldId,\n    required,\n    isRequired,\n    onSubItemMetaChange\n  } = props,\n        restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"style\", \"help\", \"errors\", \"warnings\", \"validateStatus\", \"meta\", \"hasFeedback\", \"hidden\", \"children\", \"fieldId\", \"required\", \"isRequired\", \"onSubItemMetaChange\"]);\n\n  const itemPrefixCls = `${prefixCls}-item`;\n  const {\n    requiredMark\n  } = React.useContext(FormContext); // ======================== Margin ========================\n\n  const itemRef = React.useRef(null);\n  const debounceErrors = useDebounce(errors);\n  const debounceWarnings = useDebounce(warnings);\n  const hasHelp = help !== undefined && help !== null;\n  const hasError = !!(hasHelp || errors.length || warnings.length);\n  const isOnScreen = !!itemRef.current && isVisible(itemRef.current);\n  const [marginBottom, setMarginBottom] = React.useState(null);\n  useLayoutEffect(() => {\n    if (hasError && itemRef.current) {\n      // The element must be part of the DOMTree to use getComputedStyle\n      // https://stackoverflow.com/questions/35360711/getcomputedstyle-returns-a-cssstyledeclaration-but-all-properties-are-empty-on-a\n      const itemStyle = getComputedStyle(itemRef.current);\n      setMarginBottom(parseInt(itemStyle.marginBottom, 10));\n    }\n  }, [hasError, isOnScreen]);\n\n  const onErrorVisibleChanged = nextVisible => {\n    if (!nextVisible) {\n      setMarginBottom(null);\n    }\n  }; // ======================== Status ========================\n\n\n  const getValidateState = function () {\n    let isDebounce = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let status = '';\n\n    const _errors = isDebounce ? debounceErrors : meta.errors;\n\n    const _warnings = isDebounce ? debounceWarnings : meta.warnings;\n\n    if (validateStatus !== undefined) {\n      status = validateStatus;\n    } else if (meta.validating) {\n      status = 'validating';\n    } else if (_errors.length) {\n      status = 'error';\n    } else if (_warnings.length) {\n      status = 'warning';\n    } else if (meta.touched || hasFeedback && meta.validated) {\n      // success feedback should display when pass hasFeedback prop and current value is valid value\n      status = 'success';\n    }\n\n    return status;\n  };\n\n  const mergedValidateStatus = getValidateState();\n  const formItemStatusContext = React.useMemo(() => {\n    let feedbackIcon;\n\n    if (hasFeedback) {\n      const IconNode = mergedValidateStatus && iconMap[mergedValidateStatus];\n      feedbackIcon = IconNode ? /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(`${itemPrefixCls}-feedback-icon`, `${itemPrefixCls}-feedback-icon-${mergedValidateStatus}`)\n      }, /*#__PURE__*/React.createElement(IconNode, null)) : null;\n    }\n\n    return {\n      status: mergedValidateStatus,\n      errors,\n      warnings,\n      hasFeedback,\n      feedbackIcon,\n      isFormItemInput: true\n    };\n  }, [mergedValidateStatus, hasFeedback]); // ======================== Render ========================\n\n  const itemClassName = classNames(itemPrefixCls, className, rootClassName, {\n    [`${itemPrefixCls}-with-help`]: hasHelp || debounceErrors.length || debounceWarnings.length,\n    // Status\n    [`${itemPrefixCls}-has-feedback`]: mergedValidateStatus && hasFeedback,\n    [`${itemPrefixCls}-has-success`]: mergedValidateStatus === 'success',\n    [`${itemPrefixCls}-has-warning`]: mergedValidateStatus === 'warning',\n    [`${itemPrefixCls}-has-error`]: mergedValidateStatus === 'error',\n    [`${itemPrefixCls}-is-validating`]: mergedValidateStatus === 'validating',\n    [`${itemPrefixCls}-hidden`]: hidden\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: itemClassName,\n    style: style,\n    ref: itemRef\n  }, /*#__PURE__*/React.createElement(Row, Object.assign({\n    className: `${itemPrefixCls}-row`\n  }, omit(restProps, ['_internalItemRender', 'colon', 'dependencies', 'extra', 'fieldKey', 'getValueFromEvent', 'getValueProps', 'htmlFor', 'id', 'initialValue', 'isListField', 'label', 'labelAlign', 'labelCol', 'labelWrap', 'messageVariables', 'name', 'normalize', 'noStyle', 'preserve', 'requiredMark', 'rules', 'shouldUpdate', 'trigger', 'tooltip', 'validateFirst', 'validateTrigger', 'valuePropName', 'wrapperCol'])), /*#__PURE__*/React.createElement(FormItemLabel, Object.assign({\n    htmlFor: fieldId\n  }, props, {\n    requiredMark: requiredMark,\n    required: required !== null && required !== void 0 ? required : isRequired,\n    prefixCls: prefixCls\n  })), /*#__PURE__*/React.createElement(FormItemInput, Object.assign({}, props, meta, {\n    errors: debounceErrors,\n    warnings: debounceWarnings,\n    prefixCls: prefixCls,\n    status: mergedValidateStatus,\n    help: help,\n    marginBottom: marginBottom,\n    onErrorVisibleChanged: onErrorVisibleChanged\n  }), /*#__PURE__*/React.createElement(NoStyleItemContext.Provider, {\n    value: onSubItemMetaChange\n  }, /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: formItemStatusContext\n  }, children)))), !!marginBottom && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${itemPrefixCls}-margin-offset`,\n    style: {\n      marginBottom: -marginBottom\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/form/FormItem/ItemHolder.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","CheckCircleFilled","CloseCircleFilled","ExclamationCircleFilled","LoadingOutlined","classNames","useLayoutEffect","isVisible","omit","React","Row","FormItemInput","FormItemLabel","FormContext","FormItemInputContext","NoStyleItemContext","useDebounce","iconMap","success","warning","error","validating","ItemHolder","props","prefixCls","className","rootClassName","style","help","errors","warnings","validateStatus","meta","hasFeedback","hidden","children","fieldId","required","isRequired","onSubItemMetaChange","restProps","itemPrefixCls","requiredMark","useContext","itemRef","useRef","debounceErrors","debounceWarnings","hasHelp","undefined","hasError","isOnScreen","current","marginBottom","setMarginBottom","useState","itemStyle","getComputedStyle","parseInt","onErrorVisibleChanged","nextVisible","getValidateState","isDebounce","arguments","status","_errors","_warnings","touched","validated","mergedValidateStatus","formItemStatusContext","useMemo","feedbackIcon","IconNode","createElement","isFormItemInput","itemClassName","ref","assign","htmlFor","Provider","value"],"mappings":"AAAA,IAAIA,MAAM,GAAG,QAAQ,KAAKA,MAAb,IAAuB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClD,MAAIC,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIC,CAAT,IAAcH,CAAd,EAAiB,IAAII,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,CAArC,EAAwCG,CAAxC,KAA8CF,CAAC,CAACO,OAAF,CAAUL,CAAV,IAAe,CAAjE,EAAoED,CAAC,CAACC,CAAD,CAAD,GAAOH,CAAC,CAACG,CAAD,CAAR;;AACrF,MAAIH,CAAC,IAAI,IAAL,IAAa,OAAOI,MAAM,CAACK,qBAAd,KAAwC,UAAzD,EAAqE,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWP,CAAC,GAAGC,MAAM,CAACK,qBAAP,CAA6BT,CAA7B,CAApB,EAAqDU,CAAC,GAAGP,CAAC,CAACQ,MAA3D,EAAmED,CAAC,EAApE,EAAwE;AAC3I,QAAIT,CAAC,CAACO,OAAF,CAAUL,CAAC,CAACO,CAAD,CAAX,IAAkB,CAAlB,IAAuBN,MAAM,CAACC,SAAP,CAAiBO,oBAAjB,CAAsCL,IAAtC,CAA2CP,CAA3C,EAA8CG,CAAC,CAACO,CAAD,CAA/C,CAA3B,EAAgFR,CAAC,CAACC,CAAC,CAACO,CAAD,CAAF,CAAD,GAAUV,CAAC,CAACG,CAAC,CAACO,CAAD,CAAF,CAAX;AACjF;AACD,SAAOR,CAAP;AACD,CAPD;;AAQA,OAAOW,iBAAP,MAA8B,8CAA9B;AACA,OAAOC,iBAAP,MAA8B,8CAA9B;AACA,OAAOC,uBAAP,MAAoC,oDAApC;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,oBAAtB,EAA4CC,kBAA5C,QAAsE,YAAtE;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAEjB,iBADK;AAEdkB,EAAAA,OAAO,EAAEhB,uBAFK;AAGdiB,EAAAA,KAAK,EAAElB,iBAHO;AAIdmB,EAAAA,UAAU,EAAEjB;AAJE,CAAhB;AAMA,eAAe,SAASkB,UAAT,CAAoBC,KAApB,EAA2B;AACxC,QAAM;AACFC,IAAAA,SADE;AAEFC,IAAAA,SAFE;AAGFC,IAAAA,aAHE;AAIFC,IAAAA,KAJE;AAKFC,IAAAA,IALE;AAMFC,IAAAA,MANE;AAOFC,IAAAA,QAPE;AAQFC,IAAAA,cARE;AASFC,IAAAA,IATE;AAUFC,IAAAA,WAVE;AAWFC,IAAAA,MAXE;AAYFC,IAAAA,QAZE;AAaFC,IAAAA,OAbE;AAcFC,IAAAA,QAdE;AAeFC,IAAAA,UAfE;AAgBFC,IAAAA;AAhBE,MAiBAhB,KAjBN;AAAA,QAkBEiB,SAAS,GAAGrD,MAAM,CAACoC,KAAD,EAAQ,CAAC,WAAD,EAAc,WAAd,EAA2B,eAA3B,EAA4C,OAA5C,EAAqD,MAArD,EAA6D,QAA7D,EAAuE,UAAvE,EAAmF,gBAAnF,EAAqG,MAArG,EAA6G,aAA7G,EAA4H,QAA5H,EAAsI,UAAtI,EAAkJ,SAAlJ,EAA6J,UAA7J,EAAyK,YAAzK,EAAuL,qBAAvL,CAAR,CAlBpB;;AAmBA,QAAMkB,aAAa,GAAI,GAAEjB,SAAU,OAAnC;AACA,QAAM;AACJkB,IAAAA;AADI,MAEFjC,KAAK,CAACkC,UAAN,CAAiB9B,WAAjB,CAFJ,CArBwC,CAwBxC;;AACA,QAAM+B,OAAO,GAAGnC,KAAK,CAACoC,MAAN,CAAa,IAAb,CAAhB;AACA,QAAMC,cAAc,GAAG9B,WAAW,CAACa,MAAD,CAAlC;AACA,QAAMkB,gBAAgB,GAAG/B,WAAW,CAACc,QAAD,CAApC;AACA,QAAMkB,OAAO,GAAGpB,IAAI,KAAKqB,SAAT,IAAsBrB,IAAI,KAAK,IAA/C;AACA,QAAMsB,QAAQ,GAAG,CAAC,EAAEF,OAAO,IAAInB,MAAM,CAAC9B,MAAlB,IAA4B+B,QAAQ,CAAC/B,MAAvC,CAAlB;AACA,QAAMoD,UAAU,GAAG,CAAC,CAACP,OAAO,CAACQ,OAAV,IAAqB7C,SAAS,CAACqC,OAAO,CAACQ,OAAT,CAAjD;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC7C,KAAK,CAAC8C,QAAN,CAAe,IAAf,CAAxC;AACAjD,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAI4C,QAAQ,IAAIN,OAAO,CAACQ,OAAxB,EAAiC;AAC/B;AACA;AACA,YAAMI,SAAS,GAAGC,gBAAgB,CAACb,OAAO,CAACQ,OAAT,CAAlC;AACAE,MAAAA,eAAe,CAACI,QAAQ,CAACF,SAAS,CAACH,YAAX,EAAyB,EAAzB,CAAT,CAAf;AACD;AACF,GAPc,EAOZ,CAACH,QAAD,EAAWC,UAAX,CAPY,CAAf;;AAQA,QAAMQ,qBAAqB,GAAGC,WAAW,IAAI;AAC3C,QAAI,CAACA,WAAL,EAAkB;AAChBN,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GAJD,CAxCwC,CA6CxC;;;AACA,QAAMO,gBAAgB,GAAG,YAAY;AACnC,QAAIC,UAAU,GAAGC,SAAS,CAAChE,MAAV,GAAmB,CAAnB,IAAwBgE,SAAS,CAAC,CAAD,CAAT,KAAiBd,SAAzC,GAAqDc,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAArF;AACA,QAAIC,MAAM,GAAG,EAAb;;AACA,UAAMC,OAAO,GAAGH,UAAU,GAAGhB,cAAH,GAAoBd,IAAI,CAACH,MAAnD;;AACA,UAAMqC,SAAS,GAAGJ,UAAU,GAAGf,gBAAH,GAAsBf,IAAI,CAACF,QAAvD;;AACA,QAAIC,cAAc,KAAKkB,SAAvB,EAAkC;AAChCe,MAAAA,MAAM,GAAGjC,cAAT;AACD,KAFD,MAEO,IAAIC,IAAI,CAACX,UAAT,EAAqB;AAC1B2C,MAAAA,MAAM,GAAG,YAAT;AACD,KAFM,MAEA,IAAIC,OAAO,CAAClE,MAAZ,EAAoB;AACzBiE,MAAAA,MAAM,GAAG,OAAT;AACD,KAFM,MAEA,IAAIE,SAAS,CAACnE,MAAd,EAAsB;AAC3BiE,MAAAA,MAAM,GAAG,SAAT;AACD,KAFM,MAEA,IAAIhC,IAAI,CAACmC,OAAL,IAAgBlC,WAAW,IAAID,IAAI,CAACoC,SAAxC,EAAmD;AACxD;AACAJ,MAAAA,MAAM,GAAG,SAAT;AACD;;AACD,WAAOA,MAAP;AACD,GAlBD;;AAmBA,QAAMK,oBAAoB,GAAGR,gBAAgB,EAA7C;AACA,QAAMS,qBAAqB,GAAG7D,KAAK,CAAC8D,OAAN,CAAc,MAAM;AAChD,QAAIC,YAAJ;;AACA,QAAIvC,WAAJ,EAAiB;AACf,YAAMwC,QAAQ,GAAGJ,oBAAoB,IAAIpD,OAAO,CAACoD,oBAAD,CAAhD;AACAG,MAAAA,YAAY,GAAGC,QAAQ,GAAG,aAAahE,KAAK,CAACiE,aAAN,CAAoB,MAApB,EAA4B;AACjEjD,QAAAA,SAAS,EAAEpB,UAAU,CAAE,GAAEoC,aAAc,gBAAlB,EAAoC,GAAEA,aAAc,kBAAiB4B,oBAAqB,EAA1F;AAD4C,OAA5B,EAEpC,aAAa5D,KAAK,CAACiE,aAAN,CAAoBD,QAApB,EAA8B,IAA9B,CAFuB,CAAhB,GAEgC,IAFvD;AAGD;;AACD,WAAO;AACLT,MAAAA,MAAM,EAAEK,oBADH;AAELxC,MAAAA,MAFK;AAGLC,MAAAA,QAHK;AAILG,MAAAA,WAJK;AAKLuC,MAAAA,YALK;AAMLG,MAAAA,eAAe,EAAE;AANZ,KAAP;AAQD,GAhB6B,EAgB3B,CAACN,oBAAD,EAAuBpC,WAAvB,CAhB2B,CAA9B,CAlEwC,CAmFxC;;AACA,QAAM2C,aAAa,GAAGvE,UAAU,CAACoC,aAAD,EAAgBhB,SAAhB,EAA2BC,aAA3B,EAA0C;AACxE,KAAE,GAAEe,aAAc,YAAlB,GAAgCO,OAAO,IAAIF,cAAc,CAAC/C,MAA1B,IAAoCgD,gBAAgB,CAAChD,MADb;AAExE;AACA,KAAE,GAAE0C,aAAc,eAAlB,GAAmC4B,oBAAoB,IAAIpC,WAHa;AAIxE,KAAE,GAAEQ,aAAc,cAAlB,GAAkC4B,oBAAoB,KAAK,SAJa;AAKxE,KAAE,GAAE5B,aAAc,cAAlB,GAAkC4B,oBAAoB,KAAK,SALa;AAMxE,KAAE,GAAE5B,aAAc,YAAlB,GAAgC4B,oBAAoB,KAAK,OANe;AAOxE,KAAE,GAAE5B,aAAc,gBAAlB,GAAoC4B,oBAAoB,KAAK,YAPW;AAQxE,KAAE,GAAE5B,aAAc,SAAlB,GAA6BP;AAR2C,GAA1C,CAAhC;AAUA,SAAO,aAAazB,KAAK,CAACiE,aAAN,CAAoB,KAApB,EAA2B;AAC7CjD,IAAAA,SAAS,EAAEmD,aADkC;AAE7CjD,IAAAA,KAAK,EAAEA,KAFsC;AAG7CkD,IAAAA,GAAG,EAAEjC;AAHwC,GAA3B,EAIjB,aAAanC,KAAK,CAACiE,aAAN,CAAoBhE,GAApB,EAAyBlB,MAAM,CAACsF,MAAP,CAAc;AACrDrD,IAAAA,SAAS,EAAG,GAAEgB,aAAc;AADyB,GAAd,EAEtCjC,IAAI,CAACgC,SAAD,EAAY,CAAC,qBAAD,EAAwB,OAAxB,EAAiC,cAAjC,EAAiD,OAAjD,EAA0D,UAA1D,EAAsE,mBAAtE,EAA2F,eAA3F,EAA4G,SAA5G,EAAuH,IAAvH,EAA6H,cAA7H,EAA6I,aAA7I,EAA4J,OAA5J,EAAqK,YAArK,EAAmL,UAAnL,EAA+L,WAA/L,EAA4M,kBAA5M,EAAgO,MAAhO,EAAwO,WAAxO,EAAqP,SAArP,EAAgQ,UAAhQ,EAA4Q,cAA5Q,EAA4R,OAA5R,EAAqS,cAArS,EAAqT,SAArT,EAAgU,SAAhU,EAA2U,eAA3U,EAA4V,iBAA5V,EAA+W,eAA/W,EAAgY,YAAhY,CAAZ,CAFkC,CAAzB,EAEoZ,aAAa/B,KAAK,CAACiE,aAAN,CAAoB9D,aAApB,EAAmCpB,MAAM,CAACsF,MAAP,CAAc;AACheC,IAAAA,OAAO,EAAE3C;AADud,GAAd,EAEjdb,KAFid,EAE1c;AACRmB,IAAAA,YAAY,EAAEA,YADN;AAERL,IAAAA,QAAQ,EAAEA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2CA,QAA3C,GAAsDC,UAFxD;AAGRd,IAAAA,SAAS,EAAEA;AAHH,GAF0c,CAAnC,CAFja,EAQX,aAAaf,KAAK,CAACiE,aAAN,CAAoB/D,aAApB,EAAmCnB,MAAM,CAACsF,MAAP,CAAc,EAAd,EAAkBvD,KAAlB,EAAyBS,IAAzB,EAA+B;AAClFH,IAAAA,MAAM,EAAEiB,cAD0E;AAElFhB,IAAAA,QAAQ,EAAEiB,gBAFwE;AAGlFvB,IAAAA,SAAS,EAAEA,SAHuE;AAIlFwC,IAAAA,MAAM,EAAEK,oBAJ0E;AAKlFzC,IAAAA,IAAI,EAAEA,IAL4E;AAMlFyB,IAAAA,YAAY,EAAEA,YANoE;AAOlFM,IAAAA,qBAAqB,EAAEA;AAP2D,GAA/B,CAAnC,EAQd,aAAalD,KAAK,CAACiE,aAAN,CAAoB3D,kBAAkB,CAACiE,QAAvC,EAAiD;AAChEC,IAAAA,KAAK,EAAE1C;AADyD,GAAjD,EAEd,aAAa9B,KAAK,CAACiE,aAAN,CAAoB5D,oBAAoB,CAACkE,QAAzC,EAAmD;AACjEC,IAAAA,KAAK,EAAEX;AAD0D,GAAnD,EAEbnC,QAFa,CAFC,CARC,CARF,CAJI,EAwBH,CAAC,CAACkB,YAAF,IAAkB,aAAa5C,KAAK,CAACiE,aAAN,CAAoB,KAApB,EAA2B;AACzEjD,IAAAA,SAAS,EAAG,GAAEgB,aAAc,gBAD6C;AAEzEd,IAAAA,KAAK,EAAE;AACL0B,MAAAA,YAAY,EAAE,CAACA;AADV;AAFkE,GAA3B,CAxB5B,CAApB;AA8BD","sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { Row } from '../../grid';\nimport FormItemInput from '../FormItemInput';\nimport FormItemLabel from '../FormItemLabel';\nimport { FormContext, FormItemInputContext, NoStyleItemContext } from '../context';\nimport useDebounce from '../hooks/useDebounce';\nconst iconMap = {\n  success: CheckCircleFilled,\n  warning: ExclamationCircleFilled,\n  error: CloseCircleFilled,\n  validating: LoadingOutlined\n};\nexport default function ItemHolder(props) {\n  const {\n      prefixCls,\n      className,\n      rootClassName,\n      style,\n      help,\n      errors,\n      warnings,\n      validateStatus,\n      meta,\n      hasFeedback,\n      hidden,\n      children,\n      fieldId,\n      required,\n      isRequired,\n      onSubItemMetaChange\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"style\", \"help\", \"errors\", \"warnings\", \"validateStatus\", \"meta\", \"hasFeedback\", \"hidden\", \"children\", \"fieldId\", \"required\", \"isRequired\", \"onSubItemMetaChange\"]);\n  const itemPrefixCls = `${prefixCls}-item`;\n  const {\n    requiredMark\n  } = React.useContext(FormContext);\n  // ======================== Margin ========================\n  const itemRef = React.useRef(null);\n  const debounceErrors = useDebounce(errors);\n  const debounceWarnings = useDebounce(warnings);\n  const hasHelp = help !== undefined && help !== null;\n  const hasError = !!(hasHelp || errors.length || warnings.length);\n  const isOnScreen = !!itemRef.current && isVisible(itemRef.current);\n  const [marginBottom, setMarginBottom] = React.useState(null);\n  useLayoutEffect(() => {\n    if (hasError && itemRef.current) {\n      // The element must be part of the DOMTree to use getComputedStyle\n      // https://stackoverflow.com/questions/35360711/getcomputedstyle-returns-a-cssstyledeclaration-but-all-properties-are-empty-on-a\n      const itemStyle = getComputedStyle(itemRef.current);\n      setMarginBottom(parseInt(itemStyle.marginBottom, 10));\n    }\n  }, [hasError, isOnScreen]);\n  const onErrorVisibleChanged = nextVisible => {\n    if (!nextVisible) {\n      setMarginBottom(null);\n    }\n  };\n  // ======================== Status ========================\n  const getValidateState = function () {\n    let isDebounce = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let status = '';\n    const _errors = isDebounce ? debounceErrors : meta.errors;\n    const _warnings = isDebounce ? debounceWarnings : meta.warnings;\n    if (validateStatus !== undefined) {\n      status = validateStatus;\n    } else if (meta.validating) {\n      status = 'validating';\n    } else if (_errors.length) {\n      status = 'error';\n    } else if (_warnings.length) {\n      status = 'warning';\n    } else if (meta.touched || hasFeedback && meta.validated) {\n      // success feedback should display when pass hasFeedback prop and current value is valid value\n      status = 'success';\n    }\n    return status;\n  };\n  const mergedValidateStatus = getValidateState();\n  const formItemStatusContext = React.useMemo(() => {\n    let feedbackIcon;\n    if (hasFeedback) {\n      const IconNode = mergedValidateStatus && iconMap[mergedValidateStatus];\n      feedbackIcon = IconNode ? /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(`${itemPrefixCls}-feedback-icon`, `${itemPrefixCls}-feedback-icon-${mergedValidateStatus}`)\n      }, /*#__PURE__*/React.createElement(IconNode, null)) : null;\n    }\n    return {\n      status: mergedValidateStatus,\n      errors,\n      warnings,\n      hasFeedback,\n      feedbackIcon,\n      isFormItemInput: true\n    };\n  }, [mergedValidateStatus, hasFeedback]);\n  // ======================== Render ========================\n  const itemClassName = classNames(itemPrefixCls, className, rootClassName, {\n    [`${itemPrefixCls}-with-help`]: hasHelp || debounceErrors.length || debounceWarnings.length,\n    // Status\n    [`${itemPrefixCls}-has-feedback`]: mergedValidateStatus && hasFeedback,\n    [`${itemPrefixCls}-has-success`]: mergedValidateStatus === 'success',\n    [`${itemPrefixCls}-has-warning`]: mergedValidateStatus === 'warning',\n    [`${itemPrefixCls}-has-error`]: mergedValidateStatus === 'error',\n    [`${itemPrefixCls}-is-validating`]: mergedValidateStatus === 'validating',\n    [`${itemPrefixCls}-hidden`]: hidden\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: itemClassName,\n    style: style,\n    ref: itemRef\n  }, /*#__PURE__*/React.createElement(Row, Object.assign({\n    className: `${itemPrefixCls}-row`\n  }, omit(restProps, ['_internalItemRender', 'colon', 'dependencies', 'extra', 'fieldKey', 'getValueFromEvent', 'getValueProps', 'htmlFor', 'id', 'initialValue', 'isListField', 'label', 'labelAlign', 'labelCol', 'labelWrap', 'messageVariables', 'name', 'normalize', 'noStyle', 'preserve', 'requiredMark', 'rules', 'shouldUpdate', 'trigger', 'tooltip', 'validateFirst', 'validateTrigger', 'valuePropName', 'wrapperCol'])), /*#__PURE__*/React.createElement(FormItemLabel, Object.assign({\n    htmlFor: fieldId\n  }, props, {\n    requiredMark: requiredMark,\n    required: required !== null && required !== void 0 ? required : isRequired,\n    prefixCls: prefixCls\n  })), /*#__PURE__*/React.createElement(FormItemInput, Object.assign({}, props, meta, {\n    errors: debounceErrors,\n    warnings: debounceWarnings,\n    prefixCls: prefixCls,\n    status: mergedValidateStatus,\n    help: help,\n    marginBottom: marginBottom,\n    onErrorVisibleChanged: onErrorVisibleChanged\n  }), /*#__PURE__*/React.createElement(NoStyleItemContext.Provider, {\n    value: onSubItemMetaChange\n  }, /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: formItemStatusContext\n  }, children)))), !!marginBottom && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${itemPrefixCls}-margin-offset`,\n    style: {\n      marginBottom: -marginBottom\n    }\n  }));\n}"]},"metadata":{},"sourceType":"module"}