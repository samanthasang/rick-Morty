{"ast":null,"code":"import _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nexport default function usePatchElement() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      elements = _React$useState2[0],\n      setElements = _React$useState2[1];\n\n  var patchElement = React.useCallback(function (element) {\n    // append a new element to elements (and create a new ref)\n    setElements(function (originElements) {\n      return [].concat(_toConsumableArray(originElements), [element]);\n    }); // return a function that removes the new element out of elements (and create a new ref)\n    // it works a little like useEffect\n\n    return function () {\n      setElements(function (originElements) {\n        return originElements.filter(function (ele) {\n          return ele !== element;\n        });\n      });\n    };\n  }, []);\n  return [elements, patchElement];\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/_util/hooks/usePatchElement.js"],"names":["_toConsumableArray","React","usePatchElement","useState","elements","setElements","patchElement","useCallback","element","originElements","concat","filter","ele"],"mappings":";AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,eAAe,SAASC,eAAT,GAA2B;AACxC,wBAAgCD,KAAK,CAACE,QAAN,CAAe,EAAf,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,YAAY,GAAGL,KAAK,CAACM,WAAN,CAAkB,UAAAC,OAAO,EAAI;AAChD;AACAH,IAAAA,WAAW,CAAC,UAAAI,cAAc;AAAA,aAAI,GAAGC,MAAH,CAAUV,kBAAkB,CAACS,cAAD,CAA5B,EAA8C,CAACD,OAAD,CAA9C,CAAJ;AAAA,KAAf,CAAX,CAFgD,CAGhD;AACA;;AACA,WAAO,YAAM;AACXH,MAAAA,WAAW,CAAC,UAAAI,cAAc;AAAA,eAAIA,cAAc,CAACE,MAAf,CAAsB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,KAAKJ,OAAZ;AAAA,SAAzB,CAAJ;AAAA,OAAf,CAAX;AACD,KAFD;AAGD,GARoB,EAQlB,EARkB,CAArB;AASA,SAAO,CAACJ,QAAD,EAAWE,YAAX,CAAP;AACD","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nexport default function usePatchElement() {\n  const [elements, setElements] = React.useState([]);\n  const patchElement = React.useCallback(element => {\n    // append a new element to elements (and create a new ref)\n    setElements(originElements => [].concat(_toConsumableArray(originElements), [element]));\n    // return a function that removes the new element out of elements (and create a new ref)\n    // it works a little like useEffect\n    return () => {\n      setElements(originElements => originElements.filter(ele => ele !== element));\n    };\n  }, []);\n  return [elements, patchElement];\n}"]},"metadata":{},"sourceType":"module"}