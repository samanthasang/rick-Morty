{"ast":null,"code":"import genFontSizes from './genFontSizes';\n\nconst genFontMapToken = fontSize => {\n  const fontSizePairs = genFontSizes(fontSize);\n  const fontSizes = fontSizePairs.map(pair => pair.size);\n  const lineHeights = fontSizePairs.map(pair => pair.lineHeight);\n  return {\n    fontSizeSM: fontSizes[0],\n    fontSize: fontSizes[1],\n    fontSizeLG: fontSizes[2],\n    fontSizeXL: fontSizes[3],\n    fontSizeHeading1: fontSizes[6],\n    fontSizeHeading2: fontSizes[5],\n    fontSizeHeading3: fontSizes[4],\n    fontSizeHeading4: fontSizes[3],\n    fontSizeHeading5: fontSizes[2],\n    lineHeight: lineHeights[1],\n    lineHeightLG: lineHeights[2],\n    lineHeightSM: lineHeights[0],\n    lineHeightHeading1: lineHeights[6],\n    lineHeightHeading2: lineHeights[5],\n    lineHeightHeading3: lineHeights[4],\n    lineHeightHeading4: lineHeights[3],\n    lineHeightHeading5: lineHeights[2]\n  };\n};\n\nexport default genFontMapToken;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/theme/themes/shared/genFontMapToken.js"],"names":["genFontSizes","genFontMapToken","fontSize","fontSizePairs","fontSizes","map","pair","size","lineHeights","lineHeight","fontSizeSM","fontSizeLG","fontSizeXL","fontSizeHeading1","fontSizeHeading2","fontSizeHeading3","fontSizeHeading4","fontSizeHeading5","lineHeightLG","lineHeightSM","lineHeightHeading1","lineHeightHeading2","lineHeightHeading3","lineHeightHeading4","lineHeightHeading5"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;;AACA,MAAMC,eAAe,GAAGC,QAAQ,IAAI;AAClC,QAAMC,aAAa,GAAGH,YAAY,CAACE,QAAD,CAAlC;AACA,QAAME,SAAS,GAAGD,aAAa,CAACE,GAAd,CAAkBC,IAAI,IAAIA,IAAI,CAACC,IAA/B,CAAlB;AACA,QAAMC,WAAW,GAAGL,aAAa,CAACE,GAAd,CAAkBC,IAAI,IAAIA,IAAI,CAACG,UAA/B,CAApB;AACA,SAAO;AACLC,IAAAA,UAAU,EAAEN,SAAS,CAAC,CAAD,CADhB;AAELF,IAAAA,QAAQ,EAAEE,SAAS,CAAC,CAAD,CAFd;AAGLO,IAAAA,UAAU,EAAEP,SAAS,CAAC,CAAD,CAHhB;AAILQ,IAAAA,UAAU,EAAER,SAAS,CAAC,CAAD,CAJhB;AAKLS,IAAAA,gBAAgB,EAAET,SAAS,CAAC,CAAD,CALtB;AAMLU,IAAAA,gBAAgB,EAAEV,SAAS,CAAC,CAAD,CANtB;AAOLW,IAAAA,gBAAgB,EAAEX,SAAS,CAAC,CAAD,CAPtB;AAQLY,IAAAA,gBAAgB,EAAEZ,SAAS,CAAC,CAAD,CARtB;AASLa,IAAAA,gBAAgB,EAAEb,SAAS,CAAC,CAAD,CATtB;AAULK,IAAAA,UAAU,EAAED,WAAW,CAAC,CAAD,CAVlB;AAWLU,IAAAA,YAAY,EAAEV,WAAW,CAAC,CAAD,CAXpB;AAYLW,IAAAA,YAAY,EAAEX,WAAW,CAAC,CAAD,CAZpB;AAaLY,IAAAA,kBAAkB,EAAEZ,WAAW,CAAC,CAAD,CAb1B;AAcLa,IAAAA,kBAAkB,EAAEb,WAAW,CAAC,CAAD,CAd1B;AAeLc,IAAAA,kBAAkB,EAAEd,WAAW,CAAC,CAAD,CAf1B;AAgBLe,IAAAA,kBAAkB,EAAEf,WAAW,CAAC,CAAD,CAhB1B;AAiBLgB,IAAAA,kBAAkB,EAAEhB,WAAW,CAAC,CAAD;AAjB1B,GAAP;AAmBD,CAvBD;;AAwBA,eAAeP,eAAf","sourcesContent":["import genFontSizes from './genFontSizes';\nconst genFontMapToken = fontSize => {\n  const fontSizePairs = genFontSizes(fontSize);\n  const fontSizes = fontSizePairs.map(pair => pair.size);\n  const lineHeights = fontSizePairs.map(pair => pair.lineHeight);\n  return {\n    fontSizeSM: fontSizes[0],\n    fontSize: fontSizes[1],\n    fontSizeLG: fontSizes[2],\n    fontSizeXL: fontSizes[3],\n    fontSizeHeading1: fontSizes[6],\n    fontSizeHeading2: fontSizes[5],\n    fontSizeHeading3: fontSizes[4],\n    fontSizeHeading4: fontSizes[3],\n    fontSizeHeading5: fontSizes[2],\n    lineHeight: lineHeights[1],\n    lineHeightLG: lineHeights[2],\n    lineHeightSM: lineHeights[0],\n    lineHeightHeading1: lineHeights[6],\n    lineHeightHeading2: lineHeights[5],\n    lineHeightHeading3: lineHeights[4],\n    lineHeightHeading4: lineHeights[3],\n    lineHeightHeading5: lineHeights[2]\n  };\n};\nexport default genFontMapToken;"]},"metadata":{},"sourceType":"module"}