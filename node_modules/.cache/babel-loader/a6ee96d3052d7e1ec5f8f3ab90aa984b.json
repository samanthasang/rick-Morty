{"ast":null,"code":"export function isWindow(obj) {\n  return obj !== null && obj !== undefined && obj === obj.window;\n}\nexport default function getScroll(target, top) {\n  var _a, _b;\n\n  if (typeof window === 'undefined') {\n    return 0;\n  }\n\n  const method = top ? 'scrollTop' : 'scrollLeft';\n  let result = 0;\n\n  if (isWindow(target)) {\n    result = target[top ? 'pageYOffset' : 'pageXOffset'];\n  } else if (target instanceof Document) {\n    result = target.documentElement[method];\n  } else if (target instanceof HTMLElement) {\n    result = target[method];\n  } else if (target) {\n    // According to the type inference, the `target` is `never` type.\n    // Since we configured the loose mode type checking, and supports mocking the target with such shape below::\n    //    `{ documentElement: { scrollLeft: 200, scrollTop: 400 } }`,\n    //    the program may falls into this branch.\n    // Check the corresponding tests for details. Don't sure what is the real scenario this happens.\n    result = target[method];\n  }\n\n  if (target && !isWindow(target) && typeof result !== 'number') {\n    result = (_b = ((_a = target.ownerDocument) !== null && _a !== void 0 ? _a : target).documentElement) === null || _b === void 0 ? void 0 : _b[method];\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/_util/getScroll.js"],"names":["isWindow","obj","undefined","window","getScroll","target","top","_a","_b","method","result","Document","documentElement","HTMLElement","ownerDocument"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;AAC5B,SAAOA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKC,SAAxB,IAAqCD,GAAG,KAAKA,GAAG,CAACE,MAAxD;AACD;AACD,eAAe,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,GAA3B,EAAgC;AAC7C,MAAIC,EAAJ,EAAQC,EAAR;;AACA,MAAI,OAAOL,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAO,CAAP;AACD;;AACD,QAAMM,MAAM,GAAGH,GAAG,GAAG,WAAH,GAAiB,YAAnC;AACA,MAAII,MAAM,GAAG,CAAb;;AACA,MAAIV,QAAQ,CAACK,MAAD,CAAZ,EAAsB;AACpBK,IAAAA,MAAM,GAAGL,MAAM,CAACC,GAAG,GAAG,aAAH,GAAmB,aAAvB,CAAf;AACD,GAFD,MAEO,IAAID,MAAM,YAAYM,QAAtB,EAAgC;AACrCD,IAAAA,MAAM,GAAGL,MAAM,CAACO,eAAP,CAAuBH,MAAvB,CAAT;AACD,GAFM,MAEA,IAAIJ,MAAM,YAAYQ,WAAtB,EAAmC;AACxCH,IAAAA,MAAM,GAAGL,MAAM,CAACI,MAAD,CAAf;AACD,GAFM,MAEA,IAAIJ,MAAJ,EAAY;AACjB;AACA;AACA;AACA;AACA;AACAK,IAAAA,MAAM,GAAGL,MAAM,CAACI,MAAD,CAAf;AACD;;AACD,MAAIJ,MAAM,IAAI,CAACL,QAAQ,CAACK,MAAD,CAAnB,IAA+B,OAAOK,MAAP,KAAkB,QAArD,EAA+D;AAC7DA,IAAAA,MAAM,GAAG,CAACF,EAAE,GAAG,CAAC,CAACD,EAAE,GAAGF,MAAM,CAACS,aAAb,MAAgC,IAAhC,IAAwCP,EAAE,KAAK,KAAK,CAApD,GAAwDA,EAAxD,GAA6DF,MAA9D,EAAsEO,eAA5E,MAAiG,IAAjG,IAAyGJ,EAAE,KAAK,KAAK,CAArH,GAAyH,KAAK,CAA9H,GAAkIA,EAAE,CAACC,MAAD,CAA7I;AACD;;AACD,SAAOC,MAAP;AACD","sourcesContent":["export function isWindow(obj) {\n  return obj !== null && obj !== undefined && obj === obj.window;\n}\nexport default function getScroll(target, top) {\n  var _a, _b;\n  if (typeof window === 'undefined') {\n    return 0;\n  }\n  const method = top ? 'scrollTop' : 'scrollLeft';\n  let result = 0;\n  if (isWindow(target)) {\n    result = target[top ? 'pageYOffset' : 'pageXOffset'];\n  } else if (target instanceof Document) {\n    result = target.documentElement[method];\n  } else if (target instanceof HTMLElement) {\n    result = target[method];\n  } else if (target) {\n    // According to the type inference, the `target` is `never` type.\n    // Since we configured the loose mode type checking, and supports mocking the target with such shape below::\n    //    `{ documentElement: { scrollLeft: 200, scrollTop: 400 } }`,\n    //    the program may falls into this branch.\n    // Check the corresponding tests for details. Don't sure what is the real scenario this happens.\n    result = target[method];\n  }\n  if (target && !isWindow(target) && typeof result !== 'number') {\n    result = (_b = ((_a = target.ownerDocument) !== null && _a !== void 0 ? _a : target).documentElement) === null || _b === void 0 ? void 0 : _b[method];\n  }\n  return result;\n}"]},"metadata":{},"sourceType":"module"}