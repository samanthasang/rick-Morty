{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport * as React from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport channelUpdate from './channelUpdate';\n/**\n * Batcher for record any `useEffectState` need update.\n */\n\nexport function useBatcher() {\n  // Updater Trigger\n  var updateFuncRef = React.useRef(null); // Notify update\n\n  var notifyEffectUpdate = function notifyEffectUpdate(callback) {\n    if (!updateFuncRef.current) {\n      updateFuncRef.current = [];\n      channelUpdate(function () {\n        unstable_batchedUpdates(function () {\n          updateFuncRef.current.forEach(function (fn) {\n            fn();\n          });\n          updateFuncRef.current = null;\n        });\n      });\n    }\n\n    updateFuncRef.current.push(callback);\n  };\n\n  return notifyEffectUpdate;\n}\n/**\n * Trigger state update by `useLayoutEffect` to save perf.\n */\n\nexport default function useEffectState(notifyEffectUpdate, defaultValue) {\n  // Value\n  var _React$useState = React.useState(defaultValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      stateValue = _React$useState2[0],\n      setStateValue = _React$useState2[1]; // Set State\n\n\n  var setEffectVal = useEvent(function (nextValue) {\n    notifyEffectUpdate(function () {\n      setStateValue(nextValue);\n    });\n  });\n  return [stateValue, setEffectVal];\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-overflow/es/hooks/useEffectState.js"],"names":["_slicedToArray","useEvent","React","unstable_batchedUpdates","channelUpdate","useBatcher","updateFuncRef","useRef","notifyEffectUpdate","callback","current","forEach","fn","push","useEffectState","defaultValue","_React$useState","useState","_React$useState2","stateValue","setStateValue","setEffectVal","nextValue"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,uBAAT,QAAwC,WAAxC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,GAAsB;AAC3B;AACA,MAAIC,aAAa,GAAGJ,KAAK,CAACK,MAAN,CAAa,IAAb,CAApB,CAF2B,CAG3B;;AACA,MAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AAC7D,QAAI,CAACH,aAAa,CAACI,OAAnB,EAA4B;AAC1BJ,MAAAA,aAAa,CAACI,OAAd,GAAwB,EAAxB;AACAN,MAAAA,aAAa,CAAC,YAAY;AACxBD,QAAAA,uBAAuB,CAAC,YAAY;AAClCG,UAAAA,aAAa,CAACI,OAAd,CAAsBC,OAAtB,CAA8B,UAAUC,EAAV,EAAc;AAC1CA,YAAAA,EAAE;AACH,WAFD;AAGAN,UAAAA,aAAa,CAACI,OAAd,GAAwB,IAAxB;AACD,SALsB,CAAvB;AAMD,OAPY,CAAb;AAQD;;AACDJ,IAAAA,aAAa,CAACI,OAAd,CAAsBG,IAAtB,CAA2BJ,QAA3B;AACD,GAbD;;AAcA,SAAOD,kBAAP;AACD;AACD;AACA;AACA;;AACA,eAAe,SAASM,cAAT,CAAwBN,kBAAxB,EAA4CO,YAA5C,EAA0D;AACvE;AACA,MAAIC,eAAe,GAAGd,KAAK,CAACe,QAAN,CAAeF,YAAf,CAAtB;AAAA,MACEG,gBAAgB,GAAGlB,cAAc,CAACgB,eAAD,EAAkB,CAAlB,CADnC;AAAA,MAEEG,UAAU,GAAGD,gBAAgB,CAAC,CAAD,CAF/B;AAAA,MAGEE,aAAa,GAAGF,gBAAgB,CAAC,CAAD,CAHlC,CAFuE,CAMvE;;;AACA,MAAIG,YAAY,GAAGpB,QAAQ,CAAC,UAAUqB,SAAV,EAAqB;AAC/Cd,IAAAA,kBAAkB,CAAC,YAAY;AAC7BY,MAAAA,aAAa,CAACE,SAAD,CAAb;AACD,KAFiB,CAAlB;AAGD,GAJ0B,CAA3B;AAKA,SAAO,CAACH,UAAD,EAAaE,YAAb,CAAP;AACD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport * as React from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport channelUpdate from './channelUpdate';\n/**\n * Batcher for record any `useEffectState` need update.\n */\nexport function useBatcher() {\n  // Updater Trigger\n  var updateFuncRef = React.useRef(null);\n  // Notify update\n  var notifyEffectUpdate = function notifyEffectUpdate(callback) {\n    if (!updateFuncRef.current) {\n      updateFuncRef.current = [];\n      channelUpdate(function () {\n        unstable_batchedUpdates(function () {\n          updateFuncRef.current.forEach(function (fn) {\n            fn();\n          });\n          updateFuncRef.current = null;\n        });\n      });\n    }\n    updateFuncRef.current.push(callback);\n  };\n  return notifyEffectUpdate;\n}\n/**\n * Trigger state update by `useLayoutEffect` to save perf.\n */\nexport default function useEffectState(notifyEffectUpdate, defaultValue) {\n  // Value\n  var _React$useState = React.useState(defaultValue),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    stateValue = _React$useState2[0],\n    setStateValue = _React$useState2[1];\n  // Set State\n  var setEffectVal = useEvent(function (nextValue) {\n    notifyEffectUpdate(function () {\n      setStateValue(nextValue);\n    });\n  });\n  return [stateValue, setEffectVal];\n}"]},"metadata":{},"sourceType":"module"}