{"ast":null,"code":"// https://zhuanlan.zhihu.com/p/32746810\nexport default function getFontSizes(base) {\n  var fontSizes = new Array(10).fill(null).map(function (_, index) {\n    var i = index - 1;\n    var baseSize = base * Math.pow(2.71828, i / 5);\n    var intSize = index > 1 ? Math.floor(baseSize) : Math.ceil(baseSize); // Convert to even\n\n    return Math.floor(intSize / 2) * 2;\n  });\n  fontSizes[1] = base;\n  return fontSizes.map(function (size) {\n    var height = size + 8;\n    return {\n      size: size,\n      lineHeight: height / size\n    };\n  });\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/theme/themes/shared/genFontSizes.js"],"names":["getFontSizes","base","fontSizes","Array","fill","map","_","index","i","baseSize","Math","pow","intSize","floor","ceil","size","height","lineHeight"],"mappings":"AAAA;AACA,eAAe,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AACzC,MAAMC,SAAS,GAAG,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,IAAnB,EAAyBC,GAAzB,CAA6B,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAC3D,QAAMC,CAAC,GAAGD,KAAK,GAAG,CAAlB;AACA,QAAME,QAAQ,GAAGR,IAAI,GAAGS,IAAI,CAACC,GAAL,CAAS,OAAT,EAAkBH,CAAC,GAAG,CAAtB,CAAxB;AACA,QAAMI,OAAO,GAAGL,KAAK,GAAG,CAAR,GAAYG,IAAI,CAACG,KAAL,CAAWJ,QAAX,CAAZ,GAAmCC,IAAI,CAACI,IAAL,CAAUL,QAAV,CAAnD,CAH2D,CAI3D;;AACA,WAAOC,IAAI,CAACG,KAAL,CAAWD,OAAO,GAAG,CAArB,IAA0B,CAAjC;AACD,GANiB,CAAlB;AAOAV,EAAAA,SAAS,CAAC,CAAD,CAAT,GAAeD,IAAf;AACA,SAAOC,SAAS,CAACG,GAAV,CAAc,UAAAU,IAAI,EAAI;AAC3B,QAAMC,MAAM,GAAGD,IAAI,GAAG,CAAtB;AACA,WAAO;AACLA,MAAAA,IAAI,EAAJA,IADK;AAELE,MAAAA,UAAU,EAAED,MAAM,GAAGD;AAFhB,KAAP;AAID,GANM,CAAP;AAOD","sourcesContent":["// https://zhuanlan.zhihu.com/p/32746810\nexport default function getFontSizes(base) {\n  const fontSizes = new Array(10).fill(null).map((_, index) => {\n    const i = index - 1;\n    const baseSize = base * Math.pow(2.71828, i / 5);\n    const intSize = index > 1 ? Math.floor(baseSize) : Math.ceil(baseSize);\n    // Convert to even\n    return Math.floor(intSize / 2) * 2;\n  });\n  fontSizes[1] = base;\n  return fontSizes.map(size => {\n    const height = size + 8;\n    return {\n      size,\n      lineHeight: height / size\n    };\n  });\n}"]},"metadata":{},"sourceType":"module"}