{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\n/* eslint-disable import/prefer-default-export */\nimport classNames from 'classnames';\nimport { isPresetColor } from '../_util/colors';\nexport function parseColor(prefixCls, color) {\n  var isInternalColor = isPresetColor(color);\n  var className = classNames(_defineProperty({}, \"\".concat(prefixCls, \"-\").concat(color), color && isInternalColor));\n  var overlayStyle = {};\n  var arrowStyle = {};\n\n  if (color && !isInternalColor) {\n    overlayStyle.background = color; // @ts-ignore\n\n    arrowStyle['--antd-arrow-background-color'] = color;\n  }\n\n  return {\n    className: className,\n    overlayStyle: overlayStyle,\n    arrowStyle: arrowStyle\n  };\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/tooltip/util.js"],"names":["classNames","isPresetColor","parseColor","prefixCls","color","isInternalColor","className","overlayStyle","arrowStyle","background"],"mappings":";;AAAA;AACA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,KAA/B,EAAsC;AAC3C,MAAMC,eAAe,GAAGJ,aAAa,CAACG,KAAD,CAArC;AACA,MAAME,SAAS,GAAGN,UAAU,+BACtBG,SADsB,cACTC,KADS,GACCA,KAAK,IAAIC,eADV,EAA5B;AAGA,MAAME,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,EAAnB;;AACA,MAAIJ,KAAK,IAAI,CAACC,eAAd,EAA+B;AAC7BE,IAAAA,YAAY,CAACE,UAAb,GAA0BL,KAA1B,CAD6B,CAE7B;;AACAI,IAAAA,UAAU,CAAC,+BAAD,CAAV,GAA8CJ,KAA9C;AACD;;AACD,SAAO;AACLE,IAAAA,SAAS,EAATA,SADK;AAELC,IAAAA,YAAY,EAAZA,YAFK;AAGLC,IAAAA,UAAU,EAAVA;AAHK,GAAP;AAKD","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport classNames from 'classnames';\nimport { isPresetColor } from '../_util/colors';\nexport function parseColor(prefixCls, color) {\n  const isInternalColor = isPresetColor(color);\n  const className = classNames({\n    [`${prefixCls}-${color}`]: color && isInternalColor\n  });\n  const overlayStyle = {};\n  const arrowStyle = {};\n  if (color && !isInternalColor) {\n    overlayStyle.background = color;\n    // @ts-ignore\n    arrowStyle['--antd-arrow-background-color'] = color;\n  }\n  return {\n    className,\n    overlayStyle,\n    arrowStyle\n  };\n}"]},"metadata":{},"sourceType":"module"}