{"ast":null,"code":"import { TinyColor } from '@ctrl/tinycolor';\n\nfunction isStableColor(color) {\n  return color >= 0 && color <= 255;\n}\n\nfunction getAlphaColor(frontColor, backgroundColor) {\n  var _TinyColor$toRgb = new TinyColor(frontColor).toRgb(),\n      fR = _TinyColor$toRgb.r,\n      fG = _TinyColor$toRgb.g,\n      fB = _TinyColor$toRgb.b,\n      originAlpha = _TinyColor$toRgb.a;\n\n  if (originAlpha < 1) {\n    return frontColor;\n  }\n\n  var _TinyColor$toRgb2 = new TinyColor(backgroundColor).toRgb(),\n      bR = _TinyColor$toRgb2.r,\n      bG = _TinyColor$toRgb2.g,\n      bB = _TinyColor$toRgb2.b;\n\n  for (var fA = 0.01; fA <= 1; fA += 0.01) {\n    var r = Math.round((fR - bR * (1 - fA)) / fA);\n    var g = Math.round((fG - bG * (1 - fA)) / fA);\n    var b = Math.round((fB - bB * (1 - fA)) / fA);\n\n    if (isStableColor(r) && isStableColor(g) && isStableColor(b)) {\n      return new TinyColor({\n        r: r,\n        g: g,\n        b: b,\n        a: Math.round(fA * 100) / 100\n      }).toRgbString();\n    }\n  } // fallback\n\n  /* istanbul ignore next */\n\n\n  return new TinyColor({\n    r: fR,\n    g: fG,\n    b: fB,\n    a: 1\n  }).toRgbString();\n}\n\nexport default getAlphaColor;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/theme/util/getAlphaColor.js"],"names":["TinyColor","isStableColor","color","getAlphaColor","frontColor","backgroundColor","toRgb","fR","r","fG","g","fB","b","originAlpha","a","bR","bG","bB","fA","Math","round","toRgbString"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,GAA9B;AACD;;AACD,SAASC,aAAT,CAAuBC,UAAvB,EAAmCC,eAAnC,EAAoD;AAClD,yBAKI,IAAIL,SAAJ,CAAcI,UAAd,EAA0BE,KAA1B,EALJ;AAAA,MACKC,EADL,oBACEC,CADF;AAAA,MAEKC,EAFL,oBAEEC,CAFF;AAAA,MAGKC,EAHL,oBAGEC,CAHF;AAAA,MAIKC,WAJL,oBAIEC,CAJF;;AAMA,MAAID,WAAW,GAAG,CAAlB,EAAqB;AACnB,WAAOT,UAAP;AACD;;AACD,0BAII,IAAIJ,SAAJ,CAAcK,eAAd,EAA+BC,KAA/B,EAJJ;AAAA,MACKS,EADL,qBACEP,CADF;AAAA,MAEKQ,EAFL,qBAEEN,CAFF;AAAA,MAGKO,EAHL,qBAGEL,CAHF;;AAKA,OAAK,IAAIM,EAAE,GAAG,IAAd,EAAoBA,EAAE,IAAI,CAA1B,EAA6BA,EAAE,IAAI,IAAnC,EAAyC;AACvC,QAAMV,CAAC,GAAGW,IAAI,CAACC,KAAL,CAAW,CAACb,EAAE,GAAGQ,EAAE,IAAI,IAAIG,EAAR,CAAR,IAAuBA,EAAlC,CAAV;AACA,QAAMR,CAAC,GAAGS,IAAI,CAACC,KAAL,CAAW,CAACX,EAAE,GAAGO,EAAE,IAAI,IAAIE,EAAR,CAAR,IAAuBA,EAAlC,CAAV;AACA,QAAMN,CAAC,GAAGO,IAAI,CAACC,KAAL,CAAW,CAACT,EAAE,GAAGM,EAAE,IAAI,IAAIC,EAAR,CAAR,IAAuBA,EAAlC,CAAV;;AACA,QAAIjB,aAAa,CAACO,CAAD,CAAb,IAAoBP,aAAa,CAACS,CAAD,CAAjC,IAAwCT,aAAa,CAACW,CAAD,CAAzD,EAA8D;AAC5D,aAAO,IAAIZ,SAAJ,CAAc;AACnBQ,QAAAA,CAAC,EAADA,CADmB;AAEnBE,QAAAA,CAAC,EAADA,CAFmB;AAGnBE,QAAAA,CAAC,EAADA,CAHmB;AAInBE,QAAAA,CAAC,EAAEK,IAAI,CAACC,KAAL,CAAWF,EAAE,GAAG,GAAhB,IAAuB;AAJP,OAAd,EAKJG,WALI,EAAP;AAMD;AACF,GA3BiD,CA4BlD;;AACA;;;AACA,SAAO,IAAIrB,SAAJ,CAAc;AACnBQ,IAAAA,CAAC,EAAED,EADgB;AAEnBG,IAAAA,CAAC,EAAED,EAFgB;AAGnBG,IAAAA,CAAC,EAAED,EAHgB;AAInBG,IAAAA,CAAC,EAAE;AAJgB,GAAd,EAKJO,WALI,EAAP;AAMD;;AACD,eAAelB,aAAf","sourcesContent":["import { TinyColor } from '@ctrl/tinycolor';\nfunction isStableColor(color) {\n  return color >= 0 && color <= 255;\n}\nfunction getAlphaColor(frontColor, backgroundColor) {\n  const {\n    r: fR,\n    g: fG,\n    b: fB,\n    a: originAlpha\n  } = new TinyColor(frontColor).toRgb();\n  if (originAlpha < 1) {\n    return frontColor;\n  }\n  const {\n    r: bR,\n    g: bG,\n    b: bB\n  } = new TinyColor(backgroundColor).toRgb();\n  for (let fA = 0.01; fA <= 1; fA += 0.01) {\n    const r = Math.round((fR - bR * (1 - fA)) / fA);\n    const g = Math.round((fG - bG * (1 - fA)) / fA);\n    const b = Math.round((fB - bB * (1 - fA)) / fA);\n    if (isStableColor(r) && isStableColor(g) && isStableColor(b)) {\n      return new TinyColor({\n        r,\n        g,\n        b,\n        a: Math.round(fA * 100) / 100\n      }).toRgbString();\n    }\n  }\n  // fallback\n  /* istanbul ignore next */\n  return new TinyColor({\n    r: fR,\n    g: fG,\n    b: fB,\n    a: 1\n  }).toRgbString();\n}\nexport default getAlphaColor;"]},"metadata":{},"sourceType":"module"}