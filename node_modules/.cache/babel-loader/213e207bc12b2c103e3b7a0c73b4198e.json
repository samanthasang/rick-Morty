{"ast":null,"code":"export function getMotion(prefixCls, transitionName) {\n  return {\n    motionName: transitionName !== null && transitionName !== void 0 ? transitionName : `${prefixCls}-move-up`\n  };\n}\n/** Wrap message open with promise like function */\n\nexport function wrapPromiseFn(openFn) {\n  let closeFn;\n  const closePromise = new Promise(resolve => {\n    closeFn = openFn(() => {\n      resolve(true);\n    });\n  });\n\n  const result = () => {\n    closeFn === null || closeFn === void 0 ? void 0 : closeFn();\n  };\n\n  result.then = (filled, rejected) => closePromise.then(filled, rejected);\n\n  result.promise = closePromise;\n  return result;\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/message/util.js"],"names":["getMotion","prefixCls","transitionName","motionName","wrapPromiseFn","openFn","closeFn","closePromise","Promise","resolve","result","then","filled","rejected","promise"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,SAAnB,EAA8BC,cAA9B,EAA8C;AACnD,SAAO;AACLC,IAAAA,UAAU,EAAED,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuDA,cAAvD,GAAyE,GAAED,SAAU;AAD5F,GAAP;AAGD;AACD;;AACA,OAAO,SAASG,aAAT,CAAuBC,MAAvB,EAA+B;AACpC,MAAIC,OAAJ;AACA,QAAMC,YAAY,GAAG,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1CH,IAAAA,OAAO,GAAGD,MAAM,CAAC,MAAM;AACrBI,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFe,CAAhB;AAGD,GAJoB,CAArB;;AAKA,QAAMC,MAAM,GAAG,MAAM;AACnBJ,IAAAA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,EAAzD;AACD,GAFD;;AAGAI,EAAAA,MAAM,CAACC,IAAP,GAAc,CAACC,MAAD,EAASC,QAAT,KAAsBN,YAAY,CAACI,IAAb,CAAkBC,MAAlB,EAA0BC,QAA1B,CAApC;;AACAH,EAAAA,MAAM,CAACI,OAAP,GAAiBP,YAAjB;AACA,SAAOG,MAAP;AACD","sourcesContent":["export function getMotion(prefixCls, transitionName) {\n  return {\n    motionName: transitionName !== null && transitionName !== void 0 ? transitionName : `${prefixCls}-move-up`\n  };\n}\n/** Wrap message open with promise like function */\nexport function wrapPromiseFn(openFn) {\n  let closeFn;\n  const closePromise = new Promise(resolve => {\n    closeFn = openFn(() => {\n      resolve(true);\n    });\n  });\n  const result = () => {\n    closeFn === null || closeFn === void 0 ? void 0 : closeFn();\n  };\n  result.then = (filled, rejected) => closePromise.then(filled, rejected);\n  result.promise = closePromise;\n  return result;\n}"]},"metadata":{},"sourceType":"module"}