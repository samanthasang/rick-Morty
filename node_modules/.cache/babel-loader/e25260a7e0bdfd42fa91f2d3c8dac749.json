{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useRef, useEffect } from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport raf from \"rc-util/es/raf\";\nimport CacheMap from '../utils/CacheMap';\nexport default function useHeights(getKey, onItemAdd, onItemRemove) {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      updatedMark = _React$useState2[0],\n      setUpdatedMark = _React$useState2[1];\n\n  var instanceRef = useRef(new Map());\n  var heightsRef = useRef(new CacheMap());\n  var collectRafRef = useRef();\n\n  function cancelRaf() {\n    raf.cancel(collectRafRef.current);\n  }\n\n  function collectHeight() {\n    cancelRaf();\n    collectRafRef.current = raf(function () {\n      instanceRef.current.forEach(function (element, key) {\n        if (element && element.offsetParent) {\n          var htmlElement = findDOMNode(element);\n          var offsetHeight = htmlElement.offsetHeight;\n\n          if (heightsRef.current.get(key) !== offsetHeight) {\n            heightsRef.current.set(key, htmlElement.offsetHeight);\n          }\n        }\n      }); // Always trigger update mark to tell parent that should re-calculate heights when resized\n\n      setUpdatedMark(function (c) {\n        return c + 1;\n      });\n    });\n  }\n\n  function setInstanceRef(item, instance) {\n    var key = getKey(item);\n    var origin = instanceRef.current.get(key);\n\n    if (instance) {\n      instanceRef.current.set(key, instance);\n      collectHeight();\n    } else {\n      instanceRef.current.delete(key);\n    } // Instance changed\n\n\n    if (!origin !== !instance) {\n      if (instance) {\n        onItemAdd === null || onItemAdd === void 0 ? void 0 : onItemAdd(item);\n      } else {\n        onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove(item);\n      }\n    }\n  }\n\n  useEffect(function () {\n    return cancelRaf;\n  }, []);\n  return [setInstanceRef, collectHeight, heightsRef.current, updatedMark];\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-virtual-list/es/hooks/useHeights.js"],"names":["_slicedToArray","React","useRef","useEffect","findDOMNode","raf","CacheMap","useHeights","getKey","onItemAdd","onItemRemove","_React$useState","useState","_React$useState2","updatedMark","setUpdatedMark","instanceRef","Map","heightsRef","collectRafRef","cancelRaf","cancel","current","collectHeight","forEach","element","key","offsetParent","htmlElement","offsetHeight","get","set","c","setInstanceRef","item","instance","origin","delete"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useRef, useEffect } from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport raf from \"rc-util/es/raf\";\nimport CacheMap from '../utils/CacheMap';\nexport default function useHeights(getKey, onItemAdd, onItemRemove) {\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    updatedMark = _React$useState2[0],\n    setUpdatedMark = _React$useState2[1];\n  var instanceRef = useRef(new Map());\n  var heightsRef = useRef(new CacheMap());\n  var collectRafRef = useRef();\n  function cancelRaf() {\n    raf.cancel(collectRafRef.current);\n  }\n  function collectHeight() {\n    cancelRaf();\n    collectRafRef.current = raf(function () {\n      instanceRef.current.forEach(function (element, key) {\n        if (element && element.offsetParent) {\n          var htmlElement = findDOMNode(element);\n          var offsetHeight = htmlElement.offsetHeight;\n          if (heightsRef.current.get(key) !== offsetHeight) {\n            heightsRef.current.set(key, htmlElement.offsetHeight);\n          }\n        }\n      });\n      // Always trigger update mark to tell parent that should re-calculate heights when resized\n      setUpdatedMark(function (c) {\n        return c + 1;\n      });\n    });\n  }\n  function setInstanceRef(item, instance) {\n    var key = getKey(item);\n    var origin = instanceRef.current.get(key);\n    if (instance) {\n      instanceRef.current.set(key, instance);\n      collectHeight();\n    } else {\n      instanceRef.current.delete(key);\n    }\n    // Instance changed\n    if (!origin !== !instance) {\n      if (instance) {\n        onItemAdd === null || onItemAdd === void 0 ? void 0 : onItemAdd(item);\n      } else {\n        onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove(item);\n      }\n    }\n  }\n  useEffect(function () {\n    return cancelRaf;\n  }, []);\n  return [setInstanceRef, collectHeight, heightsRef.current, updatedMark];\n}"]},"metadata":{},"sourceType":"module"}