{"ast":null,"code":"import DeleteOutlined from \"@ant-design/icons/es/icons/DeleteOutlined\";\nimport DownloadOutlined from \"@ant-design/icons/es/icons/DownloadOutlined\";\nimport EyeOutlined from \"@ant-design/icons/es/icons/EyeOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport Progress from '../../progress';\nimport Tooltip from '../../tooltip';\nconst ListItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    prefixCls,\n    className,\n    style,\n    locale,\n    listType,\n    file,\n    items,\n    progress: progressProps,\n    iconRender,\n    actionIconRender,\n    itemRender,\n    isImgUrl,\n    showPreviewIcon,\n    showRemoveIcon,\n    showDownloadIcon,\n    previewIcon: customPreviewIcon,\n    removeIcon: customRemoveIcon,\n    downloadIcon: customDownloadIcon,\n    onPreview,\n    onDownload,\n    onClose\n  } = _ref;\n\n  var _a, _b; // Status: which will ignore `removed` status\n\n\n  const {\n    status\n  } = file;\n  const [mergedStatus, setMergedStatus] = React.useState(status);\n  React.useEffect(() => {\n    if (status !== 'removed') {\n      setMergedStatus(status);\n    }\n  }, [status]); // Delay to show the progress bar\n\n  const [showProgress, setShowProgress] = React.useState(false);\n  const progressRafRef = React.useRef(null);\n  React.useEffect(() => {\n    progressRafRef.current = setTimeout(() => {\n      setShowProgress(true);\n    }, 300);\n    return () => {\n      if (progressRafRef.current) {\n        clearTimeout(progressRafRef.current);\n      }\n    };\n  }, []);\n  const iconNode = iconRender(file);\n  let icon = /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-icon`\n  }, iconNode);\n\n  if (listType === 'picture' || listType === 'picture-card' || listType === 'picture-circle') {\n    if (mergedStatus === 'uploading' || !file.thumbUrl && !file.url) {\n      const uploadingClassName = classNames({\n        [`${prefixCls}-list-item-thumbnail`]: true,\n        [`${prefixCls}-list-item-file`]: mergedStatus !== 'uploading'\n      });\n      icon = /*#__PURE__*/React.createElement(\"div\", {\n        className: uploadingClassName\n      }, iconNode);\n    } else {\n      const thumbnail = (isImgUrl === null || isImgUrl === void 0 ? void 0 : isImgUrl(file)) ? /*#__PURE__*/React.createElement(\"img\", {\n        src: file.thumbUrl || file.url,\n        alt: file.name,\n        className: `${prefixCls}-list-item-image`,\n        crossOrigin: file.crossOrigin\n      }) : iconNode;\n      const aClassName = classNames({\n        [`${prefixCls}-list-item-thumbnail`]: true,\n        [`${prefixCls}-list-item-file`]: isImgUrl && !isImgUrl(file)\n      });\n      icon = /*#__PURE__*/React.createElement(\"a\", {\n        className: aClassName,\n        onClick: e => onPreview(file, e),\n        href: file.url || file.thumbUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\"\n      }, thumbnail);\n    }\n  }\n\n  const listItemClassName = classNames(`${prefixCls}-list-item`, `${prefixCls}-list-item-${mergedStatus}`);\n  const linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n  const removeIcon = showRemoveIcon ? actionIconRender((typeof customRemoveIcon === 'function' ? customRemoveIcon(file) : customRemoveIcon) || /*#__PURE__*/React.createElement(DeleteOutlined, null), () => onClose(file), prefixCls, locale.removeFile) : null;\n  const downloadIcon = showDownloadIcon && mergedStatus === 'done' ? actionIconRender((typeof customDownloadIcon === 'function' ? customDownloadIcon(file) : customDownloadIcon) || /*#__PURE__*/React.createElement(DownloadOutlined, null), () => onDownload(file), prefixCls, locale.downloadFile) : null;\n  const downloadOrDelete = listType !== 'picture-card' && listType !== 'picture-circle' && /*#__PURE__*/React.createElement(\"span\", {\n    key: \"download-delete\",\n    className: classNames(`${prefixCls}-list-item-actions`, {\n      picture: listType === 'picture'\n    })\n  }, downloadIcon, removeIcon);\n  const listItemNameClass = classNames(`${prefixCls}-list-item-name`);\n  const fileName = file.url ? [/*#__PURE__*/React.createElement(\"a\", Object.assign({\n    key: \"view\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: listItemNameClass,\n    title: file.name\n  }, linkProps, {\n    href: file.url,\n    onClick: e => onPreview(file, e)\n  }), file.name), downloadOrDelete] : [/*#__PURE__*/React.createElement(\"span\", {\n    key: \"view\",\n    className: listItemNameClass,\n    onClick: e => onPreview(file, e),\n    title: file.name\n  }, file.name), downloadOrDelete];\n  const previewStyle = {\n    pointerEvents: 'none',\n    opacity: 0.5\n  };\n  const previewIcon = showPreviewIcon ? /*#__PURE__*/React.createElement(\"a\", {\n    href: file.url || file.thumbUrl,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    style: file.url || file.thumbUrl ? undefined : previewStyle,\n    onClick: e => onPreview(file, e),\n    title: locale.previewFile\n  }, typeof customPreviewIcon === 'function' ? customPreviewIcon(file) : customPreviewIcon || /*#__PURE__*/React.createElement(EyeOutlined, null)) : null;\n  const pictureCardActions = (listType === 'picture-card' || listType === 'picture-circle') && mergedStatus !== 'uploading' && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-list-item-actions`\n  }, previewIcon, mergedStatus === 'done' && downloadIcon, removeIcon);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const rootPrefixCls = getPrefixCls();\n  const dom = /*#__PURE__*/React.createElement(\"div\", {\n    className: listItemClassName\n  }, icon, fileName, pictureCardActions, showProgress && /*#__PURE__*/React.createElement(CSSMotion, {\n    motionName: `${rootPrefixCls}-fade`,\n    visible: mergedStatus === 'uploading',\n    motionDeadline: 2000\n  }, _ref2 => {\n    let {\n      className: motionClassName\n    } = _ref2; // show loading icon if upload progress listener is disabled\n\n    const loadingProgress = 'percent' in file ? /*#__PURE__*/React.createElement(Progress, Object.assign({}, progressProps, {\n      type: \"line\",\n      percent: file.percent\n    })) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(`${prefixCls}-list-item-progress`, motionClassName)\n    }, loadingProgress);\n  }));\n  const message = file.response && typeof file.response === 'string' ? file.response : ((_a = file.error) === null || _a === void 0 ? void 0 : _a.statusText) || ((_b = file.error) === null || _b === void 0 ? void 0 : _b.message) || locale.uploadError;\n  const item = mergedStatus === 'error' ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: message,\n    getPopupContainer: node => node.parentNode\n  }, dom) : dom;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-list-item-container`, className),\n    style: style,\n    ref: ref\n  }, itemRender ? itemRender(item, file, items, {\n    download: onDownload.bind(null, file),\n    preview: onPreview.bind(null, file),\n    remove: onClose.bind(null, file)\n  }) : item);\n});\nexport default ListItem;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/upload/UploadList/ListItem.js"],"names":["DeleteOutlined","DownloadOutlined","EyeOutlined","classNames","CSSMotion","React","ConfigContext","Progress","Tooltip","ListItem","forwardRef","_ref","ref","prefixCls","className","style","locale","listType","file","items","progress","progressProps","iconRender","actionIconRender","itemRender","isImgUrl","showPreviewIcon","showRemoveIcon","showDownloadIcon","previewIcon","customPreviewIcon","removeIcon","customRemoveIcon","downloadIcon","customDownloadIcon","onPreview","onDownload","onClose","_a","_b","status","mergedStatus","setMergedStatus","useState","useEffect","showProgress","setShowProgress","progressRafRef","useRef","current","setTimeout","clearTimeout","iconNode","icon","createElement","thumbUrl","url","uploadingClassName","thumbnail","src","alt","name","crossOrigin","aClassName","onClick","e","href","target","rel","listItemClassName","linkProps","JSON","parse","removeFile","downloadFile","downloadOrDelete","key","picture","listItemNameClass","fileName","Object","assign","title","previewStyle","pointerEvents","opacity","undefined","previewFile","pictureCardActions","getPrefixCls","useContext","rootPrefixCls","dom","motionName","visible","motionDeadline","_ref2","motionClassName","loadingProgress","type","percent","message","response","error","statusText","uploadError","item","getPopupContainer","node","parentNode","download","bind","preview","remove"],"mappings":"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","sourcesContent":["import DeleteOutlined from \"@ant-design/icons/es/icons/DeleteOutlined\";\nimport DownloadOutlined from \"@ant-design/icons/es/icons/DownloadOutlined\";\nimport EyeOutlined from \"@ant-design/icons/es/icons/EyeOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport Progress from '../../progress';\nimport Tooltip from '../../tooltip';\nconst ListItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    prefixCls,\n    className,\n    style,\n    locale,\n    listType,\n    file,\n    items,\n    progress: progressProps,\n    iconRender,\n    actionIconRender,\n    itemRender,\n    isImgUrl,\n    showPreviewIcon,\n    showRemoveIcon,\n    showDownloadIcon,\n    previewIcon: customPreviewIcon,\n    removeIcon: customRemoveIcon,\n    downloadIcon: customDownloadIcon,\n    onPreview,\n    onDownload,\n    onClose\n  } = _ref;\n  var _a, _b;\n  // Status: which will ignore `removed` status\n  const {\n    status\n  } = file;\n  const [mergedStatus, setMergedStatus] = React.useState(status);\n  React.useEffect(() => {\n    if (status !== 'removed') {\n      setMergedStatus(status);\n    }\n  }, [status]);\n  // Delay to show the progress bar\n  const [showProgress, setShowProgress] = React.useState(false);\n  const progressRafRef = React.useRef(null);\n  React.useEffect(() => {\n    progressRafRef.current = setTimeout(() => {\n      setShowProgress(true);\n    }, 300);\n    return () => {\n      if (progressRafRef.current) {\n        clearTimeout(progressRafRef.current);\n      }\n    };\n  }, []);\n  const iconNode = iconRender(file);\n  let icon = /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-icon`\n  }, iconNode);\n  if (listType === 'picture' || listType === 'picture-card' || listType === 'picture-circle') {\n    if (mergedStatus === 'uploading' || !file.thumbUrl && !file.url) {\n      const uploadingClassName = classNames({\n        [`${prefixCls}-list-item-thumbnail`]: true,\n        [`${prefixCls}-list-item-file`]: mergedStatus !== 'uploading'\n      });\n      icon = /*#__PURE__*/React.createElement(\"div\", {\n        className: uploadingClassName\n      }, iconNode);\n    } else {\n      const thumbnail = (isImgUrl === null || isImgUrl === void 0 ? void 0 : isImgUrl(file)) ? /*#__PURE__*/React.createElement(\"img\", {\n        src: file.thumbUrl || file.url,\n        alt: file.name,\n        className: `${prefixCls}-list-item-image`,\n        crossOrigin: file.crossOrigin\n      }) : iconNode;\n      const aClassName = classNames({\n        [`${prefixCls}-list-item-thumbnail`]: true,\n        [`${prefixCls}-list-item-file`]: isImgUrl && !isImgUrl(file)\n      });\n      icon = /*#__PURE__*/React.createElement(\"a\", {\n        className: aClassName,\n        onClick: e => onPreview(file, e),\n        href: file.url || file.thumbUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\"\n      }, thumbnail);\n    }\n  }\n  const listItemClassName = classNames(`${prefixCls}-list-item`, `${prefixCls}-list-item-${mergedStatus}`);\n  const linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n  const removeIcon = showRemoveIcon ? actionIconRender((typeof customRemoveIcon === 'function' ? customRemoveIcon(file) : customRemoveIcon) || /*#__PURE__*/React.createElement(DeleteOutlined, null), () => onClose(file), prefixCls, locale.removeFile) : null;\n  const downloadIcon = showDownloadIcon && mergedStatus === 'done' ? actionIconRender((typeof customDownloadIcon === 'function' ? customDownloadIcon(file) : customDownloadIcon) || /*#__PURE__*/React.createElement(DownloadOutlined, null), () => onDownload(file), prefixCls, locale.downloadFile) : null;\n  const downloadOrDelete = listType !== 'picture-card' && listType !== 'picture-circle' && /*#__PURE__*/React.createElement(\"span\", {\n    key: \"download-delete\",\n    className: classNames(`${prefixCls}-list-item-actions`, {\n      picture: listType === 'picture'\n    })\n  }, downloadIcon, removeIcon);\n  const listItemNameClass = classNames(`${prefixCls}-list-item-name`);\n  const fileName = file.url ? [/*#__PURE__*/React.createElement(\"a\", Object.assign({\n    key: \"view\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: listItemNameClass,\n    title: file.name\n  }, linkProps, {\n    href: file.url,\n    onClick: e => onPreview(file, e)\n  }), file.name), downloadOrDelete] : [/*#__PURE__*/React.createElement(\"span\", {\n    key: \"view\",\n    className: listItemNameClass,\n    onClick: e => onPreview(file, e),\n    title: file.name\n  }, file.name), downloadOrDelete];\n  const previewStyle = {\n    pointerEvents: 'none',\n    opacity: 0.5\n  };\n  const previewIcon = showPreviewIcon ? /*#__PURE__*/React.createElement(\"a\", {\n    href: file.url || file.thumbUrl,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    style: file.url || file.thumbUrl ? undefined : previewStyle,\n    onClick: e => onPreview(file, e),\n    title: locale.previewFile\n  }, typeof customPreviewIcon === 'function' ? customPreviewIcon(file) : customPreviewIcon || /*#__PURE__*/React.createElement(EyeOutlined, null)) : null;\n  const pictureCardActions = (listType === 'picture-card' || listType === 'picture-circle') && mergedStatus !== 'uploading' && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-list-item-actions`\n  }, previewIcon, mergedStatus === 'done' && downloadIcon, removeIcon);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const rootPrefixCls = getPrefixCls();\n  const dom = /*#__PURE__*/React.createElement(\"div\", {\n    className: listItemClassName\n  }, icon, fileName, pictureCardActions, showProgress && /*#__PURE__*/React.createElement(CSSMotion, {\n    motionName: `${rootPrefixCls}-fade`,\n    visible: mergedStatus === 'uploading',\n    motionDeadline: 2000\n  }, _ref2 => {\n    let {\n      className: motionClassName\n    } = _ref2;\n    // show loading icon if upload progress listener is disabled\n    const loadingProgress = 'percent' in file ? /*#__PURE__*/React.createElement(Progress, Object.assign({}, progressProps, {\n      type: \"line\",\n      percent: file.percent\n    })) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(`${prefixCls}-list-item-progress`, motionClassName)\n    }, loadingProgress);\n  }));\n  const message = file.response && typeof file.response === 'string' ? file.response : ((_a = file.error) === null || _a === void 0 ? void 0 : _a.statusText) || ((_b = file.error) === null || _b === void 0 ? void 0 : _b.message) || locale.uploadError;\n  const item = mergedStatus === 'error' ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: message,\n    getPopupContainer: node => node.parentNode\n  }, dom) : dom;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-list-item-container`, className),\n    style: style,\n    ref: ref\n  }, itemRender ? itemRender(item, file, items, {\n    download: onDownload.bind(null, file),\n    preview: onPreview.bind(null, file),\n    remove: onClose.bind(null, file)\n  }) : item);\n});\nexport default ListItem;"]},"metadata":{},"sourceType":"module"}