{"ast":null,"code":"import { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst antProgressActive = new Keyframes('antProgressActive', {\n  '0%': {\n    transform: 'translateX(-100%) scaleX(0)',\n    opacity: 0.1\n  },\n  '20%': {\n    transform: 'translateX(-100%) scaleX(0)',\n    opacity: 0.5\n  },\n  to: {\n    transform: 'translateX(0) scaleX(1)',\n    opacity: 0\n  }\n});\n\nconst genBaseStyle = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&-line': {\n        position: 'relative',\n        width: '100%',\n        fontSize: token.fontSize,\n        marginInlineEnd: token.marginXS,\n        marginBottom: token.marginXS\n      },\n      [`${progressCls}-outer`]: {\n        display: 'inline-block',\n        width: '100%'\n      },\n      [`&${progressCls}-show-info`]: {\n        [`${progressCls}-outer`]: {\n          marginInlineEnd: `calc(-2em - ${token.marginXS}px)`,\n          paddingInlineEnd: `calc(2em + ${token.paddingXS}px)`\n        }\n      },\n      [`${progressCls}-inner`]: {\n        position: 'relative',\n        display: 'inline-block',\n        width: '100%',\n        overflow: 'hidden',\n        verticalAlign: 'middle',\n        backgroundColor: token.progressRemainingColor,\n        borderRadius: token.progressLineRadius\n      },\n      [`${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.colorInfo\n        }\n      },\n      [`${progressCls}-success-bg, ${progressCls}-bg`]: {\n        position: 'relative',\n        backgroundColor: token.colorInfo,\n        borderRadius: token.progressLineRadius,\n        transition: `all ${token.motionDurationSlow} ${token.motionEaseInOutCirc}`\n      },\n      [`${progressCls}-success-bg`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        backgroundColor: token.colorSuccess\n      },\n      [`${progressCls}-text`]: {\n        display: 'inline-block',\n        width: '2em',\n        marginInlineStart: token.marginXS,\n        color: token.progressInfoTextColor,\n        lineHeight: 1,\n        whiteSpace: 'nowrap',\n        textAlign: 'start',\n        verticalAlign: 'middle',\n        wordBreak: 'normal',\n        [iconPrefixCls]: {\n          fontSize: token.fontSize\n        }\n      },\n      [`&${progressCls}-status-active`]: {\n        [`${progressCls}-bg::before`]: {\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: token.colorBgContainer,\n          borderRadius: token.progressLineRadius,\n          opacity: 0,\n          animationName: antProgressActive,\n          animationDuration: token.progressActiveMotionDuration,\n          animationTimingFunction: token.motionEaseOutQuint,\n          animationIterationCount: 'infinite',\n          content: '\"\"'\n        }\n      },\n      [`&${progressCls}-status-exception`]: {\n        [`${progressCls}-bg`]: {\n          backgroundColor: token.colorError\n        },\n        [`${progressCls}-text`]: {\n          color: token.colorError\n        }\n      },\n      [`&${progressCls}-status-exception ${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.colorError\n        }\n      },\n      [`&${progressCls}-status-success`]: {\n        [`${progressCls}-bg`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${progressCls}-text`]: {\n          color: token.colorSuccess\n        }\n      },\n      [`&${progressCls}-status-success ${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.colorSuccess\n        }\n      }\n    })\n  };\n};\n\nconst genCircleStyle = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-circle-trail`]: {\n        stroke: token.progressRemainingColor\n      },\n      [`&${progressCls}-circle ${progressCls}-inner`]: {\n        position: 'relative',\n        lineHeight: 1,\n        backgroundColor: 'transparent'\n      },\n      [`&${progressCls}-circle ${progressCls}-text`]: {\n        position: 'absolute',\n        insetBlockStart: '50%',\n        insetInlineStart: 0,\n        width: '100%',\n        margin: 0,\n        padding: 0,\n        color: token.colorText,\n        lineHeight: 1,\n        whiteSpace: 'normal',\n        textAlign: 'center',\n        transform: 'translateY(-50%)',\n        [iconPrefixCls]: {\n          fontSize: `${token.fontSize / token.fontSizeSM}em`\n        }\n      },\n      [`${progressCls}-circle&-status-exception`]: {\n        [`${progressCls}-text`]: {\n          color: token.colorError\n        }\n      },\n      [`${progressCls}-circle&-status-success`]: {\n        [`${progressCls}-text`]: {\n          color: token.colorSuccess\n        }\n      }\n    },\n    [`${progressCls}-inline-circle`]: {\n      lineHeight: 1,\n      [`${progressCls}-inner`]: {\n        verticalAlign: 'bottom'\n      }\n    }\n  };\n};\n\nconst genStepStyle = token => {\n  const {\n    componentCls: progressCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-steps`]: {\n        display: 'inline-block',\n        '&-outer': {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        '&-item': {\n          flexShrink: 0,\n          minWidth: token.progressStepMinWidth,\n          marginInlineEnd: token.progressStepMarginInlineEnd,\n          backgroundColor: token.progressRemainingColor,\n          transition: `all ${token.motionDurationSlow}`,\n          '&-active': {\n            backgroundColor: token.colorInfo\n          }\n        }\n      }\n    }\n  };\n};\n\nconst genSmallLine = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-small&-line, ${progressCls}-small&-line ${progressCls}-text ${iconPrefixCls}`]: {\n        fontSize: token.fontSizeSM\n      }\n    }\n  };\n};\n\nexport default genComponentStyleHook('Progress', token => {\n  const progressStepMarginInlineEnd = token.marginXXS / 2;\n  const progressToken = mergeToken(token, {\n    progressLineRadius: 100,\n    progressInfoTextColor: token.colorText,\n    progressDefaultColor: token.colorInfo,\n    progressRemainingColor: token.colorFillSecondary,\n    progressStepMarginInlineEnd,\n    progressStepMinWidth: progressStepMarginInlineEnd,\n    progressActiveMotionDuration: '2.4s'\n  });\n  return [genBaseStyle(progressToken), genCircleStyle(progressToken), genStepStyle(progressToken), genSmallLine(progressToken)];\n});","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/progress/style/index.js"],"names":["Keyframes","genComponentStyleHook","mergeToken","resetComponent","antProgressActive","transform","opacity","to","genBaseStyle","token","componentCls","progressCls","iconCls","iconPrefixCls","Object","assign","display","direction","position","width","fontSize","marginInlineEnd","marginXS","marginBottom","paddingInlineEnd","paddingXS","overflow","verticalAlign","backgroundColor","progressRemainingColor","borderRadius","progressLineRadius","stroke","colorInfo","transition","motionDurationSlow","motionEaseInOutCirc","insetBlockStart","insetInlineStart","colorSuccess","marginInlineStart","color","progressInfoTextColor","lineHeight","whiteSpace","textAlign","wordBreak","inset","colorBgContainer","animationName","animationDuration","progressActiveMotionDuration","animationTimingFunction","motionEaseOutQuint","animationIterationCount","content","colorError","genCircleStyle","margin","padding","colorText","fontSizeSM","genStepStyle","flexDirection","alignItems","flexShrink","minWidth","progressStepMinWidth","progressStepMarginInlineEnd","genSmallLine","marginXXS","progressToken","progressDefaultColor","colorFillSecondary"],"mappings":"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","sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst antProgressActive = new Keyframes('antProgressActive', {\n  '0%': {\n    transform: 'translateX(-100%) scaleX(0)',\n    opacity: 0.1\n  },\n  '20%': {\n    transform: 'translateX(-100%) scaleX(0)',\n    opacity: 0.5\n  },\n  to: {\n    transform: 'translateX(0) scaleX(1)',\n    opacity: 0\n  }\n});\nconst genBaseStyle = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&-line': {\n        position: 'relative',\n        width: '100%',\n        fontSize: token.fontSize,\n        marginInlineEnd: token.marginXS,\n        marginBottom: token.marginXS\n      },\n      [`${progressCls}-outer`]: {\n        display: 'inline-block',\n        width: '100%'\n      },\n      [`&${progressCls}-show-info`]: {\n        [`${progressCls}-outer`]: {\n          marginInlineEnd: `calc(-2em - ${token.marginXS}px)`,\n          paddingInlineEnd: `calc(2em + ${token.paddingXS}px)`\n        }\n      },\n      [`${progressCls}-inner`]: {\n        position: 'relative',\n        display: 'inline-block',\n        width: '100%',\n        overflow: 'hidden',\n        verticalAlign: 'middle',\n        backgroundColor: token.progressRemainingColor,\n        borderRadius: token.progressLineRadius\n      },\n      [`${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.colorInfo\n        }\n      },\n      [`${progressCls}-success-bg, ${progressCls}-bg`]: {\n        position: 'relative',\n        backgroundColor: token.colorInfo,\n        borderRadius: token.progressLineRadius,\n        transition: `all ${token.motionDurationSlow} ${token.motionEaseInOutCirc}`\n      },\n      [`${progressCls}-success-bg`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        backgroundColor: token.colorSuccess\n      },\n      [`${progressCls}-text`]: {\n        display: 'inline-block',\n        width: '2em',\n        marginInlineStart: token.marginXS,\n        color: token.progressInfoTextColor,\n        lineHeight: 1,\n        whiteSpace: 'nowrap',\n        textAlign: 'start',\n        verticalAlign: 'middle',\n        wordBreak: 'normal',\n        [iconPrefixCls]: {\n          fontSize: token.fontSize\n        }\n      },\n      [`&${progressCls}-status-active`]: {\n        [`${progressCls}-bg::before`]: {\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: token.colorBgContainer,\n          borderRadius: token.progressLineRadius,\n          opacity: 0,\n          animationName: antProgressActive,\n          animationDuration: token.progressActiveMotionDuration,\n          animationTimingFunction: token.motionEaseOutQuint,\n          animationIterationCount: 'infinite',\n          content: '\"\"'\n        }\n      },\n      [`&${progressCls}-status-exception`]: {\n        [`${progressCls}-bg`]: {\n          backgroundColor: token.colorError\n        },\n        [`${progressCls}-text`]: {\n          color: token.colorError\n        }\n      },\n      [`&${progressCls}-status-exception ${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.colorError\n        }\n      },\n      [`&${progressCls}-status-success`]: {\n        [`${progressCls}-bg`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${progressCls}-text`]: {\n          color: token.colorSuccess\n        }\n      },\n      [`&${progressCls}-status-success ${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.colorSuccess\n        }\n      }\n    })\n  };\n};\nconst genCircleStyle = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-circle-trail`]: {\n        stroke: token.progressRemainingColor\n      },\n      [`&${progressCls}-circle ${progressCls}-inner`]: {\n        position: 'relative',\n        lineHeight: 1,\n        backgroundColor: 'transparent'\n      },\n      [`&${progressCls}-circle ${progressCls}-text`]: {\n        position: 'absolute',\n        insetBlockStart: '50%',\n        insetInlineStart: 0,\n        width: '100%',\n        margin: 0,\n        padding: 0,\n        color: token.colorText,\n        lineHeight: 1,\n        whiteSpace: 'normal',\n        textAlign: 'center',\n        transform: 'translateY(-50%)',\n        [iconPrefixCls]: {\n          fontSize: `${token.fontSize / token.fontSizeSM}em`\n        }\n      },\n      [`${progressCls}-circle&-status-exception`]: {\n        [`${progressCls}-text`]: {\n          color: token.colorError\n        }\n      },\n      [`${progressCls}-circle&-status-success`]: {\n        [`${progressCls}-text`]: {\n          color: token.colorSuccess\n        }\n      }\n    },\n    [`${progressCls}-inline-circle`]: {\n      lineHeight: 1,\n      [`${progressCls}-inner`]: {\n        verticalAlign: 'bottom'\n      }\n    }\n  };\n};\nconst genStepStyle = token => {\n  const {\n    componentCls: progressCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-steps`]: {\n        display: 'inline-block',\n        '&-outer': {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        '&-item': {\n          flexShrink: 0,\n          minWidth: token.progressStepMinWidth,\n          marginInlineEnd: token.progressStepMarginInlineEnd,\n          backgroundColor: token.progressRemainingColor,\n          transition: `all ${token.motionDurationSlow}`,\n          '&-active': {\n            backgroundColor: token.colorInfo\n          }\n        }\n      }\n    }\n  };\n};\nconst genSmallLine = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-small&-line, ${progressCls}-small&-line ${progressCls}-text ${iconPrefixCls}`]: {\n        fontSize: token.fontSizeSM\n      }\n    }\n  };\n};\nexport default genComponentStyleHook('Progress', token => {\n  const progressStepMarginInlineEnd = token.marginXXS / 2;\n  const progressToken = mergeToken(token, {\n    progressLineRadius: 100,\n    progressInfoTextColor: token.colorText,\n    progressDefaultColor: token.colorInfo,\n    progressRemainingColor: token.colorFillSecondary,\n    progressStepMarginInlineEnd,\n    progressStepMinWidth: progressStepMarginInlineEnd,\n    progressActiveMotionDuration: '2.4s'\n  });\n  return [genBaseStyle(progressToken), genCircleStyle(progressToken), genStepStyle(progressToken), genSmallLine(progressToken)];\n});"]},"metadata":{},"sourceType":"module"}