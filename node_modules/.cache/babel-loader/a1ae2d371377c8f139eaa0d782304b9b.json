{"ast":null,"code":"import * as React from 'react';\nimport canUseDom from \"../Dom/canUseDom\";\n/**\n * Wrap `React.useLayoutEffect` which will not throw warning message in test env\n */\n\nvar useLayoutEffect = process.env.NODE_ENV !== 'test' && canUseDom() ? React.useLayoutEffect : React.useEffect;\nexport default useLayoutEffect;\nexport var useLayoutUpdateEffect = function useLayoutUpdateEffect(callback, deps) {\n  var firstMountRef = React.useRef(true);\n  useLayoutEffect(function () {\n    if (!firstMountRef.current) {\n      return callback();\n    }\n  }, deps); // We tell react that first mount has passed\n\n  useLayoutEffect(function () {\n    firstMountRef.current = false;\n    return function () {\n      firstMountRef.current = true;\n    };\n  }, []);\n};","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-util/es/hooks/useLayoutEffect.js"],"names":["React","canUseDom","useLayoutEffect","process","env","NODE_ENV","useEffect","useLayoutUpdateEffect","callback","deps","firstMountRef","useRef","current"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA;AACA;AACA;;AACA,IAAIC,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IAAmCJ,SAAS,EAA5C,GAAiDD,KAAK,CAACE,eAAvD,GAAyEF,KAAK,CAACM,SAArG;AACA,eAAeJ,eAAf;AACA,OAAO,IAAIK,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,QAA/B,EAAyCC,IAAzC,EAA+C;AAChF,MAAIC,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAa,IAAb,CAApB;AACAT,EAAAA,eAAe,CAAC,YAAY;AAC1B,QAAI,CAACQ,aAAa,CAACE,OAAnB,EAA4B;AAC1B,aAAOJ,QAAQ,EAAf;AACD;AACF,GAJc,EAIZC,IAJY,CAAf,CAFgF,CAQhF;;AACAP,EAAAA,eAAe,CAAC,YAAY;AAC1BQ,IAAAA,aAAa,CAACE,OAAd,GAAwB,KAAxB;AACA,WAAO,YAAY;AACjBF,MAAAA,aAAa,CAACE,OAAd,GAAwB,IAAxB;AACD,KAFD;AAGD,GALc,EAKZ,EALY,CAAf;AAMD,CAfM","sourcesContent":["import * as React from 'react';\nimport canUseDom from \"../Dom/canUseDom\";\n\n/**\n * Wrap `React.useLayoutEffect` which will not throw warning message in test env\n */\nvar useLayoutEffect = process.env.NODE_ENV !== 'test' && canUseDom() ? React.useLayoutEffect : React.useEffect;\nexport default useLayoutEffect;\nexport var useLayoutUpdateEffect = function useLayoutUpdateEffect(callback, deps) {\n  var firstMountRef = React.useRef(true);\n  useLayoutEffect(function () {\n    if (!firstMountRef.current) {\n      return callback();\n    }\n  }, deps);\n\n  // We tell react that first mount has passed\n  useLayoutEffect(function () {\n    firstMountRef.current = false;\n    return function () {\n      firstMountRef.current = true;\n    };\n  }, []);\n};"]},"metadata":{},"sourceType":"module"}