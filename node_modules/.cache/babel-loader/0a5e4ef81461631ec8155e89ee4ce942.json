{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport TransButton from '../../_util/transButton';\nimport Editable from '../Editable';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Typography from '../Typography';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\n\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n      code = _ref.code,\n      underline = _ref.underline,\n      del = _ref.delete,\n      strong = _ref.strong,\n      keyboard = _ref.keyboard,\n      italic = _ref.italic;\n  var currentContent = content;\n\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\n\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n\n  return dom || needDom && defaultNode;\n}\n\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n\n  return Array.isArray(val) ? val : [val];\n}\n\nvar ELLIPSIS_STR = '...';\nvar Base = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _a, _b, _c;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      type = props.type,\n      disabled = props.disabled,\n      children = props.children,\n      ellipsis = props.ellipsis,\n      editable = props.editable,\n      copyable = props.copyable,\n      component = props.component,\n      title = props.title,\n      restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _useLocale = useLocale('Text'),\n      _useLocale2 = _slicedToArray(_useLocale, 1),\n      textLocale = _useLocale2[0];\n\n  var typographyRef = React.useRef(null);\n  var editIconRef = React.useRef(null); // ============================ MISC ============================\n\n  var prefixCls = getPrefixCls('typography', customizePrefixCls);\n  var textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']); // ========================== Editable ==========================\n\n  var _useMergedConfig = useMergedConfig(editable),\n      _useMergedConfig2 = _slicedToArray(_useMergedConfig, 2),\n      enableEdit = _useMergedConfig2[0],\n      editConfig = _useMergedConfig2[1];\n\n  var _useMergedState = useMergedState(false, {\n    value: editConfig.editing\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      editing = _useMergedState2[0],\n      setEditing = _useMergedState2[1];\n\n  var _editConfig$triggerTy = editConfig.triggerType,\n      triggerType = _editConfig$triggerTy === void 0 ? ['icon'] : _editConfig$triggerTy;\n\n  var triggerEdit = function triggerEdit(edit) {\n    var _a;\n\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n\n    setEditing(edit);\n  }; // Focus edit icon when back\n\n\n  useUpdatedEffect(function () {\n    var _a;\n\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n\n  var onEditClick = function onEditClick(e) {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n\n  var onEditChange = function onEditChange(value) {\n    var _a;\n\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n\n  var onEditCancel = function onEditCancel() {\n    var _a;\n\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  }; // ========================== Copyable ==========================\n\n\n  var _useMergedConfig3 = useMergedConfig(copyable),\n      _useMergedConfig4 = _slicedToArray(_useMergedConfig3, 2),\n      enableCopy = _useMergedConfig4[0],\n      copyConfig = _useMergedConfig4[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      copied = _React$useState2[0],\n      setCopied = _React$useState2[1];\n\n  var copyIdRef = React.useRef();\n  var copyOptions = {};\n\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n\n  var cleanCopyId = function cleanCopyId() {\n    window.clearTimeout(copyIdRef.current);\n  };\n\n  var onCopyClick = function onCopyClick(e) {\n    var _a;\n\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true); // Trigger tips update\n\n    cleanCopyId();\n    copyIdRef.current = window.setTimeout(function () {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n\n  React.useEffect(function () {\n    return cleanCopyId;\n  }, []); // ========================== Ellipsis ==========================\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLineClampSupport = _React$useState4[0],\n      setIsLineClampSupport = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isTextOverflowSupport = _React$useState6[0],\n      setIsTextOverflowSupport = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      expanded = _React$useState8[0],\n      setExpanded = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      isJsEllipsis = _React$useState10[0],\n      setIsJsEllipsis = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      isNativeEllipsis = _React$useState12[0],\n      setIsNativeEllipsis = _React$useState12[1];\n\n  var _React$useState13 = React.useState(true),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      isNativeVisible = _React$useState14[0],\n      setIsNativeVisible = _React$useState14[1];\n\n  var _useMergedConfig5 = useMergedConfig(ellipsis, {\n    expandable: false\n  }),\n      _useMergedConfig6 = _slicedToArray(_useMergedConfig5, 2),\n      enableEllipsis = _useMergedConfig6[0],\n      ellipsisConfig = _useMergedConfig6[1];\n\n  var mergedEnableEllipsis = enableEllipsis && !expanded; // Shared prop to reduce bundle size\n\n  var _ellipsisConfig$rows = ellipsisConfig.rows,\n      rows = _ellipsisConfig$rows === void 0 ? 1 : _ellipsisConfig$rows;\n  var needMeasureEllipsis = React.useMemo(function () {\n    return (// Disable ellipsis\n      !mergedEnableEllipsis || // Provide suffix\n      ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis || // Can't use css ellipsis since we need to provide the place for button\n      ellipsisConfig.expandable || enableEdit || enableCopy\n    );\n  }, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(function () {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  var cssEllipsis = React.useMemo(function () {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  var isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  var cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  var cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis; // >>>>> Expand\n\n  var onExpandClick = function onExpandClick(e) {\n    var _a;\n\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n\n  var _React$useState15 = React.useState(0),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      ellipsisWidth = _React$useState16[0],\n      setEllipsisWidth = _React$useState16[1];\n\n  var _React$useState17 = React.useState(0),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      ellipsisFontSize = _React$useState18[0],\n      setEllipsisFontSize = _React$useState18[1];\n\n  var onResize = function onResize(_ref2, element) {\n    var offsetWidth = _ref2.offsetWidth;\n\n    var _a;\n\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  }; // >>>>> JS Ellipsis\n\n\n  var onJsEllipsis = function onJsEllipsis(jsEllipsis) {\n    var _a;\n\n    setIsJsEllipsis(jsEllipsis); // Trigger if changed\n\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  }; // >>>>> Native ellipsis\n\n\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n\n    if (enableEllipsis && cssEllipsis && textEle) {\n      var currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]); // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n\n\n    var observer = new IntersectionObserver(function () {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return function () {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]); // ========================== Tooltip ===========================\n\n  var tooltipProps = {};\n\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n\n  var topAriaLabel = React.useMemo(function () {\n    var isValid = function isValid(val) {\n      return ['string', 'number'].includes(typeof val);\n    };\n\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n\n    if (isValid(children)) {\n      return children;\n    }\n\n    if (isValid(title)) {\n      return title;\n    }\n\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]); // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  } // >>>>>>>>>>> Typography\n  // Expand\n\n\n  var renderExpand = function renderExpand() {\n    var expandable = ellipsisConfig.expandable,\n        symbol = ellipsisConfig.symbol;\n    if (!expandable) return null;\n    var expandContent;\n\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: \"\".concat(prefixCls, \"-expand\"),\n      onClick: onExpandClick,\n      \"aria-label\": textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, expandContent);\n  }; // Edit\n\n\n  var renderEdit = function renderEdit() {\n    if (!enableEdit) return;\n    var icon = editConfig.icon,\n        tooltip = editConfig.tooltip;\n    var editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    var ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: \"\".concat(prefixCls, \"-edit\"),\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  }; // Copy\n\n\n  var renderCopy = function renderCopy() {\n    if (!enableCopy) return;\n    var tooltips = copyConfig.tooltips,\n        icon = copyConfig.icon;\n    var tooltipNodes = toList(tooltips);\n    var iconNodes = toList(icon);\n    var copyTitle = copied ? getNode(tooltipNodes[1], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied) : getNode(tooltipNodes[0], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy);\n    var systemStr = copied ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied : textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy;\n    var ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(\"\".concat(prefixCls, \"-copy\"), copied && \"\".concat(prefixCls, \"-copy-success\")),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n\n  var renderOperations = function renderOperations(renderExpanded) {\n    return [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  };\n\n  var renderEllipsis = function renderEllipsis(needEllipsis) {\n    return [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      key: \"ellipsis\"\n    }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  };\n\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, function (resizeRef) {\n    var _classNames;\n\n    return /*#__PURE__*/React.createElement(EllipsisTooltip, {\n      tooltipProps: tooltipProps,\n      enabledEllipsis: mergedEnableEllipsis,\n      isEllipsis: isMergedEllipsis\n    }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), enableEllipsis), _defineProperty(_classNames, \"\".concat(prefixCls, \"-single-line\"), mergedEnableEllipsis && rows === 1), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n      prefixCls: customizePrefixCls,\n      style: Object.assign(Object.assign({}, style), {\n        WebkitLineClamp: cssLineClamp ? rows : undefined\n      }),\n      component: component,\n      ref: composeRef(resizeRef, typographyRef, ref),\n      direction: direction,\n      onClick: triggerType.includes('text') ? onEditClick : undefined,\n      \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n      title: title\n    }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n      enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n      text: children,\n      rows: rows,\n      width: ellipsisWidth,\n      fontSize: ellipsisFontSize,\n      onEllipsis: onJsEllipsis\n    }, function (node, needEllipsis) {\n      var renderNode = node;\n\n      if (node.length && needEllipsis && topAriaLabel) {\n        renderNode = /*#__PURE__*/React.createElement(\"span\", {\n          key: \"show-content\",\n          \"aria-hidden\": true\n        }, renderNode);\n      }\n\n      var wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n      return wrappedContext;\n    })));\n  });\n});\nexport default Base;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/typography/Base/index.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","CheckOutlined","CopyOutlined","EditOutlined","classNames","copy","ResizeObserver","toArray","useIsomorphicLayoutEffect","useMergedState","omit","composeRef","React","ConfigContext","useLocale","Tooltip","isStyleSupport","TransButton","Editable","useMergedConfig","useUpdatedEffect","Typography","Ellipsis","EllipsisTooltip","wrapperDecorations","_ref","content","mark","code","underline","del","delete","strong","keyboard","italic","currentContent","wrap","tag","needed","createElement","getNode","dom","defaultNode","needDom","undefined","toList","val","Array","isArray","ELLIPSIS_STR","Base","forwardRef","props","ref","_a","_b","_c","customizePrefixCls","prefixCls","className","style","type","disabled","children","ellipsis","editable","copyable","component","title","restProps","useContext","getPrefixCls","direction","textLocale","typographyRef","useRef","editIconRef","textProps","enableEdit","editConfig","value","editing","setEditing","triggerType","triggerEdit","edit","onStart","current","focus","onEditClick","preventDefault","onEditChange","onChange","onEditCancel","onCancel","enableCopy","copyConfig","useState","copied","setCopied","copyIdRef","copyOptions","format","cleanCopyId","window","clearTimeout","onCopyClick","stopPropagation","text","String","setTimeout","onCopy","useEffect","isLineClampSupport","setIsLineClampSupport","isTextOverflowSupport","setIsTextOverflowSupport","expanded","setExpanded","isJsEllipsis","setIsJsEllipsis","isNativeEllipsis","setIsNativeEllipsis","isNativeVisible","setIsNativeVisible","expandable","enableEllipsis","ellipsisConfig","mergedEnableEllipsis","rows","needMeasureEllipsis","useMemo","suffix","onEllipsis","cssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","onExpand","ellipsisWidth","setEllipsisWidth","ellipsisFontSize","setEllipsisFontSize","onResize","_ref2","element","offsetWidth","parseInt","getComputedStyle","fontSize","onJsEllipsis","jsEllipsis","textEle","currentEllipsis","offsetHeight","scrollHeight","scrollWidth","IntersectionObserver","observer","offsetParent","observe","disconnect","tooltipProps","tooltip","isValidElement","assign","topAriaLabel","isValid","includes","onSave","onEnd","maxLength","autoSize","enterIcon","renderExpand","symbol","expandContent","expand","key","onClick","renderEdit","icon","editTitle","ariaLabel","role","renderCopy","tooltips","tooltipNodes","iconNodes","copyTitle","systemStr","renderOperations","renderExpanded","renderEllipsis","needEllipsis","resizeRef","enabledEllipsis","isEllipsis","WebkitLineClamp","toString","enabledMeasure","width","node","renderNode","wrappedContext","Fragment"],"mappings":"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","sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport copy from 'copy-to-clipboard';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport TransButton from '../../_util/transButton';\nimport Editable from '../Editable';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Typography from '../Typography';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n  return Array.isArray(val) ? val : [val];\n}\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b, _c;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [textLocale] = useLocale('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = useMergedConfig(editable);\n  const [editing, setEditing] = useMergedState(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  useUpdatedEffect(() => {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = useMergedConfig(copyable);\n  const [copied, setCopied] = React.useState(false);\n  const copyIdRef = React.useRef();\n  const copyOptions = {};\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n  const cleanCopyId = () => {\n    window.clearTimeout(copyIdRef.current);\n  };\n  const onCopyClick = e => {\n    var _a;\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true);\n    // Trigger tips update\n    cleanCopyId();\n    copyIdRef.current = window.setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n  React.useEffect(() => cleanCopyId, []);\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = useMergedConfig(ellipsis, {\n    expandable: false\n  });\n  const mergedEnableEllipsis = enableEllipsis && !expanded;\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() =>\n  // Disable ellipsis\n  !mergedEnableEllipsis ||\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const cssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = e => {\n    var _a;\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const [ellipsisFontSize, setEllipsisFontSize] = React.useState(0);\n  const onResize = (_ref2, element) => {\n    let {\n      offsetWidth\n    } = _ref2;\n    var _a;\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  let tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  const topAriaLabel = React.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    let expandContent;\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-expand`,\n      onClick: onExpandClick,\n      \"aria-label\": textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, expandContent);\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) return;\n    const {\n      tooltips,\n      icon\n    } = copyConfig;\n    const tooltipNodes = toList(tooltips);\n    const iconNodes = toList(icon);\n    const copyTitle = copied ? getNode(tooltipNodes[1], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied) : getNode(tooltipNodes[0], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy);\n    const systemStr = copied ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied : textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy;\n    const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(`${prefixCls}-copy`, copied && `${prefixCls}-copy-success`),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n  const renderOperations = renderExpanded => [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = needEllipsis => [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, resizeRef => /*#__PURE__*/React.createElement(EllipsisTooltip, {\n    tooltipProps: tooltipProps,\n    enabledEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n    className: classNames({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: composeRef(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n    enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    fontSize: ellipsisFontSize,\n    onEllipsis: onJsEllipsis\n  }, (node, needEllipsis) => {\n    let renderNode = node;\n    if (node.length && needEllipsis && topAriaLabel) {\n      renderNode = /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n    return wrappedContext;\n  }))));\n});\nexport default Base;"]},"metadata":{},"sourceType":"module"}