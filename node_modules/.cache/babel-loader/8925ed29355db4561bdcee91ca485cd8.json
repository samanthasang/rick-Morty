{"ast":null,"code":"import _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { isPresetColor } from '../_util/colors';\n\nvar Ribbon = function Ribbon(_ref) {\n  var _classNames;\n\n  var className = _ref.className,\n      customizePrefixCls = _ref.prefixCls,\n      style = _ref.style,\n      color = _ref.color,\n      children = _ref.children,\n      text = _ref.text,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'end' : _ref$placement;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  var colorInPreset = isPresetColor(color, false);\n  var ribbonCls = classNames(prefixCls, \"\".concat(prefixCls, \"-placement-\").concat(placement), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-color-\").concat(color), colorInPreset), _classNames), className);\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1];\n\n  var colorStyle = {};\n  var cornerColorStyle = {};\n\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-wrapper\"), hashId)\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-text\")\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-corner\"),\n    style: cornerColorStyle\n  }))));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\n\nexport default Ribbon;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/badge/Ribbon.js"],"names":["classNames","React","ConfigContext","useStyle","isPresetColor","Ribbon","_ref","className","customizePrefixCls","prefixCls","style","color","children","text","placement","useContext","getPrefixCls","direction","colorInPreset","ribbonCls","wrapSSR","hashId","colorStyle","cornerColorStyle","background","createElement","Object","assign","process","env","NODE_ENV","displayName"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,IAAI,EAAI;AAAA;;AACrB,MACEC,SADF,GAQID,IARJ,CACEC,SADF;AAAA,MAEaC,kBAFb,GAQIF,IARJ,CAEEG,SAFF;AAAA,MAGEC,KAHF,GAQIJ,IARJ,CAGEI,KAHF;AAAA,MAIEC,KAJF,GAQIL,IARJ,CAIEK,KAJF;AAAA,MAKEC,QALF,GAQIN,IARJ,CAKEM,QALF;AAAA,MAMEC,IANF,GAQIP,IARJ,CAMEO,IANF;AAAA,uBAQIP,IARJ,CAOEQ,SAPF;AAAA,MAOEA,SAPF,+BAOc,KAPd;;AASA,0BAGIb,KAAK,CAACc,UAAN,CAAiBb,aAAjB,CAHJ;AAAA,MACEc,YADF,qBACEA,YADF;AAAA,MAEEC,SAFF,qBAEEA,SAFF;;AAIA,MAAMR,SAAS,GAAGO,YAAY,CAAC,QAAD,EAAWR,kBAAX,CAA9B;AACA,MAAMU,aAAa,GAAGd,aAAa,CAACO,KAAD,EAAQ,KAAR,CAAnC;AACA,MAAMQ,SAAS,GAAGnB,UAAU,CAACS,SAAD,YAAeA,SAAf,wBAAsCK,SAAtC,6DACtBL,SADsB,WACJQ,SAAS,KAAK,KADV,0CAEtBR,SAFsB,oBAEHE,KAFG,GAEOO,aAFP,iBAGzBX,SAHyB,CAA5B;;AAIA,kBAA0BJ,QAAQ,CAACM,SAAD,CAAlC;AAAA;AAAA,MAAOW,OAAP;AAAA,MAAgBC,MAAhB;;AACA,MAAMC,UAAU,GAAG,EAAnB;AACA,MAAMC,gBAAgB,GAAG,EAAzB;;AACA,MAAIZ,KAAK,IAAI,CAACO,aAAd,EAA6B;AAC3BI,IAAAA,UAAU,CAACE,UAAX,GAAwBb,KAAxB;AACAY,IAAAA,gBAAgB,CAACZ,KAAjB,GAAyBA,KAAzB;AACD;;AACD,SAAOS,OAAO,EAAE,aAAanB,KAAK,CAACwB,aAAN,CAAoB,KAApB,EAA2B;AACtDlB,IAAAA,SAAS,EAAEP,UAAU,WAAIS,SAAJ,eAAyBY,MAAzB;AADiC,GAA3B,EAE1BT,QAF0B,EAEhB,aAAaX,KAAK,CAACwB,aAAN,CAAoB,KAApB,EAA2B;AACnDlB,IAAAA,SAAS,EAAEP,UAAU,CAACmB,SAAD,EAAYE,MAAZ,CAD8B;AAEnDX,IAAAA,KAAK,EAAEgB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,UAAlB,CAAd,EAA6CZ,KAA7C;AAF4C,GAA3B,EAGvB,aAAaT,KAAK,CAACwB,aAAN,CAAoB,MAApB,EAA4B;AAC1ClB,IAAAA,SAAS,YAAKE,SAAL;AADiC,GAA5B,EAEbI,IAFa,CAHU,EAKhB,aAAaZ,KAAK,CAACwB,aAAN,CAAoB,KAApB,EAA2B;AAChDlB,IAAAA,SAAS,YAAKE,SAAL,YADuC;AAEhDC,IAAAA,KAAK,EAAEa;AAFyC,GAA3B,CALG,CAFG,CAAf,CAAd;AAWD,CAtCD;;AAuCA,IAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCzB,EAAAA,MAAM,CAAC0B,WAAP,GAAqB,QAArB;AACD;;AACD,eAAe1B,MAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { isPresetColor } from '../_util/colors';\nconst Ribbon = _ref => {\n  let {\n    className,\n    prefixCls: customizePrefixCls,\n    style,\n    color,\n    children,\n    text,\n    placement = 'end'\n  } = _ref;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  const colorInPreset = isPresetColor(color, false);\n  const ribbonCls = classNames(prefixCls, `${prefixCls}-placement-${placement}`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-color-${color}`]: colorInPreset\n  }, className);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const colorStyle = {};\n  const cornerColorStyle = {};\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-wrapper`, hashId)\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-text`\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-corner`,\n    style: cornerColorStyle\n  }))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\nexport default Ribbon;"]},"metadata":{},"sourceType":"module"}