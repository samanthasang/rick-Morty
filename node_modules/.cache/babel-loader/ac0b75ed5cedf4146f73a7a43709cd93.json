{"ast":null,"code":"/* istanbul ignore file */\nimport * as React from 'react';\n\nfunction useRenderTimes(props, debug) {\n  // Render times\n  var timesRef = React.useRef(0);\n  timesRef.current += 1; // Props changed\n\n  var propsRef = React.useRef(props);\n  var keys = [];\n  Object.keys(props || {}).map(function (key) {\n    var _propsRef$current;\n\n    if ((props === null || props === void 0 ? void 0 : props[key]) !== ((_propsRef$current = propsRef.current) === null || _propsRef$current === void 0 ? void 0 : _propsRef$current[key])) {\n      keys.push(key);\n    }\n  });\n  propsRef.current = props; // Cache keys since React rerender may cause it lost\n\n  var keysRef = React.useRef([]);\n\n  if (keys.length) {\n    keysRef.current = keys;\n  }\n\n  React.useDebugValue(timesRef.current);\n  React.useDebugValue(keysRef.current.join(', '));\n\n  if (debug) {\n    console.log(\"\".concat(debug, \":\"), timesRef.current, keysRef.current);\n  }\n\n  return timesRef.current;\n}\n\nexport default process.env.NODE_ENV !== 'production' ? useRenderTimes : function () {};\nexport var RenderBlock = /*#__PURE__*/React.memo(function () {\n  var times = useRenderTimes();\n  return /*#__PURE__*/React.createElement(\"h1\", null, \"Render Times: \", times);\n});\nRenderBlock.displayName = 'RenderBlock';","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-table/es/hooks/useRenderTimes.js"],"names":["React","useRenderTimes","props","debug","timesRef","useRef","current","propsRef","keys","Object","map","key","_propsRef$current","push","keysRef","length","useDebugValue","join","console","log","concat","process","env","NODE_ENV","RenderBlock","memo","times","createElement","displayName"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsC;AACpC;AACA,MAAIC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa,CAAb,CAAf;AACAD,EAAAA,QAAQ,CAACE,OAAT,IAAoB,CAApB,CAHoC,CAKpC;;AACA,MAAIC,QAAQ,GAAGP,KAAK,CAACK,MAAN,CAAaH,KAAb,CAAf;AACA,MAAIM,IAAI,GAAG,EAAX;AACAC,EAAAA,MAAM,CAACD,IAAP,CAAYN,KAAK,IAAI,EAArB,EAAyBQ,GAAzB,CAA6B,UAAUC,GAAV,EAAe;AAC1C,QAAIC,iBAAJ;;AACA,QAAI,CAACV,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAACS,GAAD,CAApD,OAAgE,CAACC,iBAAiB,GAAGL,QAAQ,CAACD,OAA9B,MAA2C,IAA3C,IAAmDM,iBAAiB,KAAK,KAAK,CAA9E,GAAkF,KAAK,CAAvF,GAA2FA,iBAAiB,CAACD,GAAD,CAA5K,CAAJ,EAAwL;AACtLH,MAAAA,IAAI,CAACK,IAAL,CAAUF,GAAV;AACD;AACF,GALD;AAMAJ,EAAAA,QAAQ,CAACD,OAAT,GAAmBJ,KAAnB,CAdoC,CAgBpC;;AACA,MAAIY,OAAO,GAAGd,KAAK,CAACK,MAAN,CAAa,EAAb,CAAd;;AACA,MAAIG,IAAI,CAACO,MAAT,EAAiB;AACfD,IAAAA,OAAO,CAACR,OAAR,GAAkBE,IAAlB;AACD;;AACDR,EAAAA,KAAK,CAACgB,aAAN,CAAoBZ,QAAQ,CAACE,OAA7B;AACAN,EAAAA,KAAK,CAACgB,aAAN,CAAoBF,OAAO,CAACR,OAAR,CAAgBW,IAAhB,CAAqB,IAArB,CAApB;;AACA,MAAId,KAAJ,EAAW;AACTe,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAGC,MAAH,CAAUjB,KAAV,EAAiB,GAAjB,CAAZ,EAAmCC,QAAQ,CAACE,OAA5C,EAAqDQ,OAAO,CAACR,OAA7D;AACD;;AACD,SAAOF,QAAQ,CAACE,OAAhB;AACD;;AACD,eAAee,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCtB,cAAxC,GAAyD,YAAY,CAAE,CAAtF;AACA,OAAO,IAAIuB,WAAW,GAAG,aAAaxB,KAAK,CAACyB,IAAN,CAAW,YAAY;AAC3D,MAAIC,KAAK,GAAGzB,cAAc,EAA1B;AACA,SAAO,aAAaD,KAAK,CAAC2B,aAAN,CAAoB,IAApB,EAA0B,IAA1B,EAAgC,gBAAhC,EAAkDD,KAAlD,CAApB;AACD,CAHqC,CAA/B;AAIPF,WAAW,CAACI,WAAZ,GAA0B,aAA1B","sourcesContent":["/* istanbul ignore file */\nimport * as React from 'react';\nfunction useRenderTimes(props, debug) {\n  // Render times\n  var timesRef = React.useRef(0);\n  timesRef.current += 1;\n\n  // Props changed\n  var propsRef = React.useRef(props);\n  var keys = [];\n  Object.keys(props || {}).map(function (key) {\n    var _propsRef$current;\n    if ((props === null || props === void 0 ? void 0 : props[key]) !== ((_propsRef$current = propsRef.current) === null || _propsRef$current === void 0 ? void 0 : _propsRef$current[key])) {\n      keys.push(key);\n    }\n  });\n  propsRef.current = props;\n\n  // Cache keys since React rerender may cause it lost\n  var keysRef = React.useRef([]);\n  if (keys.length) {\n    keysRef.current = keys;\n  }\n  React.useDebugValue(timesRef.current);\n  React.useDebugValue(keysRef.current.join(', '));\n  if (debug) {\n    console.log(\"\".concat(debug, \":\"), timesRef.current, keysRef.current);\n  }\n  return timesRef.current;\n}\nexport default process.env.NODE_ENV !== 'production' ? useRenderTimes : function () {};\nexport var RenderBlock = /*#__PURE__*/React.memo(function () {\n  var times = useRenderTimes();\n  return /*#__PURE__*/React.createElement(\"h1\", null, \"Render Times: \", times);\n});\nRenderBlock.displayName = 'RenderBlock';"]},"metadata":{},"sourceType":"module"}