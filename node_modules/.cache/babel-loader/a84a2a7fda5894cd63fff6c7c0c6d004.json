{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nvar Paragraph = function Paragraph(props) {\n  var getWidth = function getWidth(index) {\n    var width = props.width,\n        _props$rows = props.rows,\n        rows = _props$rows === void 0 ? 2 : _props$rows;\n\n    if (Array.isArray(width)) {\n      return width[index];\n    } // last paragraph\n\n\n    if (rows - 1 === index) {\n      return width;\n    }\n\n    return undefined;\n  };\n\n  var prefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      rows = props.rows;\n\n  var rowList = _toConsumableArray(Array(rows)).map(function (_, index) {\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(\"li\", {\n        key: index,\n        style: {\n          width: getWidth(index)\n        }\n      })\n    );\n  });\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames(prefixCls, className),\n    style: style\n  }, rowList);\n};\n\nexport default Paragraph;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/skeleton/Paragraph.js"],"names":["_toConsumableArray","classNames","React","Paragraph","props","getWidth","index","width","rows","Array","isArray","undefined","prefixCls","className","style","rowList","map","_","createElement","key"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACzB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,QACEC,KADF,GAGIH,KAHJ,CACEG,KADF;AAAA,sBAGIH,KAHJ,CAEEI,IAFF;AAAA,QAEEA,IAFF,4BAES,CAFT;;AAIA,QAAIC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;AACxB,aAAOA,KAAK,CAACD,KAAD,CAAZ;AACD,KAPuB,CAQxB;;;AACA,QAAIE,IAAI,GAAG,CAAP,KAAaF,KAAjB,EAAwB;AACtB,aAAOC,KAAP;AACD;;AACD,WAAOI,SAAP;AACD,GAbD;;AAcA,MACEC,SADF,GAKIR,KALJ,CACEQ,SADF;AAAA,MAEEC,SAFF,GAKIT,KALJ,CAEES,SAFF;AAAA,MAGEC,KAHF,GAKIV,KALJ,CAGEU,KAHF;AAAA,MAIEN,IAJF,GAKIJ,KALJ,CAIEI,IAJF;;AAMA,MAAMO,OAAO,GAAGf,kBAAkB,CAACS,KAAK,CAACD,IAAD,CAAN,CAAlB,CAAgCQ,GAAhC,CAAoC,UAACC,CAAD,EAAIX,KAAJ;AAAA;AACpD;AACA;AACAJ,MAAAA,KAAK,CAACgB,aAAN,CAAoB,IAApB,EAA0B;AACxBC,QAAAA,GAAG,EAAEb,KADmB;AAExBQ,QAAAA,KAAK,EAAE;AACLP,UAAAA,KAAK,EAAEF,QAAQ,CAACC,KAAD;AADV;AAFiB,OAA1B;AAHoD;AAAA,GAApC,CAAhB;;AASA,SAAO,aAAaJ,KAAK,CAACgB,aAAN,CAAoB,IAApB,EAA0B;AAC5CL,IAAAA,SAAS,EAAEZ,UAAU,CAACW,SAAD,EAAYC,SAAZ,CADuB;AAE5CC,IAAAA,KAAK,EAAEA;AAFqC,GAA1B,EAGjBC,OAHiB,CAApB;AAID,CAlCD;;AAmCA,eAAeZ,SAAf","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nconst Paragraph = props => {\n  const getWidth = index => {\n    const {\n      width,\n      rows = 2\n    } = props;\n    if (Array.isArray(width)) {\n      return width[index];\n    }\n    // last paragraph\n    if (rows - 1 === index) {\n      return width;\n    }\n    return undefined;\n  };\n  const {\n    prefixCls,\n    className,\n    style,\n    rows\n  } = props;\n  const rowList = _toConsumableArray(Array(rows)).map((_, index) =>\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-array-index-key\n  React.createElement(\"li\", {\n    key: index,\n    style: {\n      width: getWidth(index)\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames(prefixCls, className),\n    style: style\n  }, rowList);\n};\nexport default Paragraph;"]},"metadata":{},"sourceType":"module"}