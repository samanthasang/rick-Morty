{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\nimport classNames from 'classnames';\nimport RcTree from 'rc-tree';\nimport React from 'react';\nimport initCollapseMotion from '../_util/motion';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport dropIndicatorRender from './utils/dropIndicator';\nimport SwitcherIconCom from './utils/iconUtil';\nvar Tree = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction,\n      virtual = _React$useContext.virtual;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      _props$showIcon = props.showIcon,\n      showIcon = _props$showIcon === void 0 ? false : _props$showIcon,\n      showLine = props.showLine,\n      switcherIcon = props.switcherIcon,\n      _props$blockNode = props.blockNode,\n      blockNode = _props$blockNode === void 0 ? false : _props$blockNode,\n      children = props.children,\n      _props$checkable = props.checkable,\n      checkable = _props$checkable === void 0 ? false : _props$checkable,\n      _props$selectable = props.selectable,\n      selectable = _props$selectable === void 0 ? true : _props$selectable,\n      draggable = props.draggable,\n      customMotion = props.motion;\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n  var rootPrefixCls = getPrefixCls();\n  var motion = customMotion !== null && customMotion !== void 0 ? customMotion : Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false\n  });\n  var newProps = Object.assign(Object.assign({}, props), {\n    checkable: checkable,\n    selectable: selectable,\n    showIcon: showIcon,\n    motion: motion,\n    blockNode: blockNode,\n    showLine: Boolean(showLine),\n    dropIndicatorRender: dropIndicatorRender\n  });\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1];\n\n  var draggableConfig = React.useMemo(function () {\n    if (!draggable) {\n      return false;\n    }\n\n    var mergedDraggable = {};\n\n    switch (typeof draggable) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n\n      case 'object':\n        mergedDraggable = Object.assign({}, draggable);\n        break;\n\n      default:\n        break;\n      // Do nothing\n    }\n\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\n    }\n\n    return mergedDraggable;\n  }, [draggable]);\n\n  var renderSwitcherIcon = function renderSwitcherIcon(nodeProps) {\n    return /*#__PURE__*/React.createElement(SwitcherIconCom, {\n      prefixCls: prefixCls,\n      switcherIcon: switcherIcon,\n      treeNodeProps: nodeProps,\n      showLine: showLine\n    });\n  };\n\n  return wrapSSR( /*#__PURE__*/React.createElement(RcTree, Object.assign({\n    itemHeight: 20,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    prefixCls: prefixCls,\n    className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), _defineProperty(_classNames, \"\".concat(prefixCls, \"-unselectable\"), !selectable), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className, hashId),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-checkbox-inner\")\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: renderSwitcherIcon,\n    draggable: draggableConfig\n  }), children));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Tree.displayName = 'Tree';\n}\n\nexport default Tree;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/tree/Tree.js"],"names":["HolderOutlined","classNames","RcTree","React","initCollapseMotion","ConfigContext","useStyle","dropIndicatorRender","SwitcherIconCom","Tree","forwardRef","props","ref","useContext","getPrefixCls","direction","virtual","customizePrefixCls","prefixCls","className","showIcon","showLine","switcherIcon","blockNode","children","checkable","selectable","draggable","customMotion","motion","rootPrefixCls","Object","assign","motionAppear","newProps","Boolean","wrapSSR","hashId","draggableConfig","useMemo","mergedDraggable","nodeDraggable","icon","createElement","renderSwitcherIcon","nodeProps","treeNodeProps","itemHeight","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["import HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\nimport classNames from 'classnames';\nimport RcTree from 'rc-tree';\nimport React from 'react';\nimport initCollapseMotion from '../_util/motion';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport dropIndicatorRender from './utils/dropIndicator';\nimport SwitcherIconCom from './utils/iconUtil';\nconst Tree = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    getPrefixCls,\n    direction,\n    virtual\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    showIcon = false,\n    showLine,\n    switcherIcon,\n    blockNode = false,\n    children,\n    checkable = false,\n    selectable = true,\n    draggable,\n    motion: customMotion\n  } = props;\n  const prefixCls = getPrefixCls('tree', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const motion = customMotion !== null && customMotion !== void 0 ? customMotion : Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false\n  });\n  const newProps = Object.assign(Object.assign({}, props), {\n    checkable,\n    selectable,\n    showIcon,\n    motion,\n    blockNode,\n    showLine: Boolean(showLine),\n    dropIndicatorRender\n  });\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const draggableConfig = React.useMemo(() => {\n    if (!draggable) {\n      return false;\n    }\n    let mergedDraggable = {};\n    switch (typeof draggable) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n      case 'object':\n        mergedDraggable = Object.assign({}, draggable);\n        break;\n      default:\n        break;\n      // Do nothing\n    }\n\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\n    }\n    return mergedDraggable;\n  }, [draggable]);\n  const renderSwitcherIcon = nodeProps => /*#__PURE__*/React.createElement(SwitcherIconCom, {\n    prefixCls: prefixCls,\n    switcherIcon: switcherIcon,\n    treeNodeProps: nodeProps,\n    showLine: showLine\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(RcTree, Object.assign({\n    itemHeight: 20,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-icon-hide`]: !showIcon,\n      [`${prefixCls}-block-node`]: blockNode,\n      [`${prefixCls}-unselectable`]: !selectable,\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, className, hashId),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-checkbox-inner`\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: renderSwitcherIcon,\n    draggable: draggableConfig\n  }), children));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Tree.displayName = 'Tree';\n}\nexport default Tree;"]},"metadata":{},"sourceType":"module"}