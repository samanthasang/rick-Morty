{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"data\", \"selectable\", \"checkable\", \"expandedKeys\", \"selectedKeys\", \"checkedKeys\", \"loadedKeys\", \"loadingKeys\", \"halfCheckedKeys\", \"keyEntities\", \"disabled\", \"dragging\", \"dragOverNodeKey\", \"dropPosition\", \"motion\", \"height\", \"itemHeight\", \"virtual\", \"focusable\", \"activeItem\", \"focused\", \"tabIndex\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onActiveChange\", \"onListChangeStart\", \"onListChangeEnd\"];\n/**\n * Handle virtual list of the TreeNodes.\n */\n\nimport * as React from 'react';\nimport VirtualList from 'rc-virtual-list';\nimport MotionTreeNode from './MotionTreeNode';\nimport { findExpandedKeys, getExpandRange } from './utils/diffUtil';\nimport { getTreeNodeProps, getKey } from './utils/treeUtil';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\n\nvar noop = function noop() {};\n\nexport var MOTION_KEY = \"RC_TREE_MOTION_\".concat(Math.random());\nvar MotionNode = {\n  key: MOTION_KEY\n};\nexport var MotionEntity = {\n  key: MOTION_KEY,\n  level: 0,\n  index: 0,\n  pos: '0',\n  node: MotionNode,\n  nodes: [MotionNode]\n};\nvar MotionFlattenData = {\n  parent: null,\n  children: [],\n  pos: MotionEntity.pos,\n  data: MotionNode,\n  title: null,\n  key: MOTION_KEY,\n\n  /** Hold empty list here since we do not use it */\n  isStart: [],\n  isEnd: []\n};\n/**\n * We only need get visible content items to play the animation.\n */\n\nexport function getMinimumRangeTransitionRange(list, virtual, height, itemHeight) {\n  if (virtual === false || !height) {\n    return list;\n  }\n\n  return list.slice(0, Math.ceil(height / itemHeight) + 1);\n}\n\nfunction itemKey(item) {\n  var key = item.key,\n      pos = item.pos;\n  return getKey(key, pos);\n}\n\nfunction getAccessibilityPath(item) {\n  var path = String(item.data.key);\n  var current = item;\n\n  while (current.parent) {\n    current = current.parent;\n    path = \"\".concat(current.data.key, \" > \").concat(path);\n  }\n\n  return path;\n}\n\nvar NodeList = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n      data = props.data,\n      selectable = props.selectable,\n      checkable = props.checkable,\n      expandedKeys = props.expandedKeys,\n      selectedKeys = props.selectedKeys,\n      checkedKeys = props.checkedKeys,\n      loadedKeys = props.loadedKeys,\n      loadingKeys = props.loadingKeys,\n      halfCheckedKeys = props.halfCheckedKeys,\n      keyEntities = props.keyEntities,\n      disabled = props.disabled,\n      dragging = props.dragging,\n      dragOverNodeKey = props.dragOverNodeKey,\n      dropPosition = props.dropPosition,\n      motion = props.motion,\n      height = props.height,\n      itemHeight = props.itemHeight,\n      virtual = props.virtual,\n      focusable = props.focusable,\n      activeItem = props.activeItem,\n      focused = props.focused,\n      tabIndex = props.tabIndex,\n      onKeyDown = props.onKeyDown,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      onActiveChange = props.onActiveChange,\n      onListChangeStart = props.onListChangeStart,\n      onListChangeEnd = props.onListChangeEnd,\n      domProps = _objectWithoutProperties(props, _excluded); // =============================== Ref ================================\n\n\n  var listRef = React.useRef(null);\n  var indentMeasurerRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      scrollTo: function scrollTo(scroll) {\n        listRef.current.scrollTo(scroll);\n      },\n      getIndentWidth: function getIndentWidth() {\n        return indentMeasurerRef.current.offsetWidth;\n      }\n    };\n  }); // ============================== Motion ==============================\n\n  var _React$useState = React.useState(expandedKeys),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      prevExpandedKeys = _React$useState2[0],\n      setPrevExpandedKeys = _React$useState2[1];\n\n  var _React$useState3 = React.useState(data),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      prevData = _React$useState4[0],\n      setPrevData = _React$useState4[1];\n\n  var _React$useState5 = React.useState(data),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      transitionData = _React$useState6[0],\n      setTransitionData = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      transitionRange = _React$useState8[0],\n      setTransitionRange = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      motionType = _React$useState10[0],\n      setMotionType = _React$useState10[1]; // When motion end but data change, this will makes data back to previous one\n\n\n  var dataRef = React.useRef(data);\n  dataRef.current = data;\n\n  function onMotionEnd() {\n    var latestData = dataRef.current;\n    setPrevData(latestData);\n    setTransitionData(latestData);\n    setTransitionRange([]);\n    setMotionType(null);\n    onListChangeEnd();\n  } // Do animation if expanded keys changed\n\n\n  React.useEffect(function () {\n    setPrevExpandedKeys(expandedKeys);\n    var diffExpanded = findExpandedKeys(prevExpandedKeys, expandedKeys);\n\n    if (diffExpanded.key !== null) {\n      if (diffExpanded.add) {\n        var keyIndex = prevData.findIndex(function (_ref) {\n          var key = _ref.key;\n          return key === diffExpanded.key;\n        });\n        var rangeNodes = getMinimumRangeTransitionRange(getExpandRange(prevData, data, diffExpanded.key), virtual, height, itemHeight);\n        var newTransitionData = prevData.slice();\n        newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n        setTransitionData(newTransitionData);\n        setTransitionRange(rangeNodes);\n        setMotionType('show');\n      } else {\n        var _keyIndex = data.findIndex(function (_ref2) {\n          var key = _ref2.key;\n          return key === diffExpanded.key;\n        });\n\n        var _rangeNodes = getMinimumRangeTransitionRange(getExpandRange(data, prevData, diffExpanded.key), virtual, height, itemHeight);\n\n        var _newTransitionData = data.slice();\n\n        _newTransitionData.splice(_keyIndex + 1, 0, MotionFlattenData);\n\n        setTransitionData(_newTransitionData);\n        setTransitionRange(_rangeNodes);\n        setMotionType('hide');\n      }\n    } else if (prevData !== data) {\n      // If whole data changed, we just refresh the list\n      setPrevData(data);\n      setTransitionData(data);\n    }\n  }, [expandedKeys, data]); // We should clean up motion if is changed by dragging\n\n  React.useEffect(function () {\n    if (!dragging) {\n      onMotionEnd();\n    }\n  }, [dragging]);\n  var mergedData = motion ? transitionData : data;\n  var treeNodeRequiredProps = {\n    expandedKeys: expandedKeys,\n    selectedKeys: selectedKeys,\n    loadedKeys: loadedKeys,\n    loadingKeys: loadingKeys,\n    checkedKeys: checkedKeys,\n    halfCheckedKeys: halfCheckedKeys,\n    dragOverNodeKey: dragOverNodeKey,\n    dropPosition: dropPosition,\n    keyEntities: keyEntities\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, focused && activeItem && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, getAccessibilityPath(activeItem)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n    style: HIDDEN_STYLE,\n    disabled: focusable === false || disabled,\n    tabIndex: focusable !== false ? tabIndex : null,\n    onKeyDown: onKeyDown,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    value: \"\",\n    onChange: noop,\n    \"aria-label\": \"for screen reader\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-treenode\"),\n    \"aria-hidden\": true,\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      visibility: 'hidden',\n      height: 0,\n      overflow: 'hidden',\n      border: 0,\n      padding: 0\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-indent\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: indentMeasurerRef,\n    className: \"\".concat(prefixCls, \"-indent-unit\")\n  }))), /*#__PURE__*/React.createElement(VirtualList, _extends({}, domProps, {\n    data: mergedData,\n    itemKey: itemKey,\n    height: height,\n    fullHeight: false,\n    virtual: virtual,\n    itemHeight: itemHeight,\n    prefixCls: \"\".concat(prefixCls, \"-list\"),\n    ref: listRef,\n    onVisibleChange: function onVisibleChange(originList, fullList) {\n      var originSet = new Set(originList);\n      var restList = fullList.filter(function (item) {\n        return !originSet.has(item);\n      }); // Motion node is not render. Skip motion\n\n      if (restList.some(function (item) {\n        return itemKey(item) === MOTION_KEY;\n      })) {\n        onMotionEnd();\n      }\n    }\n  }), function (treeNode) {\n    var pos = treeNode.pos,\n        restProps = _extends({}, (_objectDestructuringEmpty(treeNode.data), treeNode.data)),\n        title = treeNode.title,\n        key = treeNode.key,\n        isStart = treeNode.isStart,\n        isEnd = treeNode.isEnd;\n\n    var mergedKey = getKey(key, pos);\n    delete restProps.key;\n    delete restProps.children;\n    var treeNodeProps = getTreeNodeProps(mergedKey, treeNodeRequiredProps);\n    return /*#__PURE__*/React.createElement(MotionTreeNode, _extends({}, restProps, treeNodeProps, {\n      title: title,\n      active: !!activeItem && key === activeItem.key,\n      pos: pos,\n      data: treeNode.data,\n      isStart: isStart,\n      isEnd: isEnd,\n      motion: motion,\n      motionNodes: key === MOTION_KEY ? transitionRange : null,\n      motionType: motionType,\n      onMotionStart: onListChangeStart,\n      onMotionEnd: onMotionEnd,\n      treeNodeRequiredProps: treeNodeRequiredProps,\n      onMouseMove: function onMouseMove() {\n        onActiveChange(null);\n      }\n    }));\n  }));\n});\nNodeList.displayName = 'NodeList';\nexport default NodeList;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-tree/es/NodeList.js"],"names":["_objectDestructuringEmpty","_extends","_slicedToArray","_objectWithoutProperties","_excluded","React","VirtualList","MotionTreeNode","findExpandedKeys","getExpandRange","getTreeNodeProps","getKey","HIDDEN_STYLE","width","height","display","overflow","opacity","border","padding","margin","noop","MOTION_KEY","concat","Math","random","MotionNode","key","MotionEntity","level","index","pos","node","nodes","MotionFlattenData","parent","children","data","title","isStart","isEnd","getMinimumRangeTransitionRange","list","virtual","itemHeight","slice","ceil","itemKey","item","getAccessibilityPath","path","String","current","NodeList","forwardRef","props","ref","prefixCls","selectable","checkable","expandedKeys","selectedKeys","checkedKeys","loadedKeys","loadingKeys","halfCheckedKeys","keyEntities","disabled","dragging","dragOverNodeKey","dropPosition","motion","focusable","activeItem","focused","tabIndex","onKeyDown","onFocus","onBlur","onActiveChange","onListChangeStart","onListChangeEnd","domProps","listRef","useRef","indentMeasurerRef","useImperativeHandle","scrollTo","scroll","getIndentWidth","offsetWidth","_React$useState","useState","_React$useState2","prevExpandedKeys","setPrevExpandedKeys","_React$useState3","_React$useState4","prevData","setPrevData","_React$useState5","_React$useState6","transitionData","setTransitionData","_React$useState7","_React$useState8","transitionRange","setTransitionRange","_React$useState9","_React$useState10","motionType","setMotionType","dataRef","onMotionEnd","latestData","useEffect","diffExpanded","add","keyIndex","findIndex","_ref","rangeNodes","newTransitionData","splice","_keyIndex","_ref2","_rangeNodes","_newTransitionData","mergedData","treeNodeRequiredProps","createElement","Fragment","style","value","onChange","className","position","pointerEvents","visibility","fullHeight","onVisibleChange","originList","fullList","originSet","Set","restList","filter","has","some","treeNode","restProps","mergedKey","treeNodeProps","active","motionNodes","onMotionStart","onMouseMove","displayName"],"mappings":"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","sourcesContent":["import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"data\", \"selectable\", \"checkable\", \"expandedKeys\", \"selectedKeys\", \"checkedKeys\", \"loadedKeys\", \"loadingKeys\", \"halfCheckedKeys\", \"keyEntities\", \"disabled\", \"dragging\", \"dragOverNodeKey\", \"dropPosition\", \"motion\", \"height\", \"itemHeight\", \"virtual\", \"focusable\", \"activeItem\", \"focused\", \"tabIndex\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onActiveChange\", \"onListChangeStart\", \"onListChangeEnd\"];\n/**\n * Handle virtual list of the TreeNodes.\n */\nimport * as React from 'react';\nimport VirtualList from 'rc-virtual-list';\nimport MotionTreeNode from './MotionTreeNode';\nimport { findExpandedKeys, getExpandRange } from './utils/diffUtil';\nimport { getTreeNodeProps, getKey } from './utils/treeUtil';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\nvar noop = function noop() {};\nexport var MOTION_KEY = \"RC_TREE_MOTION_\".concat(Math.random());\nvar MotionNode = {\n  key: MOTION_KEY\n};\nexport var MotionEntity = {\n  key: MOTION_KEY,\n  level: 0,\n  index: 0,\n  pos: '0',\n  node: MotionNode,\n  nodes: [MotionNode]\n};\nvar MotionFlattenData = {\n  parent: null,\n  children: [],\n  pos: MotionEntity.pos,\n  data: MotionNode,\n  title: null,\n  key: MOTION_KEY,\n  /** Hold empty list here since we do not use it */\n  isStart: [],\n  isEnd: []\n};\n/**\n * We only need get visible content items to play the animation.\n */\nexport function getMinimumRangeTransitionRange(list, virtual, height, itemHeight) {\n  if (virtual === false || !height) {\n    return list;\n  }\n  return list.slice(0, Math.ceil(height / itemHeight) + 1);\n}\nfunction itemKey(item) {\n  var key = item.key,\n    pos = item.pos;\n  return getKey(key, pos);\n}\nfunction getAccessibilityPath(item) {\n  var path = String(item.data.key);\n  var current = item;\n  while (current.parent) {\n    current = current.parent;\n    path = \"\".concat(current.data.key, \" > \").concat(path);\n  }\n  return path;\n}\nvar NodeList = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n    data = props.data,\n    selectable = props.selectable,\n    checkable = props.checkable,\n    expandedKeys = props.expandedKeys,\n    selectedKeys = props.selectedKeys,\n    checkedKeys = props.checkedKeys,\n    loadedKeys = props.loadedKeys,\n    loadingKeys = props.loadingKeys,\n    halfCheckedKeys = props.halfCheckedKeys,\n    keyEntities = props.keyEntities,\n    disabled = props.disabled,\n    dragging = props.dragging,\n    dragOverNodeKey = props.dragOverNodeKey,\n    dropPosition = props.dropPosition,\n    motion = props.motion,\n    height = props.height,\n    itemHeight = props.itemHeight,\n    virtual = props.virtual,\n    focusable = props.focusable,\n    activeItem = props.activeItem,\n    focused = props.focused,\n    tabIndex = props.tabIndex,\n    onKeyDown = props.onKeyDown,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    onActiveChange = props.onActiveChange,\n    onListChangeStart = props.onListChangeStart,\n    onListChangeEnd = props.onListChangeEnd,\n    domProps = _objectWithoutProperties(props, _excluded);\n  // =============================== Ref ================================\n  var listRef = React.useRef(null);\n  var indentMeasurerRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      scrollTo: function scrollTo(scroll) {\n        listRef.current.scrollTo(scroll);\n      },\n      getIndentWidth: function getIndentWidth() {\n        return indentMeasurerRef.current.offsetWidth;\n      }\n    };\n  });\n  // ============================== Motion ==============================\n  var _React$useState = React.useState(expandedKeys),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    prevExpandedKeys = _React$useState2[0],\n    setPrevExpandedKeys = _React$useState2[1];\n  var _React$useState3 = React.useState(data),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    prevData = _React$useState4[0],\n    setPrevData = _React$useState4[1];\n  var _React$useState5 = React.useState(data),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    transitionData = _React$useState6[0],\n    setTransitionData = _React$useState6[1];\n  var _React$useState7 = React.useState([]),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    transitionRange = _React$useState8[0],\n    setTransitionRange = _React$useState8[1];\n  var _React$useState9 = React.useState(null),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    motionType = _React$useState10[0],\n    setMotionType = _React$useState10[1];\n  // When motion end but data change, this will makes data back to previous one\n  var dataRef = React.useRef(data);\n  dataRef.current = data;\n  function onMotionEnd() {\n    var latestData = dataRef.current;\n    setPrevData(latestData);\n    setTransitionData(latestData);\n    setTransitionRange([]);\n    setMotionType(null);\n    onListChangeEnd();\n  }\n  // Do animation if expanded keys changed\n  React.useEffect(function () {\n    setPrevExpandedKeys(expandedKeys);\n    var diffExpanded = findExpandedKeys(prevExpandedKeys, expandedKeys);\n    if (diffExpanded.key !== null) {\n      if (diffExpanded.add) {\n        var keyIndex = prevData.findIndex(function (_ref) {\n          var key = _ref.key;\n          return key === diffExpanded.key;\n        });\n        var rangeNodes = getMinimumRangeTransitionRange(getExpandRange(prevData, data, diffExpanded.key), virtual, height, itemHeight);\n        var newTransitionData = prevData.slice();\n        newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n        setTransitionData(newTransitionData);\n        setTransitionRange(rangeNodes);\n        setMotionType('show');\n      } else {\n        var _keyIndex = data.findIndex(function (_ref2) {\n          var key = _ref2.key;\n          return key === diffExpanded.key;\n        });\n        var _rangeNodes = getMinimumRangeTransitionRange(getExpandRange(data, prevData, diffExpanded.key), virtual, height, itemHeight);\n        var _newTransitionData = data.slice();\n        _newTransitionData.splice(_keyIndex + 1, 0, MotionFlattenData);\n        setTransitionData(_newTransitionData);\n        setTransitionRange(_rangeNodes);\n        setMotionType('hide');\n      }\n    } else if (prevData !== data) {\n      // If whole data changed, we just refresh the list\n      setPrevData(data);\n      setTransitionData(data);\n    }\n  }, [expandedKeys, data]);\n  // We should clean up motion if is changed by dragging\n  React.useEffect(function () {\n    if (!dragging) {\n      onMotionEnd();\n    }\n  }, [dragging]);\n  var mergedData = motion ? transitionData : data;\n  var treeNodeRequiredProps = {\n    expandedKeys: expandedKeys,\n    selectedKeys: selectedKeys,\n    loadedKeys: loadedKeys,\n    loadingKeys: loadingKeys,\n    checkedKeys: checkedKeys,\n    halfCheckedKeys: halfCheckedKeys,\n    dragOverNodeKey: dragOverNodeKey,\n    dropPosition: dropPosition,\n    keyEntities: keyEntities\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, focused && activeItem && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, getAccessibilityPath(activeItem)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n    style: HIDDEN_STYLE,\n    disabled: focusable === false || disabled,\n    tabIndex: focusable !== false ? tabIndex : null,\n    onKeyDown: onKeyDown,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    value: \"\",\n    onChange: noop,\n    \"aria-label\": \"for screen reader\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-treenode\"),\n    \"aria-hidden\": true,\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      visibility: 'hidden',\n      height: 0,\n      overflow: 'hidden',\n      border: 0,\n      padding: 0\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-indent\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: indentMeasurerRef,\n    className: \"\".concat(prefixCls, \"-indent-unit\")\n  }))), /*#__PURE__*/React.createElement(VirtualList, _extends({}, domProps, {\n    data: mergedData,\n    itemKey: itemKey,\n    height: height,\n    fullHeight: false,\n    virtual: virtual,\n    itemHeight: itemHeight,\n    prefixCls: \"\".concat(prefixCls, \"-list\"),\n    ref: listRef,\n    onVisibleChange: function onVisibleChange(originList, fullList) {\n      var originSet = new Set(originList);\n      var restList = fullList.filter(function (item) {\n        return !originSet.has(item);\n      });\n      // Motion node is not render. Skip motion\n      if (restList.some(function (item) {\n        return itemKey(item) === MOTION_KEY;\n      })) {\n        onMotionEnd();\n      }\n    }\n  }), function (treeNode) {\n    var pos = treeNode.pos,\n      restProps = _extends({}, (_objectDestructuringEmpty(treeNode.data), treeNode.data)),\n      title = treeNode.title,\n      key = treeNode.key,\n      isStart = treeNode.isStart,\n      isEnd = treeNode.isEnd;\n    var mergedKey = getKey(key, pos);\n    delete restProps.key;\n    delete restProps.children;\n    var treeNodeProps = getTreeNodeProps(mergedKey, treeNodeRequiredProps);\n    return /*#__PURE__*/React.createElement(MotionTreeNode, _extends({}, restProps, treeNodeProps, {\n      title: title,\n      active: !!activeItem && key === activeItem.key,\n      pos: pos,\n      data: treeNode.data,\n      isStart: isStart,\n      isEnd: isEnd,\n      motion: motion,\n      motionNodes: key === MOTION_KEY ? transitionRange : null,\n      motionType: motionType,\n      onMotionStart: onListChangeStart,\n      onMotionEnd: onMotionEnd,\n      treeNodeRequiredProps: treeNodeRequiredProps,\n      onMouseMove: function onMouseMove() {\n        onActiveChange(null);\n      }\n    }));\n  }));\n});\nNodeList.displayName = 'NodeList';\nexport default NodeList;"]},"metadata":{},"sourceType":"module"}