{"ast":null,"code":"import * as React from 'react';\nimport LocaleContext from './context';\nimport defaultLocaleData from './en_US';\n\nconst useLocale = (componentName, defaultLocale) => {\n  const fullLocale = React.useContext(LocaleContext);\n  const getLocale = React.useMemo(() => {\n    var _a;\n\n    const locale = defaultLocale || defaultLocaleData[componentName];\n    const localeFromContext = (_a = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, fullLocale]);\n  const getLocaleCode = React.useMemo(() => {\n    const localeCode = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.locale; // Had use LocaleProvide but didn't set locale\n\n    if ((fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.exist) && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n\n    return localeCode;\n  }, [fullLocale]);\n  return [getLocale, getLocaleCode];\n};\n\nexport default useLocale;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/locale/useLocale.js"],"names":["React","LocaleContext","defaultLocaleData","useLocale","componentName","defaultLocale","fullLocale","useContext","getLocale","useMemo","_a","locale","localeFromContext","Object","assign","getLocaleCode","localeCode","exist"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAOC,iBAAP,MAA8B,SAA9B;;AACA,MAAMC,SAAS,GAAG,CAACC,aAAD,EAAgBC,aAAhB,KAAkC;AAClD,QAAMC,UAAU,GAAGN,KAAK,CAACO,UAAN,CAAiBN,aAAjB,CAAnB;AACA,QAAMO,SAAS,GAAGR,KAAK,CAACS,OAAN,CAAc,MAAM;AACpC,QAAIC,EAAJ;;AACA,UAAMC,MAAM,GAAGN,aAAa,IAAIH,iBAAiB,CAACE,aAAD,CAAjD;AACA,UAAMQ,iBAAiB,GAAG,CAACF,EAAE,GAAGJ,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACF,aAAD,CAAxE,MAA6F,IAA7F,IAAqGM,EAAE,KAAK,KAAK,CAAjH,GAAqHA,EAArH,GAA0H,EAApJ;AACA,WAAOG,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,OAAOH,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,EAArC,GAA0CA,MAA5D,CAAd,EAAmFC,iBAAiB,IAAI,EAAxG,CAAP;AACD,GALiB,EAKf,CAACR,aAAD,EAAgBC,aAAhB,EAA+BC,UAA/B,CALe,CAAlB;AAMA,QAAMS,aAAa,GAAGf,KAAK,CAACS,OAAN,CAAc,MAAM;AACxC,UAAMO,UAAU,GAAGV,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACK,MAAtF,CADwC,CAExC;;AACA,QAAI,CAACL,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACW,KAApE,KAA8E,CAACD,UAAnF,EAA+F;AAC7F,aAAOd,iBAAiB,CAACS,MAAzB;AACD;;AACD,WAAOK,UAAP;AACD,GAPqB,EAOnB,CAACV,UAAD,CAPmB,CAAtB;AAQA,SAAO,CAACE,SAAD,EAAYO,aAAZ,CAAP;AACD,CAjBD;;AAkBA,eAAeZ,SAAf","sourcesContent":["import * as React from 'react';\nimport LocaleContext from './context';\nimport defaultLocaleData from './en_US';\nconst useLocale = (componentName, defaultLocale) => {\n  const fullLocale = React.useContext(LocaleContext);\n  const getLocale = React.useMemo(() => {\n    var _a;\n    const locale = defaultLocale || defaultLocaleData[componentName];\n    const localeFromContext = (_a = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, fullLocale]);\n  const getLocaleCode = React.useMemo(() => {\n    const localeCode = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if ((fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.exist) && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n    return localeCode;\n  }, [fullLocale]);\n  return [getLocale, getLocaleCode];\n};\nexport default useLocale;"]},"metadata":{},"sourceType":"module"}