{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\n\nvar SkeletonInput = function SkeletonInput(props) {\n  var _classNames;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      rootClassName = props.rootClassName,\n      active = props.active,\n      block = props.block,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'default' : _props$size;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1];\n\n  var otherProps = omit(props, ['prefixCls']);\n  var cls = classNames(prefixCls, \"\".concat(prefixCls, \"-element\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-active\"), active), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block\"), block), _classNames), className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: \"\".concat(prefixCls, \"-input\"),\n    size: size\n  }, otherProps))));\n};\n\nexport default SkeletonInput;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/skeleton/Input.js"],"names":["classNames","omit","React","ConfigContext","Element","useStyle","SkeletonInput","props","customizePrefixCls","prefixCls","className","rootClassName","active","block","size","useContext","getPrefixCls","wrapSSR","hashId","otherProps","cls","createElement","Object","assign"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,SAArB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA;;AAC7B,MACaC,kBADb,GAOID,KAPJ,CACEE,SADF;AAAA,MAEEC,SAFF,GAOIH,KAPJ,CAEEG,SAFF;AAAA,MAGEC,aAHF,GAOIJ,KAPJ,CAGEI,aAHF;AAAA,MAIEC,MAJF,GAOIL,KAPJ,CAIEK,MAJF;AAAA,MAKEC,KALF,GAOIN,KAPJ,CAKEM,KALF;AAAA,oBAOIN,KAPJ,CAMEO,IANF;AAAA,MAMEA,IANF,4BAMS,SANT;;AAQA,0BAEIZ,KAAK,CAACa,UAAN,CAAiBZ,aAAjB,CAFJ;AAAA,MACEa,YADF,qBACEA,YADF;;AAGA,MAAMP,SAAS,GAAGO,YAAY,CAAC,UAAD,EAAaR,kBAAb,CAA9B;;AACA,kBAA0BH,QAAQ,CAACI,SAAD,CAAlC;AAAA;AAAA,MAAOQ,OAAP;AAAA,MAAgBC,MAAhB;;AACA,MAAMC,UAAU,GAAGlB,IAAI,CAACM,KAAD,EAAQ,CAAC,WAAD,CAAR,CAAvB;AACA,MAAMa,GAAG,GAAGpB,UAAU,CAACS,SAAD,YAAeA,SAAf,yEAChBA,SADgB,cACKG,MADL,0CAEhBH,SAFgB,aAEII,KAFJ,iBAGnBH,SAHmB,EAGRC,aAHQ,EAGOO,MAHP,CAAtB;AAIA,SAAOD,OAAO,EAAE,aAAaf,KAAK,CAACmB,aAAN,CAAoB,KAApB,EAA2B;AACtDX,IAAAA,SAAS,EAAEU;AAD2C,GAA3B,EAE1B,aAAalB,KAAK,CAACmB,aAAN,CAAoBjB,OAApB,EAA6BkB,MAAM,CAACC,MAAP,CAAc;AACzDd,IAAAA,SAAS,YAAKA,SAAL,WADgD;AAEzDK,IAAAA,IAAI,EAAEA;AAFmD,GAAd,EAG1CK,UAH0C,CAA7B,CAFa,CAAf,CAAd;AAMD,CAzBD;;AA0BA,eAAeb,aAAf","sourcesContent":["import classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonInput = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    block,\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-input`,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonInput;"]},"metadata":{},"sourceType":"module"}