{"ast":null,"code":"import _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useStyleRegister } from '@ant-design/cssinjs';\nimport { useContext } from 'react';\nimport { ConfigContext } from '../../config-provider/context';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport { mergeToken, statisticToken, useToken } from '../internal';\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken, options) {\n  return function (prefixCls) {\n    var _useToken = useToken(),\n        _useToken2 = _slicedToArray(_useToken, 3),\n        theme = _useToken2[0],\n        token = _useToken2[1],\n        hashId = _useToken2[2];\n\n    var _useContext = useContext(ConfigContext),\n        getPrefixCls = _useContext.getPrefixCls,\n        iconPrefixCls = _useContext.iconPrefixCls,\n        csp = _useContext.csp;\n\n    var rootPrefixCls = getPrefixCls(); // Shared config\n\n    var sharedConfig = {\n      theme: theme,\n      token: token,\n      hashId: hashId,\n      nonce: function nonce() {\n        return csp === null || csp === void 0 ? void 0 : csp.nonce;\n      }\n    }; // Generate style for all a tags in antd component.\n\n    useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: ['Shared', rootPrefixCls]\n    }), function () {\n      return [{\n        // Link\n        '&': genLinkStyle(token)\n      }];\n    });\n    return [useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: [component, prefixCls, iconPrefixCls]\n    }), function () {\n      var _statisticToken = statisticToken(token),\n          proxyToken = _statisticToken.token,\n          flush = _statisticToken.flush;\n\n      var defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(proxyToken) : getDefaultToken;\n      var mergedComponentToken = Object.assign(Object.assign({}, defaultComponentToken), token[component]);\n      var componentCls = \".\".concat(prefixCls);\n      var mergedToken = mergeToken(proxyToken, {\n        componentCls: componentCls,\n        prefixCls: prefixCls,\n        iconCls: \".\".concat(iconPrefixCls),\n        antCls: \".\".concat(rootPrefixCls)\n      }, mergedComponentToken);\n      var styleInterpolation = styleFn(mergedToken, {\n        hashId: hashId,\n        prefixCls: prefixCls,\n        rootPrefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        overrideComponentToken: token[component]\n      });\n      flush(component, mergedComponentToken);\n      return [(options === null || options === void 0 ? void 0 : options.resetStyle) === false ? null : genCommonStyle(token, prefixCls), styleInterpolation];\n    }), hashId];\n  };\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/theme/util/genComponentStyleHook.js"],"names":["useStyleRegister","useContext","ConfigContext","genCommonStyle","genLinkStyle","mergeToken","statisticToken","useToken","genComponentStyleHook","component","styleFn","getDefaultToken","options","prefixCls","theme","token","hashId","getPrefixCls","iconPrefixCls","csp","rootPrefixCls","sharedConfig","nonce","Object","assign","path","proxyToken","flush","defaultComponentToken","mergedComponentToken","componentCls","mergedToken","iconCls","antCls","styleInterpolation","overrideComponentToken","resetStyle"],"mappings":"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","sourcesContent":["import { useStyleRegister } from '@ant-design/cssinjs';\nimport { useContext } from 'react';\nimport { ConfigContext } from '../../config-provider/context';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport { mergeToken, statisticToken, useToken } from '../internal';\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken, options) {\n  return prefixCls => {\n    const [theme, token, hashId] = useToken();\n    const {\n      getPrefixCls,\n      iconPrefixCls,\n      csp\n    } = useContext(ConfigContext);\n    const rootPrefixCls = getPrefixCls();\n    // Shared config\n    const sharedConfig = {\n      theme,\n      token,\n      hashId,\n      nonce: () => csp === null || csp === void 0 ? void 0 : csp.nonce\n    };\n    // Generate style for all a tags in antd component.\n    useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: ['Shared', rootPrefixCls]\n    }), () => [{\n      // Link\n      '&': genLinkStyle(token)\n    }]);\n    return [useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: [component, prefixCls, iconPrefixCls]\n    }), () => {\n      const {\n        token: proxyToken,\n        flush\n      } = statisticToken(token);\n      const defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(proxyToken) : getDefaultToken;\n      const mergedComponentToken = Object.assign(Object.assign({}, defaultComponentToken), token[component]);\n      const componentCls = `.${prefixCls}`;\n      const mergedToken = mergeToken(proxyToken, {\n        componentCls,\n        prefixCls,\n        iconCls: `.${iconPrefixCls}`,\n        antCls: `.${rootPrefixCls}`\n      }, mergedComponentToken);\n      const styleInterpolation = styleFn(mergedToken, {\n        hashId,\n        prefixCls,\n        rootPrefixCls,\n        iconPrefixCls,\n        overrideComponentToken: token[component]\n      });\n      flush(component, mergedComponentToken);\n      return [(options === null || options === void 0 ? void 0 : options.resetStyle) === false ? null : genCommonStyle(token, prefixCls), styleInterpolation];\n    }), hashId];\n  };\n}"]},"metadata":{},"sourceType":"module"}