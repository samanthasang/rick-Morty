{"ast":null,"code":"import { getTransitionName } from '../../_util/motion';\nconst motion = {\n  motionAppear: false,\n  motionEnter: true,\n  motionLeave: true\n};\nexport default function useAnimateConfig(prefixCls) {\n  let animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    inkBar: true,\n    tabPane: false\n  };\n  let mergedAnimated;\n\n  if (animated === false) {\n    mergedAnimated = {\n      inkBar: false,\n      tabPane: false\n    };\n  } else if (animated === true) {\n    mergedAnimated = {\n      inkBar: true,\n      tabPane: true\n    };\n  } else {\n    mergedAnimated = Object.assign({\n      inkBar: true\n    }, typeof animated === 'object' ? animated : {});\n  }\n\n  if (mergedAnimated.tabPane) {\n    mergedAnimated.tabPaneMotion = Object.assign(Object.assign({}, motion), {\n      motionName: getTransitionName(prefixCls, 'switch')\n    });\n  }\n\n  return mergedAnimated;\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/tabs/hooks/useAnimateConfig.js"],"names":["getTransitionName","motion","motionAppear","motionEnter","motionLeave","useAnimateConfig","prefixCls","animated","arguments","length","undefined","inkBar","tabPane","mergedAnimated","Object","assign","tabPaneMotion","motionName"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,oBAAlC;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,YAAY,EAAE,KADD;AAEbC,EAAAA,WAAW,EAAE,IAFA;AAGbC,EAAAA,WAAW,EAAE;AAHA,CAAf;AAKA,eAAe,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AAClD,MAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE;AACjFG,IAAAA,MAAM,EAAE,IADyE;AAEjFC,IAAAA,OAAO,EAAE;AAFwE,GAAnF;AAIA,MAAIC,cAAJ;;AACA,MAAIN,QAAQ,KAAK,KAAjB,EAAwB;AACtBM,IAAAA,cAAc,GAAG;AACfF,MAAAA,MAAM,EAAE,KADO;AAEfC,MAAAA,OAAO,EAAE;AAFM,KAAjB;AAID,GALD,MAKO,IAAIL,QAAQ,KAAK,IAAjB,EAAuB;AAC5BM,IAAAA,cAAc,GAAG;AACfF,MAAAA,MAAM,EAAE,IADO;AAEfC,MAAAA,OAAO,EAAE;AAFM,KAAjB;AAID,GALM,MAKA;AACLC,IAAAA,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC7BJ,MAAAA,MAAM,EAAE;AADqB,KAAd,EAEd,OAAOJ,QAAP,KAAoB,QAApB,GAA+BA,QAA/B,GAA0C,EAF5B,CAAjB;AAGD;;AACD,MAAIM,cAAc,CAACD,OAAnB,EAA4B;AAC1BC,IAAAA,cAAc,CAACG,aAAf,GAA+BF,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBd,MAAlB,CAAd,EAAyC;AACtEgB,MAAAA,UAAU,EAAEjB,iBAAiB,CAACM,SAAD,EAAY,QAAZ;AADyC,KAAzC,CAA/B;AAGD;;AACD,SAAOO,cAAP;AACD","sourcesContent":["import { getTransitionName } from '../../_util/motion';\nconst motion = {\n  motionAppear: false,\n  motionEnter: true,\n  motionLeave: true\n};\nexport default function useAnimateConfig(prefixCls) {\n  let animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    inkBar: true,\n    tabPane: false\n  };\n  let mergedAnimated;\n  if (animated === false) {\n    mergedAnimated = {\n      inkBar: false,\n      tabPane: false\n    };\n  } else if (animated === true) {\n    mergedAnimated = {\n      inkBar: true,\n      tabPane: true\n    };\n  } else {\n    mergedAnimated = Object.assign({\n      inkBar: true\n    }, typeof animated === 'object' ? animated : {});\n  }\n  if (mergedAnimated.tabPane) {\n    mergedAnimated.tabPaneMotion = Object.assign(Object.assign({}, motion), {\n      motionName: getTransitionName(prefixCls, 'switch')\n    });\n  }\n  return mergedAnimated;\n}"]},"metadata":{},"sourceType":"module"}