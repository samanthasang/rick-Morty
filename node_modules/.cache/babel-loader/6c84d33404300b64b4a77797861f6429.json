{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Cell from \"../Cell\";\nimport TableContext from \"../context/TableContext\";\nimport { useContext } from '@rc-component/context';\nimport { getCellFixedInfo } from \"../utils/fixUtil\";\nimport SummaryContext from \"./SummaryContext\";\nexport default function SummaryCell(_ref) {\n  var className = _ref.className,\n      index = _ref.index,\n      children = _ref.children,\n      _ref$colSpan = _ref.colSpan,\n      colSpan = _ref$colSpan === void 0 ? 1 : _ref$colSpan,\n      rowSpan = _ref.rowSpan,\n      align = _ref.align;\n\n  var _useContext = useContext(TableContext, ['prefixCls', 'direction']),\n      prefixCls = _useContext.prefixCls,\n      direction = _useContext.direction;\n\n  var _React$useContext = React.useContext(SummaryContext),\n      scrollColumnIndex = _React$useContext.scrollColumnIndex,\n      stickyOffsets = _React$useContext.stickyOffsets,\n      flattenColumns = _React$useContext.flattenColumns,\n      columns = _React$useContext.columns;\n\n  var lastIndex = index + colSpan - 1;\n  var mergedColSpan = lastIndex + 1 === scrollColumnIndex ? colSpan + 1 : colSpan;\n  var fixedInfo = getCellFixedInfo(index, index + mergedColSpan - 1, flattenColumns, stickyOffsets, direction, columns === null || columns === void 0 ? void 0 : columns[index]);\n  return /*#__PURE__*/React.createElement(Cell, _extends({\n    className: className,\n    index: index,\n    component: \"td\",\n    prefixCls: prefixCls,\n    record: null,\n    dataIndex: null,\n    align: align,\n    colSpan: mergedColSpan,\n    rowSpan: rowSpan,\n    render: function render() {\n      return children;\n    }\n  }, fixedInfo));\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-table/es/Footer/Cell.js"],"names":["_extends","React","Cell","TableContext","useContext","getCellFixedInfo","SummaryContext","SummaryCell","_ref","className","index","children","_ref$colSpan","colSpan","rowSpan","align","_useContext","prefixCls","direction","_React$useContext","scrollColumnIndex","stickyOffsets","flattenColumns","columns","lastIndex","mergedColSpan","fixedInfo","createElement","component","record","dataIndex","render"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,eAAe,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACxC,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACEC,KAAK,GAAGF,IAAI,CAACE,KADf;AAAA,MAEEC,QAAQ,GAAGH,IAAI,CAACG,QAFlB;AAAA,MAGEC,YAAY,GAAGJ,IAAI,CAACK,OAHtB;AAAA,MAIEA,OAAO,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0B,CAA1B,GAA8BA,YAJ1C;AAAA,MAKEE,OAAO,GAAGN,IAAI,CAACM,OALjB;AAAA,MAMEC,KAAK,GAAGP,IAAI,CAACO,KANf;;AAOA,MAAIC,WAAW,GAAGZ,UAAU,CAACD,YAAD,EAAe,CAAC,WAAD,EAAc,WAAd,CAAf,CAA5B;AAAA,MACEc,SAAS,GAAGD,WAAW,CAACC,SAD1B;AAAA,MAEEC,SAAS,GAAGF,WAAW,CAACE,SAF1B;;AAGA,MAAIC,iBAAiB,GAAGlB,KAAK,CAACG,UAAN,CAAiBE,cAAjB,CAAxB;AAAA,MACEc,iBAAiB,GAAGD,iBAAiB,CAACC,iBADxC;AAAA,MAEEC,aAAa,GAAGF,iBAAiB,CAACE,aAFpC;AAAA,MAGEC,cAAc,GAAGH,iBAAiB,CAACG,cAHrC;AAAA,MAIEC,OAAO,GAAGJ,iBAAiB,CAACI,OAJ9B;;AAKA,MAAIC,SAAS,GAAGd,KAAK,GAAGG,OAAR,GAAkB,CAAlC;AACA,MAAIY,aAAa,GAAGD,SAAS,GAAG,CAAZ,KAAkBJ,iBAAlB,GAAsCP,OAAO,GAAG,CAAhD,GAAoDA,OAAxE;AACA,MAAIa,SAAS,GAAGrB,gBAAgB,CAACK,KAAD,EAAQA,KAAK,GAAGe,aAAR,GAAwB,CAAhC,EAAmCH,cAAnC,EAAmDD,aAAnD,EAAkEH,SAAlE,EAA6EK,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACb,KAAD,CAAtI,CAAhC;AACA,SAAO,aAAaT,KAAK,CAAC0B,aAAN,CAAoBzB,IAApB,EAA0BF,QAAQ,CAAC;AACrDS,IAAAA,SAAS,EAAEA,SAD0C;AAErDC,IAAAA,KAAK,EAAEA,KAF8C;AAGrDkB,IAAAA,SAAS,EAAE,IAH0C;AAIrDX,IAAAA,SAAS,EAAEA,SAJ0C;AAKrDY,IAAAA,MAAM,EAAE,IAL6C;AAMrDC,IAAAA,SAAS,EAAE,IAN0C;AAOrDf,IAAAA,KAAK,EAAEA,KAP8C;AAQrDF,IAAAA,OAAO,EAAEY,aAR4C;AASrDX,IAAAA,OAAO,EAAEA,OAT4C;AAUrDiB,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,aAAOpB,QAAP;AACD;AAZoD,GAAD,EAanDe,SAbmD,CAAlC,CAApB;AAcD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Cell from \"../Cell\";\nimport TableContext from \"../context/TableContext\";\nimport { useContext } from '@rc-component/context';\nimport { getCellFixedInfo } from \"../utils/fixUtil\";\nimport SummaryContext from \"./SummaryContext\";\nexport default function SummaryCell(_ref) {\n  var className = _ref.className,\n    index = _ref.index,\n    children = _ref.children,\n    _ref$colSpan = _ref.colSpan,\n    colSpan = _ref$colSpan === void 0 ? 1 : _ref$colSpan,\n    rowSpan = _ref.rowSpan,\n    align = _ref.align;\n  var _useContext = useContext(TableContext, ['prefixCls', 'direction']),\n    prefixCls = _useContext.prefixCls,\n    direction = _useContext.direction;\n  var _React$useContext = React.useContext(SummaryContext),\n    scrollColumnIndex = _React$useContext.scrollColumnIndex,\n    stickyOffsets = _React$useContext.stickyOffsets,\n    flattenColumns = _React$useContext.flattenColumns,\n    columns = _React$useContext.columns;\n  var lastIndex = index + colSpan - 1;\n  var mergedColSpan = lastIndex + 1 === scrollColumnIndex ? colSpan + 1 : colSpan;\n  var fixedInfo = getCellFixedInfo(index, index + mergedColSpan - 1, flattenColumns, stickyOffsets, direction, columns === null || columns === void 0 ? void 0 : columns[index]);\n  return /*#__PURE__*/React.createElement(Cell, _extends({\n    className: className,\n    index: index,\n    component: \"td\",\n    prefixCls: prefixCls,\n    record: null,\n    dataIndex: null,\n    align: align,\n    colSpan: mergedColSpan,\n    rowSpan: rowSpan,\n    render: function render() {\n      return children;\n    }\n  }, fixedInfo));\n}"]},"metadata":{},"sourceType":"module"}