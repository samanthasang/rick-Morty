{"ast":null,"code":"import warning from \"rc-util/es/warning\";\n\nfunction warningProps(props) {\n  var onPopupVisibleChange = props.onPopupVisibleChange,\n      popupVisible = props.popupVisible,\n      popupClassName = props.popupClassName,\n      popupPlacement = props.popupPlacement;\n  warning(!onPopupVisibleChange, '`onPopupVisibleChange` is deprecated. Please use `onDropdownVisibleChange` instead.');\n  warning(popupVisible === undefined, '`popupVisible` is deprecated. Please use `open` instead.');\n  warning(popupClassName === undefined, '`popupClassName` is deprecated. Please use `dropdownClassName` instead.');\n  warning(popupPlacement === undefined, '`popupPlacement` is deprecated. Please use `placement` instead.');\n} // value in Cascader options should not be null\n\n\nexport function warningNullOptions(options, fieldNames) {\n  if (options) {\n    var recursiveOptions = function recursiveOptions(optionsList) {\n      for (var i = 0; i < optionsList.length; i++) {\n        var option = optionsList[i];\n\n        if (option[fieldNames === null || fieldNames === void 0 ? void 0 : fieldNames.value] === null) {\n          warning(false, '`value` in Cascader options should not be `null`.');\n          return true;\n        }\n\n        if (Array.isArray(option[fieldNames === null || fieldNames === void 0 ? void 0 : fieldNames.children]) && recursiveOptions(option[fieldNames === null || fieldNames === void 0 ? void 0 : fieldNames.children])) {\n          return true;\n        }\n      }\n    };\n\n    recursiveOptions(options);\n  }\n}\nexport default warningProps;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-cascader/es/utils/warningPropsUtil.js"],"names":["warning","warningProps","props","onPopupVisibleChange","popupVisible","popupClassName","popupPlacement","undefined","warningNullOptions","options","fieldNames","recursiveOptions","optionsList","i","length","option","value","Array","isArray","children"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,oBAAoB,GAAGD,KAAK,CAACC,oBAAjC;AAAA,MACEC,YAAY,GAAGF,KAAK,CAACE,YADvB;AAAA,MAEEC,cAAc,GAAGH,KAAK,CAACG,cAFzB;AAAA,MAGEC,cAAc,GAAGJ,KAAK,CAACI,cAHzB;AAIAN,EAAAA,OAAO,CAAC,CAACG,oBAAF,EAAwB,qFAAxB,CAAP;AACAH,EAAAA,OAAO,CAACI,YAAY,KAAKG,SAAlB,EAA6B,0DAA7B,CAAP;AACAP,EAAAA,OAAO,CAACK,cAAc,KAAKE,SAApB,EAA+B,yEAA/B,CAAP;AACAP,EAAAA,OAAO,CAACM,cAAc,KAAKC,SAApB,EAA+B,iEAA/B,CAAP;AACD,C,CAED;;;AACA,OAAO,SAASC,kBAAT,CAA4BC,OAA5B,EAAqCC,UAArC,EAAiD;AACtD,MAAID,OAAJ,EAAa;AACX,QAAIE,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,WAA1B,EAAuC;AAC5D,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACE,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,YAAIE,MAAM,GAAGH,WAAW,CAACC,CAAD,CAAxB;;AACA,YAAIE,MAAM,CAACL,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACM,KAApE,CAAN,KAAqF,IAAzF,EAA+F;AAC7FhB,UAAAA,OAAO,CAAC,KAAD,EAAQ,mDAAR,CAAP;AACA,iBAAO,IAAP;AACD;;AACD,YAAIiB,KAAK,CAACC,OAAN,CAAcH,MAAM,CAACL,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACS,QAApE,CAApB,KAAsGR,gBAAgB,CAACI,MAAM,CAACL,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACS,QAApE,CAAP,CAA1H,EAAiN;AAC/M,iBAAO,IAAP;AACD;AACF;AACF,KAXD;;AAYAR,IAAAA,gBAAgB,CAACF,OAAD,CAAhB;AACD;AACF;AACD,eAAeR,YAAf","sourcesContent":["import warning from \"rc-util/es/warning\";\nfunction warningProps(props) {\n  var onPopupVisibleChange = props.onPopupVisibleChange,\n    popupVisible = props.popupVisible,\n    popupClassName = props.popupClassName,\n    popupPlacement = props.popupPlacement;\n  warning(!onPopupVisibleChange, '`onPopupVisibleChange` is deprecated. Please use `onDropdownVisibleChange` instead.');\n  warning(popupVisible === undefined, '`popupVisible` is deprecated. Please use `open` instead.');\n  warning(popupClassName === undefined, '`popupClassName` is deprecated. Please use `dropdownClassName` instead.');\n  warning(popupPlacement === undefined, '`popupPlacement` is deprecated. Please use `placement` instead.');\n}\n\n// value in Cascader options should not be null\nexport function warningNullOptions(options, fieldNames) {\n  if (options) {\n    var recursiveOptions = function recursiveOptions(optionsList) {\n      for (var i = 0; i < optionsList.length; i++) {\n        var option = optionsList[i];\n        if (option[fieldNames === null || fieldNames === void 0 ? void 0 : fieldNames.value] === null) {\n          warning(false, '`value` in Cascader options should not be `null`.');\n          return true;\n        }\n        if (Array.isArray(option[fieldNames === null || fieldNames === void 0 ? void 0 : fieldNames.children]) && recursiveOptions(option[fieldNames === null || fieldNames === void 0 ? void 0 : fieldNames.children])) {\n          return true;\n        }\n      }\n    };\n    recursiveOptions(options);\n  }\n}\nexport default warningProps;"]},"metadata":{},"sourceType":"module"}