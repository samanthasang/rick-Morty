{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport FileOutlined from \"@ant-design/icons/es/icons/FileOutlined\";\nimport FolderOpenOutlined from \"@ant-design/icons/es/icons/FolderOpenOutlined\";\nimport FolderOutlined from \"@ant-design/icons/es/icons/FolderOutlined\";\nimport classNames from 'classnames';\nimport { conductExpandParent } from \"rc-tree/es/util\";\nimport { convertDataToEntities, convertTreeToData } from \"rc-tree/es/utils/treeUtil\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Tree from './Tree';\nimport { calcRangeKeys, convertDirectoryKeysToNodes } from './utils/dictUtil';\n\nfunction getIcon(props) {\n  var isLeaf = props.isLeaf,\n      expanded = props.expanded;\n\n  if (isLeaf) {\n    return /*#__PURE__*/React.createElement(FileOutlined, null);\n  }\n\n  return expanded ? /*#__PURE__*/React.createElement(FolderOpenOutlined, null) : /*#__PURE__*/React.createElement(FolderOutlined, null);\n}\n\nfunction getTreeData(_ref) {\n  var treeData = _ref.treeData,\n      children = _ref.children;\n  return treeData || convertTreeToData(children);\n}\n\nvar DirectoryTree = function DirectoryTree(_a, ref) {\n  var defaultExpandAll = _a.defaultExpandAll,\n      defaultExpandParent = _a.defaultExpandParent,\n      defaultExpandedKeys = _a.defaultExpandedKeys,\n      props = __rest(_a, [\"defaultExpandAll\", \"defaultExpandParent\", \"defaultExpandedKeys\"]); // Shift click usage\n\n\n  var lastSelectedKey = React.useRef();\n  var cachedSelectedKeys = React.useRef();\n\n  var getInitExpandedKeys = function getInitExpandedKeys() {\n    var _convertDataToEntitie = convertDataToEntities(getTreeData(props)),\n        keyEntities = _convertDataToEntitie.keyEntities;\n\n    var initExpandedKeys; // Expanded keys\n\n    if (defaultExpandAll) {\n      initExpandedKeys = Object.keys(keyEntities);\n    } else if (defaultExpandParent) {\n      initExpandedKeys = conductExpandParent(props.expandedKeys || defaultExpandedKeys || [], keyEntities);\n    } else {\n      initExpandedKeys = props.expandedKeys || defaultExpandedKeys;\n    }\n\n    return initExpandedKeys;\n  };\n\n  var _React$useState = React.useState(props.selectedKeys || props.defaultSelectedKeys || []),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedKeys = _React$useState2[0],\n      setSelectedKeys = _React$useState2[1];\n\n  var _React$useState3 = React.useState(function () {\n    return getInitExpandedKeys();\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      expandedKeys = _React$useState4[0],\n      setExpandedKeys = _React$useState4[1];\n\n  React.useEffect(function () {\n    if ('selectedKeys' in props) {\n      setSelectedKeys(props.selectedKeys);\n    }\n  }, [props.selectedKeys]);\n  React.useEffect(function () {\n    if ('expandedKeys' in props) {\n      setExpandedKeys(props.expandedKeys);\n    }\n  }, [props.expandedKeys]);\n\n  var onExpand = function onExpand(keys, info) {\n    var _a;\n\n    if (!('expandedKeys' in props)) {\n      setExpandedKeys(keys);\n    } // Call origin function\n\n\n    return (_a = props.onExpand) === null || _a === void 0 ? void 0 : _a.call(props, keys, info);\n  };\n\n  var onSelect = function onSelect(keys, event) {\n    var _a;\n\n    var multiple = props.multiple;\n    var node = event.node,\n        nativeEvent = event.nativeEvent;\n    var _node$key = node.key,\n        key = _node$key === void 0 ? '' : _node$key;\n    var treeData = getTreeData(props); // const newState: DirectoryTreeState = {};\n    // We need wrap this event since some value is not same\n\n    var newEvent = Object.assign(Object.assign({}, event), {\n      selected: true\n    }); // Windows / Mac single pick\n\n    var ctrlPick = (nativeEvent === null || nativeEvent === void 0 ? void 0 : nativeEvent.ctrlKey) || (nativeEvent === null || nativeEvent === void 0 ? void 0 : nativeEvent.metaKey);\n    var shiftPick = nativeEvent === null || nativeEvent === void 0 ? void 0 : nativeEvent.shiftKey; // Generate new selected keys\n\n    var newSelectedKeys;\n\n    if (multiple && ctrlPick) {\n      // Control click\n      newSelectedKeys = keys;\n      lastSelectedKey.current = key;\n      cachedSelectedKeys.current = newSelectedKeys;\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    } else if (multiple && shiftPick) {\n      // Shift click\n      newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(cachedSelectedKeys.current || []), _toConsumableArray(calcRangeKeys({\n        treeData: treeData,\n        expandedKeys: expandedKeys,\n        startKey: key,\n        endKey: lastSelectedKey.current\n      })))));\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    } else {\n      // Single click\n      newSelectedKeys = [key];\n      lastSelectedKey.current = key;\n      cachedSelectedKeys.current = newSelectedKeys;\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    }\n\n    (_a = props.onSelect) === null || _a === void 0 ? void 0 : _a.call(props, newSelectedKeys, newEvent);\n\n    if (!('selectedKeys' in props)) {\n      setSelectedKeys(newSelectedKeys);\n    }\n  };\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      _props$showIcon = props.showIcon,\n      showIcon = _props$showIcon === void 0 ? true : _props$showIcon,\n      _props$expandAction = props.expandAction,\n      expandAction = _props$expandAction === void 0 ? 'click' : _props$expandAction,\n      otherProps = __rest(props, [\"prefixCls\", \"className\", \"showIcon\", \"expandAction\"]);\n\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n  var connectClassName = classNames(\"\".concat(prefixCls, \"-directory\"), _defineProperty({}, \"\".concat(prefixCls, \"-directory-rtl\"), direction === 'rtl'), className);\n  return /*#__PURE__*/React.createElement(Tree, Object.assign({\n    icon: getIcon,\n    ref: ref,\n    blockNode: true\n  }, otherProps, {\n    showIcon: showIcon,\n    expandAction: expandAction,\n    prefixCls: prefixCls,\n    className: connectClassName,\n    expandedKeys: expandedKeys,\n    selectedKeys: selectedKeys,\n    onSelect: onSelect,\n    onExpand: onExpand\n  }));\n};\n\nvar ForwardDirectoryTree = /*#__PURE__*/React.forwardRef(DirectoryTree);\n\nif (process.env.NODE_ENV !== 'production') {\n  ForwardDirectoryTree.displayName = 'DirectoryTree';\n}\n\nexport default ForwardDirectoryTree;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/tree/DirectoryTree.js"],"names":["_toConsumableArray","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","FileOutlined","FolderOpenOutlined","FolderOutlined","classNames","conductExpandParent","convertDataToEntities","convertTreeToData","React","ConfigContext","Tree","calcRangeKeys","convertDirectoryKeysToNodes","getIcon","props","isLeaf","expanded","createElement","getTreeData","_ref","treeData","children","DirectoryTree","_a","ref","defaultExpandAll","defaultExpandParent","defaultExpandedKeys","lastSelectedKey","useRef","cachedSelectedKeys","getInitExpandedKeys","keyEntities","initExpandedKeys","keys","expandedKeys","useState","selectedKeys","defaultSelectedKeys","setSelectedKeys","setExpandedKeys","useEffect","onExpand","info","onSelect","event","multiple","node","nativeEvent","key","newEvent","assign","selected","ctrlPick","ctrlKey","metaKey","shiftPick","shiftKey","newSelectedKeys","current","selectedNodes","Array","from","Set","concat","startKey","endKey","useContext","getPrefixCls","direction","customizePrefixCls","prefixCls","className","showIcon","expandAction","otherProps","connectClassName","icon","blockNode","ForwardDirectoryTree","forwardRef","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport FileOutlined from \"@ant-design/icons/es/icons/FileOutlined\";\nimport FolderOpenOutlined from \"@ant-design/icons/es/icons/FolderOpenOutlined\";\nimport FolderOutlined from \"@ant-design/icons/es/icons/FolderOutlined\";\nimport classNames from 'classnames';\nimport { conductExpandParent } from \"rc-tree/es/util\";\nimport { convertDataToEntities, convertTreeToData } from \"rc-tree/es/utils/treeUtil\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Tree from './Tree';\nimport { calcRangeKeys, convertDirectoryKeysToNodes } from './utils/dictUtil';\nfunction getIcon(props) {\n  const {\n    isLeaf,\n    expanded\n  } = props;\n  if (isLeaf) {\n    return /*#__PURE__*/React.createElement(FileOutlined, null);\n  }\n  return expanded ? /*#__PURE__*/React.createElement(FolderOpenOutlined, null) : /*#__PURE__*/React.createElement(FolderOutlined, null);\n}\nfunction getTreeData(_ref) {\n  let {\n    treeData,\n    children\n  } = _ref;\n  return treeData || convertTreeToData(children);\n}\nconst DirectoryTree = (_a, ref) => {\n  var {\n      defaultExpandAll,\n      defaultExpandParent,\n      defaultExpandedKeys\n    } = _a,\n    props = __rest(_a, [\"defaultExpandAll\", \"defaultExpandParent\", \"defaultExpandedKeys\"]);\n  // Shift click usage\n  const lastSelectedKey = React.useRef();\n  const cachedSelectedKeys = React.useRef();\n  const getInitExpandedKeys = () => {\n    const {\n      keyEntities\n    } = convertDataToEntities(getTreeData(props));\n    let initExpandedKeys;\n    // Expanded keys\n    if (defaultExpandAll) {\n      initExpandedKeys = Object.keys(keyEntities);\n    } else if (defaultExpandParent) {\n      initExpandedKeys = conductExpandParent(props.expandedKeys || defaultExpandedKeys || [], keyEntities);\n    } else {\n      initExpandedKeys = props.expandedKeys || defaultExpandedKeys;\n    }\n    return initExpandedKeys;\n  };\n  const [selectedKeys, setSelectedKeys] = React.useState(props.selectedKeys || props.defaultSelectedKeys || []);\n  const [expandedKeys, setExpandedKeys] = React.useState(() => getInitExpandedKeys());\n  React.useEffect(() => {\n    if ('selectedKeys' in props) {\n      setSelectedKeys(props.selectedKeys);\n    }\n  }, [props.selectedKeys]);\n  React.useEffect(() => {\n    if ('expandedKeys' in props) {\n      setExpandedKeys(props.expandedKeys);\n    }\n  }, [props.expandedKeys]);\n  const onExpand = (keys, info) => {\n    var _a;\n    if (!('expandedKeys' in props)) {\n      setExpandedKeys(keys);\n    }\n    // Call origin function\n    return (_a = props.onExpand) === null || _a === void 0 ? void 0 : _a.call(props, keys, info);\n  };\n  const onSelect = (keys, event) => {\n    var _a;\n    const {\n      multiple\n    } = props;\n    const {\n      node,\n      nativeEvent\n    } = event;\n    const {\n      key = ''\n    } = node;\n    const treeData = getTreeData(props);\n    // const newState: DirectoryTreeState = {};\n    // We need wrap this event since some value is not same\n    const newEvent = Object.assign(Object.assign({}, event), {\n      selected: true\n    });\n    // Windows / Mac single pick\n    const ctrlPick = (nativeEvent === null || nativeEvent === void 0 ? void 0 : nativeEvent.ctrlKey) || (nativeEvent === null || nativeEvent === void 0 ? void 0 : nativeEvent.metaKey);\n    const shiftPick = nativeEvent === null || nativeEvent === void 0 ? void 0 : nativeEvent.shiftKey;\n    // Generate new selected keys\n    let newSelectedKeys;\n    if (multiple && ctrlPick) {\n      // Control click\n      newSelectedKeys = keys;\n      lastSelectedKey.current = key;\n      cachedSelectedKeys.current = newSelectedKeys;\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    } else if (multiple && shiftPick) {\n      // Shift click\n      newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(cachedSelectedKeys.current || []), _toConsumableArray(calcRangeKeys({\n        treeData,\n        expandedKeys,\n        startKey: key,\n        endKey: lastSelectedKey.current\n      })))));\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    } else {\n      // Single click\n      newSelectedKeys = [key];\n      lastSelectedKey.current = key;\n      cachedSelectedKeys.current = newSelectedKeys;\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    }\n    (_a = props.onSelect) === null || _a === void 0 ? void 0 : _a.call(props, newSelectedKeys, newEvent);\n    if (!('selectedKeys' in props)) {\n      setSelectedKeys(newSelectedKeys);\n    }\n  };\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      showIcon = true,\n      expandAction = 'click'\n    } = props,\n    otherProps = __rest(props, [\"prefixCls\", \"className\", \"showIcon\", \"expandAction\"]);\n  const prefixCls = getPrefixCls('tree', customizePrefixCls);\n  const connectClassName = classNames(`${prefixCls}-directory`, {\n    [`${prefixCls}-directory-rtl`]: direction === 'rtl'\n  }, className);\n  return /*#__PURE__*/React.createElement(Tree, Object.assign({\n    icon: getIcon,\n    ref: ref,\n    blockNode: true\n  }, otherProps, {\n    showIcon: showIcon,\n    expandAction: expandAction,\n    prefixCls: prefixCls,\n    className: connectClassName,\n    expandedKeys: expandedKeys,\n    selectedKeys: selectedKeys,\n    onSelect: onSelect,\n    onExpand: onExpand\n  }));\n};\nconst ForwardDirectoryTree = /*#__PURE__*/React.forwardRef(DirectoryTree);\nif (process.env.NODE_ENV !== 'production') {\n  ForwardDirectoryTree.displayName = 'DirectoryTree';\n}\nexport default ForwardDirectoryTree;"]},"metadata":{},"sourceType":"module"}