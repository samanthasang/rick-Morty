{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport Pagination from '../pagination';\nimport ListItem from './ListItem';\nexport const OmitProps = ['handleFilter', 'handleClear', 'checkedKeys'];\n\nconst parsePagination = pagination => {\n  if (!pagination) {\n    return null;\n  }\n\n  const defaultPagination = {\n    pageSize: 10,\n    simple: true,\n    showSizeChanger: false,\n    showLessItems: false\n  };\n\n  if (typeof pagination === 'object') {\n    return Object.assign(Object.assign({}, defaultPagination), pagination);\n  }\n\n  return defaultPagination;\n};\n\nconst TransferListBody = (props, ref) => {\n  const {\n    prefixCls,\n    filteredRenderItems,\n    selectedKeys,\n    disabled: globalDisabled,\n    showRemove,\n    pagination,\n    onScroll,\n    onItemSelect,\n    onItemRemove\n  } = props;\n  const [current, setCurrent] = React.useState(1);\n  React.useEffect(() => {\n    const mergedPagination = parsePagination(pagination);\n\n    if (mergedPagination) {\n      const maxPageCount = Math.ceil(filteredRenderItems.length / mergedPagination.pageSize);\n      setCurrent(Math.min(current, maxPageCount));\n    }\n  }, [filteredRenderItems, pagination]);\n\n  const onClick = item => {\n    onItemSelect === null || onItemSelect === void 0 ? void 0 : onItemSelect(item.key, !selectedKeys.includes(item.key));\n  };\n\n  const onRemove = item => {\n    onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove([item.key]);\n  };\n\n  const onPageChange = cur => {\n    setCurrent(cur);\n  };\n\n  const memoizedItems = React.useMemo(() => {\n    const mergedPagination = parsePagination(pagination);\n    const displayItems = mergedPagination ? filteredRenderItems.slice((current - 1) * mergedPagination.pageSize, current * mergedPagination.pageSize) : filteredRenderItems;\n    return displayItems;\n  }, [current, filteredRenderItems, pagination]);\n  React.useImperativeHandle(ref, () => ({\n    items: memoizedItems\n  }));\n  const mergedPagination = parsePagination(pagination);\n  const paginationNode = mergedPagination ? /*#__PURE__*/React.createElement(Pagination, {\n    size: \"small\",\n    disabled: globalDisabled,\n    simple: mergedPagination.simple,\n    pageSize: mergedPagination.pageSize,\n    showLessItems: mergedPagination.showLessItems,\n    showSizeChanger: mergedPagination.showSizeChanger,\n    className: `${prefixCls}-pagination`,\n    total: filteredRenderItems.length,\n    current: current,\n    onChange: onPageChange\n  }) : null;\n  const cls = classNames(`${prefixCls}-content`, {\n    [`${prefixCls}-content-show-remove`]: showRemove\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    className: cls,\n    onScroll: onScroll\n  }, (memoizedItems || []).map(_ref => {\n    let {\n      renderedEl,\n      renderedText,\n      item\n    } = _ref;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: item.key,\n      item: item,\n      renderedText: renderedText,\n      renderedEl: renderedEl,\n      prefixCls: prefixCls,\n      showRemove: showRemove,\n      onClick: onClick,\n      onRemove: onRemove,\n      checked: selectedKeys.includes(item.key),\n      disabled: globalDisabled || item.disabled\n    });\n  })), paginationNode);\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  TransferListBody.displayName = 'TransferListBody';\n}\n\nexport default /*#__PURE__*/React.forwardRef(TransferListBody);","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/transfer/ListBody.js"],"names":["classNames","React","Pagination","ListItem","OmitProps","parsePagination","pagination","defaultPagination","pageSize","simple","showSizeChanger","showLessItems","Object","assign","TransferListBody","props","ref","prefixCls","filteredRenderItems","selectedKeys","disabled","globalDisabled","showRemove","onScroll","onItemSelect","onItemRemove","current","setCurrent","useState","useEffect","mergedPagination","maxPageCount","Math","ceil","length","min","onClick","item","key","includes","onRemove","onPageChange","cur","memoizedItems","useMemo","displayItems","slice","useImperativeHandle","items","paginationNode","createElement","size","className","total","onChange","cls","Fragment","map","_ref","renderedEl","renderedText","checked","process","env","NODE_ENV","displayName","forwardRef"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport Pagination from '../pagination';\nimport ListItem from './ListItem';\nexport const OmitProps = ['handleFilter', 'handleClear', 'checkedKeys'];\nconst parsePagination = pagination => {\n  if (!pagination) {\n    return null;\n  }\n  const defaultPagination = {\n    pageSize: 10,\n    simple: true,\n    showSizeChanger: false,\n    showLessItems: false\n  };\n  if (typeof pagination === 'object') {\n    return Object.assign(Object.assign({}, defaultPagination), pagination);\n  }\n  return defaultPagination;\n};\nconst TransferListBody = (props, ref) => {\n  const {\n    prefixCls,\n    filteredRenderItems,\n    selectedKeys,\n    disabled: globalDisabled,\n    showRemove,\n    pagination,\n    onScroll,\n    onItemSelect,\n    onItemRemove\n  } = props;\n  const [current, setCurrent] = React.useState(1);\n  React.useEffect(() => {\n    const mergedPagination = parsePagination(pagination);\n    if (mergedPagination) {\n      const maxPageCount = Math.ceil(filteredRenderItems.length / mergedPagination.pageSize);\n      setCurrent(Math.min(current, maxPageCount));\n    }\n  }, [filteredRenderItems, pagination]);\n  const onClick = item => {\n    onItemSelect === null || onItemSelect === void 0 ? void 0 : onItemSelect(item.key, !selectedKeys.includes(item.key));\n  };\n  const onRemove = item => {\n    onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove([item.key]);\n  };\n  const onPageChange = cur => {\n    setCurrent(cur);\n  };\n  const memoizedItems = React.useMemo(() => {\n    const mergedPagination = parsePagination(pagination);\n    const displayItems = mergedPagination ? filteredRenderItems.slice((current - 1) * mergedPagination.pageSize, current * mergedPagination.pageSize) : filteredRenderItems;\n    return displayItems;\n  }, [current, filteredRenderItems, pagination]);\n  React.useImperativeHandle(ref, () => ({\n    items: memoizedItems\n  }));\n  const mergedPagination = parsePagination(pagination);\n  const paginationNode = mergedPagination ? /*#__PURE__*/React.createElement(Pagination, {\n    size: \"small\",\n    disabled: globalDisabled,\n    simple: mergedPagination.simple,\n    pageSize: mergedPagination.pageSize,\n    showLessItems: mergedPagination.showLessItems,\n    showSizeChanger: mergedPagination.showSizeChanger,\n    className: `${prefixCls}-pagination`,\n    total: filteredRenderItems.length,\n    current: current,\n    onChange: onPageChange\n  }) : null;\n  const cls = classNames(`${prefixCls}-content`, {\n    [`${prefixCls}-content-show-remove`]: showRemove\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    className: cls,\n    onScroll: onScroll\n  }, (memoizedItems || []).map(_ref => {\n    let {\n      renderedEl,\n      renderedText,\n      item\n    } = _ref;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: item.key,\n      item: item,\n      renderedText: renderedText,\n      renderedEl: renderedEl,\n      prefixCls: prefixCls,\n      showRemove: showRemove,\n      onClick: onClick,\n      onRemove: onRemove,\n      checked: selectedKeys.includes(item.key),\n      disabled: globalDisabled || item.disabled\n    });\n  })), paginationNode);\n};\nif (process.env.NODE_ENV !== 'production') {\n  TransferListBody.displayName = 'TransferListBody';\n}\nexport default /*#__PURE__*/React.forwardRef(TransferListBody);"]},"metadata":{},"sourceType":"module"}