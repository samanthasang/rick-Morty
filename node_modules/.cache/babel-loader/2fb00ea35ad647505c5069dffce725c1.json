{"ast":null,"code":"export function getCellFixedInfo(colStart, colEnd, columns, stickyOffsets, direction, curColumns) {\n  var startColumn = columns[colStart] || {};\n  var endColumn = columns[colEnd] || {};\n  var fixLeft;\n  var fixRight;\n\n  if (startColumn.fixed === 'left') {\n    fixLeft = stickyOffsets.left[direction === 'rtl' ? colEnd : colStart];\n  } else if (endColumn.fixed === 'right') {\n    fixRight = stickyOffsets.right[direction === 'rtl' ? colStart : colEnd];\n  }\n\n  var lastFixLeft = false;\n  var firstFixRight = false;\n  var lastFixRight = false;\n  var firstFixLeft = false;\n  var nextColumn = columns[colEnd + 1];\n  var prevColumn = columns[colStart - 1]; // no children only\n\n  var canLastFix = !(curColumns !== null && curColumns !== void 0 && curColumns.children);\n\n  if (direction === 'rtl') {\n    if (fixLeft !== undefined) {\n      var prevFixLeft = prevColumn && prevColumn.fixed === 'left';\n      firstFixLeft = !prevFixLeft && canLastFix;\n    } else if (fixRight !== undefined) {\n      var nextFixRight = nextColumn && nextColumn.fixed === 'right';\n      lastFixRight = !nextFixRight && canLastFix;\n    }\n  } else if (fixLeft !== undefined) {\n    var nextFixLeft = nextColumn && nextColumn.fixed === 'left';\n    lastFixLeft = !nextFixLeft && canLastFix;\n  } else if (fixRight !== undefined) {\n    var prevFixRight = prevColumn && prevColumn.fixed === 'right';\n    firstFixRight = !prevFixRight && canLastFix;\n  }\n\n  return {\n    fixLeft: fixLeft,\n    fixRight: fixRight,\n    lastFixLeft: lastFixLeft,\n    firstFixRight: firstFixRight,\n    lastFixRight: lastFixRight,\n    firstFixLeft: firstFixLeft,\n    isSticky: stickyOffsets.isSticky\n  };\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-table/es/utils/fixUtil.js"],"names":["getCellFixedInfo","colStart","colEnd","columns","stickyOffsets","direction","curColumns","startColumn","endColumn","fixLeft","fixRight","fixed","left","right","lastFixLeft","firstFixRight","lastFixRight","firstFixLeft","nextColumn","prevColumn","canLastFix","children","undefined","prevFixLeft","nextFixRight","nextFixLeft","prevFixRight","isSticky"],"mappings":"AAAA,OAAO,SAASA,gBAAT,CAA0BC,QAA1B,EAAoCC,MAApC,EAA4CC,OAA5C,EAAqDC,aAArD,EAAoEC,SAApE,EAA+EC,UAA/E,EAA2F;AAChG,MAAIC,WAAW,GAAGJ,OAAO,CAACF,QAAD,CAAP,IAAqB,EAAvC;AACA,MAAIO,SAAS,GAAGL,OAAO,CAACD,MAAD,CAAP,IAAmB,EAAnC;AACA,MAAIO,OAAJ;AACA,MAAIC,QAAJ;;AACA,MAAIH,WAAW,CAACI,KAAZ,KAAsB,MAA1B,EAAkC;AAChCF,IAAAA,OAAO,GAAGL,aAAa,CAACQ,IAAd,CAAmBP,SAAS,KAAK,KAAd,GAAsBH,MAAtB,GAA+BD,QAAlD,CAAV;AACD,GAFD,MAEO,IAAIO,SAAS,CAACG,KAAV,KAAoB,OAAxB,EAAiC;AACtCD,IAAAA,QAAQ,GAAGN,aAAa,CAACS,KAAd,CAAoBR,SAAS,KAAK,KAAd,GAAsBJ,QAAtB,GAAiCC,MAArD,CAAX;AACD;;AACD,MAAIY,WAAW,GAAG,KAAlB;AACA,MAAIC,aAAa,GAAG,KAApB;AACA,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,UAAU,GAAGf,OAAO,CAACD,MAAM,GAAG,CAAV,CAAxB;AACA,MAAIiB,UAAU,GAAGhB,OAAO,CAACF,QAAQ,GAAG,CAAZ,CAAxB,CAfgG,CAiBhG;;AACA,MAAImB,UAAU,GAAG,EAAEd,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,IAAgDA,UAAU,CAACe,QAA7D,CAAjB;;AACA,MAAIhB,SAAS,KAAK,KAAlB,EAAyB;AACvB,QAAII,OAAO,KAAKa,SAAhB,EAA2B;AACzB,UAAIC,WAAW,GAAGJ,UAAU,IAAIA,UAAU,CAACR,KAAX,KAAqB,MAArD;AACAM,MAAAA,YAAY,GAAG,CAACM,WAAD,IAAgBH,UAA/B;AACD,KAHD,MAGO,IAAIV,QAAQ,KAAKY,SAAjB,EAA4B;AACjC,UAAIE,YAAY,GAAGN,UAAU,IAAIA,UAAU,CAACP,KAAX,KAAqB,OAAtD;AACAK,MAAAA,YAAY,GAAG,CAACQ,YAAD,IAAiBJ,UAAhC;AACD;AACF,GARD,MAQO,IAAIX,OAAO,KAAKa,SAAhB,EAA2B;AAChC,QAAIG,WAAW,GAAGP,UAAU,IAAIA,UAAU,CAACP,KAAX,KAAqB,MAArD;AACAG,IAAAA,WAAW,GAAG,CAACW,WAAD,IAAgBL,UAA9B;AACD,GAHM,MAGA,IAAIV,QAAQ,KAAKY,SAAjB,EAA4B;AACjC,QAAII,YAAY,GAAGP,UAAU,IAAIA,UAAU,CAACR,KAAX,KAAqB,OAAtD;AACAI,IAAAA,aAAa,GAAG,CAACW,YAAD,IAAiBN,UAAjC;AACD;;AACD,SAAO;AACLX,IAAAA,OAAO,EAAEA,OADJ;AAELC,IAAAA,QAAQ,EAAEA,QAFL;AAGLI,IAAAA,WAAW,EAAEA,WAHR;AAILC,IAAAA,aAAa,EAAEA,aAJV;AAKLC,IAAAA,YAAY,EAAEA,YALT;AAMLC,IAAAA,YAAY,EAAEA,YANT;AAOLU,IAAAA,QAAQ,EAAEvB,aAAa,CAACuB;AAPnB,GAAP;AASD","sourcesContent":["export function getCellFixedInfo(colStart, colEnd, columns, stickyOffsets, direction, curColumns) {\n  var startColumn = columns[colStart] || {};\n  var endColumn = columns[colEnd] || {};\n  var fixLeft;\n  var fixRight;\n  if (startColumn.fixed === 'left') {\n    fixLeft = stickyOffsets.left[direction === 'rtl' ? colEnd : colStart];\n  } else if (endColumn.fixed === 'right') {\n    fixRight = stickyOffsets.right[direction === 'rtl' ? colStart : colEnd];\n  }\n  var lastFixLeft = false;\n  var firstFixRight = false;\n  var lastFixRight = false;\n  var firstFixLeft = false;\n  var nextColumn = columns[colEnd + 1];\n  var prevColumn = columns[colStart - 1];\n\n  // no children only\n  var canLastFix = !(curColumns !== null && curColumns !== void 0 && curColumns.children);\n  if (direction === 'rtl') {\n    if (fixLeft !== undefined) {\n      var prevFixLeft = prevColumn && prevColumn.fixed === 'left';\n      firstFixLeft = !prevFixLeft && canLastFix;\n    } else if (fixRight !== undefined) {\n      var nextFixRight = nextColumn && nextColumn.fixed === 'right';\n      lastFixRight = !nextFixRight && canLastFix;\n    }\n  } else if (fixLeft !== undefined) {\n    var nextFixLeft = nextColumn && nextColumn.fixed === 'left';\n    lastFixLeft = !nextFixLeft && canLastFix;\n  } else if (fixRight !== undefined) {\n    var prevFixRight = prevColumn && prevColumn.fixed === 'right';\n    firstFixRight = !prevFixRight && canLastFix;\n  }\n  return {\n    fixLeft: fixLeft,\n    fixRight: fixRight,\n    lastFixLeft: lastFixLeft,\n    firstFixRight: firstFixRight,\n    lastFixRight: lastFixRight,\n    firstFixLeft: firstFixLeft,\n    isSticky: stickyOffsets.isSticky\n  };\n}"]},"metadata":{},"sourceType":"module"}