{"ast":null,"code":"import { generate } from '@ant-design/colors';\nimport genControlHeight from '../shared/genControlHeight';\nimport genSizeMapToken from '../shared/genSizeMapToken';\nimport { defaultPresetColors } from '../seed';\nimport genColorMapToken from '../shared/genColorMapToken';\nimport genCommonMapToken from '../shared/genCommonMapToken';\nimport { generateColorPalettes, generateNeutralColorPalettes } from './colors';\nimport genFontMapToken from '../shared/genFontMapToken';\nexport default function derivative(token) {\n  var colorPalettes = Object.keys(defaultPresetColors).map(function (colorKey) {\n    var colors = generate(token[colorKey]);\n    return new Array(10).fill(1).reduce(function (prev, _, i) {\n      prev[\"\".concat(colorKey, \"-\").concat(i + 1)] = colors[i];\n      prev[\"\".concat(colorKey).concat(i + 1)] = colors[i];\n      return prev;\n    }, {});\n  }).reduce(function (prev, cur) {\n    prev = Object.assign(Object.assign({}, prev), cur);\n    return prev;\n  }, {});\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, token), colorPalettes), genColorMapToken(token, {\n    generateColorPalettes: generateColorPalettes,\n    generateNeutralColorPalettes: generateNeutralColorPalettes\n  })), genFontMapToken(token.fontSize)), genSizeMapToken(token)), genControlHeight(token)), genCommonMapToken(token));\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/theme/themes/default/index.js"],"names":["generate","genControlHeight","genSizeMapToken","defaultPresetColors","genColorMapToken","genCommonMapToken","generateColorPalettes","generateNeutralColorPalettes","genFontMapToken","derivative","token","colorPalettes","Object","keys","map","colorKey","colors","Array","fill","reduce","prev","_","i","cur","assign","fontSize"],"mappings":"AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAASC,mBAAT,QAAoC,SAApC;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,SAASC,qBAAT,EAAgCC,4BAAhC,QAAoE,UAApE;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACxC,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYV,mBAAZ,EAAiCW,GAAjC,CAAqC,UAAAC,QAAQ,EAAI;AACrE,QAAMC,MAAM,GAAGhB,QAAQ,CAACU,KAAK,CAACK,QAAD,CAAN,CAAvB;AACA,WAAO,IAAIE,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,EAAsBC,MAAtB,CAA6B,UAACC,IAAD,EAAOC,CAAP,EAAUC,CAAV,EAAgB;AAClDF,MAAAA,IAAI,WAAIL,QAAJ,cAAgBO,CAAC,GAAG,CAApB,EAAJ,GAA+BN,MAAM,CAACM,CAAD,CAArC;AACAF,MAAAA,IAAI,WAAIL,QAAJ,SAAeO,CAAC,GAAG,CAAnB,EAAJ,GAA8BN,MAAM,CAACM,CAAD,CAApC;AACA,aAAOF,IAAP;AACD,KAJM,EAIJ,EAJI,CAAP;AAKD,GAPqB,EAOnBD,MAPmB,CAOZ,UAACC,IAAD,EAAOG,GAAP,EAAe;AACvBH,IAAAA,IAAI,GAAGR,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,CAAd,EAAuCG,GAAvC,CAAP;AACA,WAAOH,IAAP;AACD,GAVqB,EAUnB,EAVmB,CAAtB;AAWA,SAAOR,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAc,EAAd,EAAkBd,KAAlB,CAAd,EAAwCC,aAAxC,CAAd,EAAsEP,gBAAgB,CAACM,KAAD,EAAQ;AAC3JJ,IAAAA,qBAAqB,EAArBA,qBAD2J;AAE3JC,IAAAA,4BAA4B,EAA5BA;AAF2J,GAAR,CAAtF,CAAd,EAG5CC,eAAe,CAACE,KAAK,CAACe,QAAP,CAH6B,CAAd,EAGIvB,eAAe,CAACQ,KAAD,CAHnB,CAAd,EAG2CT,gBAAgB,CAACS,KAAD,CAH3D,CAAd,EAGmFL,iBAAiB,CAACK,KAAD,CAHpG,CAAP;AAID","sourcesContent":["import { generate } from '@ant-design/colors';\nimport genControlHeight from '../shared/genControlHeight';\nimport genSizeMapToken from '../shared/genSizeMapToken';\nimport { defaultPresetColors } from '../seed';\nimport genColorMapToken from '../shared/genColorMapToken';\nimport genCommonMapToken from '../shared/genCommonMapToken';\nimport { generateColorPalettes, generateNeutralColorPalettes } from './colors';\nimport genFontMapToken from '../shared/genFontMapToken';\nexport default function derivative(token) {\n  const colorPalettes = Object.keys(defaultPresetColors).map(colorKey => {\n    const colors = generate(token[colorKey]);\n    return new Array(10).fill(1).reduce((prev, _, i) => {\n      prev[`${colorKey}-${i + 1}`] = colors[i];\n      prev[`${colorKey}${i + 1}`] = colors[i];\n      return prev;\n    }, {});\n  }).reduce((prev, cur) => {\n    prev = Object.assign(Object.assign({}, prev), cur);\n    return prev;\n  }, {});\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, token), colorPalettes), genColorMapToken(token, {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  })), genFontMapToken(token.fontSize)), genSizeMapToken(token)), genControlHeight(token)), genCommonMapToken(token));\n}"]},"metadata":{},"sourceType":"module"}