{"ast":null,"code":"import useMemo from \"rc-util/es/hooks/useMemo\";\nimport isEqual from \"rc-util/es/isEqual\";\nimport { defaultConfig } from '../../theme/internal';\nexport default function useTheme(theme, parentTheme) {\n  const themeConfig = theme || {};\n  const parentThemeConfig = themeConfig.inherit === false || !parentTheme ? defaultConfig : parentTheme;\n  const mergedTheme = useMemo(() => {\n    if (!theme) {\n      return parentTheme;\n    } // Override\n\n\n    const mergedComponents = Object.assign({}, parentThemeConfig.components);\n    Object.keys(theme.components || {}).forEach(componentName => {\n      mergedComponents[componentName] = Object.assign(Object.assign({}, mergedComponents[componentName]), theme.components[componentName]);\n    }); // Base token\n\n    return Object.assign(Object.assign(Object.assign({}, parentThemeConfig), themeConfig), {\n      token: Object.assign(Object.assign({}, parentThemeConfig.token), themeConfig.token),\n      components: mergedComponents\n    });\n  }, [themeConfig, parentThemeConfig], (prev, next) => prev.some((prevTheme, index) => {\n    const nextTheme = next[index];\n    return !isEqual(prevTheme, nextTheme, true);\n  }));\n  return mergedTheme;\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/config-provider/hooks/useTheme.js"],"names":["useMemo","isEqual","defaultConfig","useTheme","theme","parentTheme","themeConfig","parentThemeConfig","inherit","mergedTheme","mergedComponents","Object","assign","components","keys","forEach","componentName","token","prev","next","some","prevTheme","index","nextTheme"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,WAAzB,EAAsC;AACnD,QAAMC,WAAW,GAAGF,KAAK,IAAI,EAA7B;AACA,QAAMG,iBAAiB,GAAGD,WAAW,CAACE,OAAZ,KAAwB,KAAxB,IAAiC,CAACH,WAAlC,GAAgDH,aAAhD,GAAgEG,WAA1F;AACA,QAAMI,WAAW,GAAGT,OAAO,CAAC,MAAM;AAChC,QAAI,CAACI,KAAL,EAAY;AACV,aAAOC,WAAP;AACD,KAH+B,CAIhC;;;AACA,UAAMK,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,iBAAiB,CAACM,UAApC,CAAzB;AACAF,IAAAA,MAAM,CAACG,IAAP,CAAYV,KAAK,CAACS,UAAN,IAAoB,EAAhC,EAAoCE,OAApC,CAA4CC,aAAa,IAAI;AAC3DN,MAAAA,gBAAgB,CAACM,aAAD,CAAhB,GAAkCL,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,gBAAgB,CAACM,aAAD,CAAlC,CAAd,EAAkEZ,KAAK,CAACS,UAAN,CAAiBG,aAAjB,CAAlE,CAAlC;AACD,KAFD,EANgC,CAShC;;AACA,WAAOL,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,iBAAlB,CAAd,EAAoDD,WAApD,CAAd,EAAgF;AACrFW,MAAAA,KAAK,EAAEN,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,iBAAiB,CAACU,KAApC,CAAd,EAA0DX,WAAW,CAACW,KAAtE,CAD8E;AAErFJ,MAAAA,UAAU,EAAEH;AAFyE,KAAhF,CAAP;AAID,GAd0B,EAcxB,CAACJ,WAAD,EAAcC,iBAAd,CAdwB,EAcU,CAACW,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAACE,IAAL,CAAU,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACnF,UAAMC,SAAS,GAAGJ,IAAI,CAACG,KAAD,CAAtB;AACA,WAAO,CAACrB,OAAO,CAACoB,SAAD,EAAYE,SAAZ,EAAuB,IAAvB,CAAf;AACD,GAHoD,CAd1B,CAA3B;AAkBA,SAAOd,WAAP;AACD","sourcesContent":["import useMemo from \"rc-util/es/hooks/useMemo\";\nimport isEqual from \"rc-util/es/isEqual\";\nimport { defaultConfig } from '../../theme/internal';\nexport default function useTheme(theme, parentTheme) {\n  const themeConfig = theme || {};\n  const parentThemeConfig = themeConfig.inherit === false || !parentTheme ? defaultConfig : parentTheme;\n  const mergedTheme = useMemo(() => {\n    if (!theme) {\n      return parentTheme;\n    }\n    // Override\n    const mergedComponents = Object.assign({}, parentThemeConfig.components);\n    Object.keys(theme.components || {}).forEach(componentName => {\n      mergedComponents[componentName] = Object.assign(Object.assign({}, mergedComponents[componentName]), theme.components[componentName]);\n    });\n    // Base token\n    return Object.assign(Object.assign(Object.assign({}, parentThemeConfig), themeConfig), {\n      token: Object.assign(Object.assign({}, parentThemeConfig.token), themeConfig.token),\n      components: mergedComponents\n    });\n  }, [themeConfig, parentThemeConfig], (prev, next) => prev.some((prevTheme, index) => {\n    const nextTheme = next[index];\n    return !isEqual(prevTheme, nextTheme, true);\n  }));\n  return mergedTheme;\n}"]},"metadata":{},"sourceType":"module"}