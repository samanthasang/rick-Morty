{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { mergeToken, genComponentStyleHook } from '../../theme/internal';\nimport { resetComponent } from '../../style';\n\nvar genQRCodeStyle = function genQRCodeStyle(token) {\n  var _Object$assign, _ref;\n\n  var componentCls = token.componentCls;\n  return _ref = {}, _defineProperty(_ref, componentCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: token.paddingSM,\n    backgroundColor: token.colorWhite,\n    borderRadius: token.borderRadiusLG,\n    border: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.colorSplit),\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden'\n  }, _defineProperty(_Object$assign, \"& > \".concat(componentCls, \"-mask\"), _defineProperty({\n    position: 'absolute',\n    insetBlockStart: 0,\n    insetInlineStart: 0,\n    zIndex: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    color: token.colorText,\n    lineHeight: token.lineHeight,\n    background: token.QRCodeMaskBackgroundColor,\n    textAlign: 'center'\n  }, \"& > \".concat(componentCls, \"-expired\"), {\n    color: token.QRCodeExpiredTextColor\n  })), _defineProperty(_Object$assign, '&-icon', {\n    marginBlockEnd: token.marginXS,\n    fontSize: token.controlHeight\n  }), _Object$assign))), _defineProperty(_ref, \"\".concat(componentCls, \"-borderless\"), {\n    borderColor: 'transparent'\n  }), _ref;\n};\n\nexport default genComponentStyleHook('QRCode', function (token) {\n  return genQRCodeStyle(mergeToken(token, {\n    QRCodeExpiredTextColor: 'rgba(0, 0, 0, 0.88)',\n    QRCodeMaskBackgroundColor: 'rgba(255, 255, 255, 0.96)'\n  }));\n});","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/qrcode/style/index.js"],"names":["mergeToken","genComponentStyleHook","resetComponent","genQRCodeStyle","token","componentCls","Object","assign","display","justifyContent","alignItems","padding","paddingSM","backgroundColor","colorWhite","borderRadius","borderRadiusLG","border","lineWidth","lineType","colorSplit","position","width","height","overflow","insetBlockStart","insetInlineStart","zIndex","flexDirection","color","colorText","lineHeight","background","QRCodeMaskBackgroundColor","textAlign","QRCodeExpiredTextColor","marginBlockEnd","marginXS","fontSize","controlHeight","borderColor"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,qBAArB,QAAkD,sBAAlD;AACA,SAASC,cAAT,QAA+B,aAA/B;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAAA;;AAC9B,MACEC,YADF,GAEID,KAFJ,CACEC,YADF;AAGA,0CACGA,YADH,EACkBC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,cAAc,CAACE,KAAD,CAAhC,CAAd;AACdI,IAAAA,OAAO,EAAE,MADK;AAEdC,IAAAA,cAAc,EAAE,QAFF;AAGdC,IAAAA,UAAU,EAAE,QAHE;AAIdC,IAAAA,OAAO,EAAEP,KAAK,CAACQ,SAJD;AAKdC,IAAAA,eAAe,EAAET,KAAK,CAACU,UALT;AAMdC,IAAAA,YAAY,EAAEX,KAAK,CAACY,cANN;AAOdC,IAAAA,MAAM,YAAKb,KAAK,CAACc,SAAX,gBAA0Bd,KAAK,CAACe,QAAhC,cAA4Cf,KAAK,CAACgB,UAAlD,CAPQ;AAQdC,IAAAA,QAAQ,EAAE,UARI;AASdC,IAAAA,KAAK,EAAE,MATO;AAUdC,IAAAA,MAAM,EAAE,MAVM;AAWdC,IAAAA,QAAQ,EAAE;AAXI,mDAYNnB,YAZM;AAaZgB,IAAAA,QAAQ,EAAE,UAbE;AAcZI,IAAAA,eAAe,EAAE,CAdL;AAeZC,IAAAA,gBAAgB,EAAE,CAfN;AAgBZC,IAAAA,MAAM,EAAE,EAhBI;AAiBZnB,IAAAA,OAAO,EAAE,MAjBG;AAkBZoB,IAAAA,aAAa,EAAE,QAlBH;AAmBZnB,IAAAA,cAAc,EAAE,QAnBJ;AAoBZC,IAAAA,UAAU,EAAE,QApBA;AAqBZY,IAAAA,KAAK,EAAE,MArBK;AAsBZC,IAAAA,MAAM,EAAE,MAtBI;AAuBZM,IAAAA,KAAK,EAAEzB,KAAK,CAAC0B,SAvBD;AAwBZC,IAAAA,UAAU,EAAE3B,KAAK,CAAC2B,UAxBN;AAyBZC,IAAAA,UAAU,EAAE5B,KAAK,CAAC6B,yBAzBN;AA0BZC,IAAAA,SAAS,EAAE;AA1BC,mBA2BJ7B,YA3BI,eA2BqB;AAC/BwB,IAAAA,KAAK,EAAEzB,KAAK,CAAC+B;AADkB,GA3BrB,oCA+Bd,QA/Bc,EA+BJ;AACRC,IAAAA,cAAc,EAAEhC,KAAK,CAACiC,QADd;AAERC,IAAAA,QAAQ,EAAElC,KAAK,CAACmC;AAFR,GA/BI,mBADlB,mCAqCMlC,YArCN,kBAqCkC;AAC9BmC,IAAAA,WAAW,EAAE;AADiB,GArClC;AAyCD,CA7CD;;AA8CA,eAAevC,qBAAqB,CAAC,QAAD,EAAW,UAAAG,KAAK;AAAA,SAAID,cAAc,CAACH,UAAU,CAACI,KAAD,EAAQ;AACvF+B,IAAAA,sBAAsB,EAAE,qBAD+D;AAEvFF,IAAAA,yBAAyB,EAAE;AAF4D,GAAR,CAAX,CAAlB;AAAA,CAAhB,CAApC","sourcesContent":["import { mergeToken, genComponentStyleHook } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst genQRCodeStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: token.paddingSM,\n      backgroundColor: token.colorWhite,\n      borderRadius: token.borderRadiusLG,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorSplit}`,\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      [`& > ${componentCls}-mask`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        zIndex: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        color: token.colorText,\n        lineHeight: token.lineHeight,\n        background: token.QRCodeMaskBackgroundColor,\n        textAlign: 'center',\n        [`& > ${componentCls}-expired`]: {\n          color: token.QRCodeExpiredTextColor\n        }\n      },\n      '&-icon': {\n        marginBlockEnd: token.marginXS,\n        fontSize: token.controlHeight\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent'\n    }\n  };\n};\nexport default genComponentStyleHook('QRCode', token => genQRCodeStyle(mergeToken(token, {\n  QRCodeExpiredTextColor: 'rgba(0, 0, 0, 0.88)',\n  QRCodeMaskBackgroundColor: 'rgba(255, 255, 255, 0.96)'\n})));"]},"metadata":{},"sourceType":"module"}