{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport StyleContext from \"../StyleContext\";\nimport useHMR from \"./useHMR\";\nexport default function useClientCache(prefix, keyPath, cacheFn, onCacheRemove) {\n  var _React$useContext = React.useContext(StyleContext),\n      globalCache = _React$useContext.cache;\n\n  var fullPath = [prefix].concat(_toConsumableArray(keyPath));\n  var HMRUpdate = useHMR(); // Create cache\n\n  React.useMemo(function () {\n    globalCache.update(fullPath, function (prevCache) {\n      var _ref = prevCache || [],\n          _ref2 = _slicedToArray(_ref, 2),\n          _ref2$ = _ref2[0],\n          times = _ref2$ === void 0 ? 0 : _ref2$,\n          cache = _ref2[1]; // HMR should always ignore cache since developer may change it\n\n\n      var tmpCache = cache;\n\n      if (process.env.NODE_ENV !== 'production' && cache && HMRUpdate) {\n        onCacheRemove === null || onCacheRemove === void 0 ? void 0 : onCacheRemove(tmpCache, HMRUpdate);\n        tmpCache = null;\n      }\n\n      var mergedCache = tmpCache || cacheFn();\n      return [times + 1, mergedCache];\n    });\n  },\n  /* eslint-disable react-hooks/exhaustive-deps */\n  [fullPath.join('_')]\n  /* eslint-enable */\n  ); // Remove if no need anymore\n\n  React.useEffect(function () {\n    return function () {\n      globalCache.update(fullPath, function (prevCache) {\n        var _ref3 = prevCache || [],\n            _ref4 = _slicedToArray(_ref3, 2),\n            _ref4$ = _ref4[0],\n            times = _ref4$ === void 0 ? 0 : _ref4$,\n            cache = _ref4[1];\n\n        var nextCount = times - 1;\n\n        if (nextCount === 0) {\n          onCacheRemove === null || onCacheRemove === void 0 ? void 0 : onCacheRemove(cache, false);\n          return null;\n        }\n\n        return [times - 1, cache];\n      });\n    };\n  }, fullPath);\n  return globalCache.get(fullPath)[1];\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/@ant-design/cssinjs/es/hooks/useGlobalCache.js"],"names":["_slicedToArray","_toConsumableArray","React","StyleContext","useHMR","useClientCache","prefix","keyPath","cacheFn","onCacheRemove","_React$useContext","useContext","globalCache","cache","fullPath","concat","HMRUpdate","useMemo","update","prevCache","_ref","_ref2","_ref2$","times","tmpCache","process","env","NODE_ENV","mergedCache","join","useEffect","_ref3","_ref4","_ref4$","nextCount","get"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport StyleContext from \"../StyleContext\";\nimport useHMR from \"./useHMR\";\nexport default function useClientCache(prefix, keyPath, cacheFn, onCacheRemove) {\n  var _React$useContext = React.useContext(StyleContext),\n    globalCache = _React$useContext.cache;\n  var fullPath = [prefix].concat(_toConsumableArray(keyPath));\n  var HMRUpdate = useHMR();\n\n  // Create cache\n  React.useMemo(function () {\n    globalCache.update(fullPath, function (prevCache) {\n      var _ref = prevCache || [],\n        _ref2 = _slicedToArray(_ref, 2),\n        _ref2$ = _ref2[0],\n        times = _ref2$ === void 0 ? 0 : _ref2$,\n        cache = _ref2[1];\n\n      // HMR should always ignore cache since developer may change it\n      var tmpCache = cache;\n      if (process.env.NODE_ENV !== 'production' && cache && HMRUpdate) {\n        onCacheRemove === null || onCacheRemove === void 0 ? void 0 : onCacheRemove(tmpCache, HMRUpdate);\n        tmpCache = null;\n      }\n      var mergedCache = tmpCache || cacheFn();\n      return [times + 1, mergedCache];\n    });\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [fullPath.join('_')]\n  /* eslint-enable */);\n\n  // Remove if no need anymore\n  React.useEffect(function () {\n    return function () {\n      globalCache.update(fullPath, function (prevCache) {\n        var _ref3 = prevCache || [],\n          _ref4 = _slicedToArray(_ref3, 2),\n          _ref4$ = _ref4[0],\n          times = _ref4$ === void 0 ? 0 : _ref4$,\n          cache = _ref4[1];\n        var nextCount = times - 1;\n        if (nextCount === 0) {\n          onCacheRemove === null || onCacheRemove === void 0 ? void 0 : onCacheRemove(cache, false);\n          return null;\n        }\n        return [times - 1, cache];\n      });\n    };\n  }, fullPath);\n  return globalCache.get(fullPath)[1];\n}"]},"metadata":{},"sourceType":"module"}