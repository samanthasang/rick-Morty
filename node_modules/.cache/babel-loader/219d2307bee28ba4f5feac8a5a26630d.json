{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport classNames from 'classnames';\nimport { Circle as RCCircle } from 'rc-progress';\nimport * as React from 'react';\nimport Tooltip from '../tooltip';\nimport { getPercentage, getSize, getStrokeColor } from './utils';\nvar CIRCLE_MIN_STROKE_WIDTH = 3;\n\nvar getMinPercent = function getMinPercent(width) {\n  return CIRCLE_MIN_STROKE_WIDTH / width * 100;\n};\n\nvar Circle = function Circle(props) {\n  var prefixCls = props.prefixCls,\n      _props$trailColor = props.trailColor,\n      trailColor = _props$trailColor === void 0 ? null : _props$trailColor,\n      _props$strokeLinecap = props.strokeLinecap,\n      strokeLinecap = _props$strokeLinecap === void 0 ? 'round' : _props$strokeLinecap,\n      gapPosition = props.gapPosition,\n      gapDegree = props.gapDegree,\n      _props$width = props.width,\n      originWidth = _props$width === void 0 ? 120 : _props$width,\n      type = props.type,\n      children = props.children,\n      success = props.success,\n      size = props.size;\n  var mergedSize = size !== null && size !== void 0 ? size : [originWidth, originWidth];\n\n  var _getSize = getSize(mergedSize, 'circle'),\n      _getSize2 = _slicedToArray(_getSize, 2),\n      width = _getSize2[0],\n      height = _getSize2[1];\n\n  var strokeWidth = props.strokeWidth;\n\n  if (strokeWidth === undefined) {\n    strokeWidth = Math.max(getMinPercent(width), 6);\n  }\n\n  var circleStyle = {\n    width: width,\n    height: height,\n    fontSize: width * 0.15 + 6\n  };\n  var realGapDegree = React.useMemo(function () {\n    // Support gapDeg = 0 when type = 'dashboard'\n    if (gapDegree || gapDegree === 0) {\n      return gapDegree;\n    }\n\n    if (type === 'dashboard') {\n      return 75;\n    }\n\n    return undefined;\n  }, [gapDegree, type]);\n  var gapPos = gapPosition || type === 'dashboard' && 'bottom' || undefined; // using className to style stroke color\n\n  var isGradient = Object.prototype.toString.call(props.strokeColor) === '[object Object]';\n  var strokeColor = getStrokeColor({\n    success: success,\n    strokeColor: props.strokeColor\n  });\n  var wrapperClassName = classNames(\"\".concat(prefixCls, \"-inner\"), _defineProperty({}, \"\".concat(prefixCls, \"-circle-gradient\"), isGradient));\n  var circleContent = /*#__PURE__*/React.createElement(RCCircle, {\n    percent: getPercentage(props),\n    strokeWidth: strokeWidth,\n    trailWidth: strokeWidth,\n    strokeColor: strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: realGapDegree,\n    gapPosition: gapPos\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, width <= 20 ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: children\n  }, /*#__PURE__*/React.createElement(\"span\", null, circleContent)) : /*#__PURE__*/React.createElement(React.Fragment, null, circleContent, children));\n};\n\nexport default Circle;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/progress/Circle.js"],"names":["classNames","Circle","RCCircle","React","Tooltip","getPercentage","getSize","getStrokeColor","CIRCLE_MIN_STROKE_WIDTH","getMinPercent","width","props","prefixCls","trailColor","strokeLinecap","gapPosition","gapDegree","originWidth","type","children","success","size","mergedSize","height","strokeWidth","undefined","Math","max","circleStyle","fontSize","realGapDegree","useMemo","gapPos","isGradient","Object","prototype","toString","call","strokeColor","wrapperClassName","circleContent","createElement","percent","trailWidth","className","style","title","Fragment"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport { Circle as RCCircle } from 'rc-progress';\nimport * as React from 'react';\nimport Tooltip from '../tooltip';\nimport { getPercentage, getSize, getStrokeColor } from './utils';\nconst CIRCLE_MIN_STROKE_WIDTH = 3;\nconst getMinPercent = width => CIRCLE_MIN_STROKE_WIDTH / width * 100;\nconst Circle = props => {\n  const {\n    prefixCls,\n    trailColor = null,\n    strokeLinecap = 'round',\n    gapPosition,\n    gapDegree,\n    width: originWidth = 120,\n    type,\n    children,\n    success,\n    size\n  } = props;\n  const mergedSize = size !== null && size !== void 0 ? size : [originWidth, originWidth];\n  const [width, height] = getSize(mergedSize, 'circle');\n  let {\n    strokeWidth\n  } = props;\n  if (strokeWidth === undefined) {\n    strokeWidth = Math.max(getMinPercent(width), 6);\n  }\n  const circleStyle = {\n    width,\n    height,\n    fontSize: width * 0.15 + 6\n  };\n  const realGapDegree = React.useMemo(() => {\n    // Support gapDeg = 0 when type = 'dashboard'\n    if (gapDegree || gapDegree === 0) {\n      return gapDegree;\n    }\n    if (type === 'dashboard') {\n      return 75;\n    }\n    return undefined;\n  }, [gapDegree, type]);\n  const gapPos = gapPosition || type === 'dashboard' && 'bottom' || undefined;\n  // using className to style stroke color\n  const isGradient = Object.prototype.toString.call(props.strokeColor) === '[object Object]';\n  const strokeColor = getStrokeColor({\n    success,\n    strokeColor: props.strokeColor\n  });\n  const wrapperClassName = classNames(`${prefixCls}-inner`, {\n    [`${prefixCls}-circle-gradient`]: isGradient\n  });\n  const circleContent = /*#__PURE__*/React.createElement(RCCircle, {\n    percent: getPercentage(props),\n    strokeWidth: strokeWidth,\n    trailWidth: strokeWidth,\n    strokeColor: strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: realGapDegree,\n    gapPosition: gapPos\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, width <= 20 ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: children\n  }, /*#__PURE__*/React.createElement(\"span\", null, circleContent)) : /*#__PURE__*/React.createElement(React.Fragment, null, circleContent, children));\n};\nexport default Circle;"]},"metadata":{},"sourceType":"module"}