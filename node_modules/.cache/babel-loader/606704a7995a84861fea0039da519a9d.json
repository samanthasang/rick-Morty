{"ast":null,"code":"import * as React from 'react';\nimport SliderContext from '../context';\nimport Track from './Track';\nimport { getIndex } from '../util';\nexport default function Tracks(props) {\n  var prefixCls = props.prefixCls,\n      style = props.style,\n      values = props.values,\n      startPoint = props.startPoint,\n      onStartMove = props.onStartMove;\n\n  var _React$useContext = React.useContext(SliderContext),\n      included = _React$useContext.included,\n      range = _React$useContext.range,\n      min = _React$useContext.min;\n\n  var trackList = React.useMemo(function () {\n    if (!range) {\n      // null value do not have track\n      if (values.length === 0) {\n        return [];\n      }\n\n      var startValue = startPoint !== null && startPoint !== void 0 ? startPoint : min;\n      var endValue = values[0];\n      return [{\n        start: Math.min(startValue, endValue),\n        end: Math.max(startValue, endValue)\n      }];\n    } // Multiple\n\n\n    var list = [];\n\n    for (var i = 0; i < values.length - 1; i += 1) {\n      list.push({\n        start: values[i],\n        end: values[i + 1]\n      });\n    }\n\n    return list;\n  }, [values, range, startPoint, min]);\n  return included ? trackList.map(function (_ref, index) {\n    var start = _ref.start,\n        end = _ref.end;\n    return /*#__PURE__*/React.createElement(Track, {\n      index: index,\n      prefixCls: prefixCls,\n      style: getIndex(style, index),\n      start: start,\n      end: end,\n      key: index,\n      onStartMove: onStartMove\n    });\n  }) : null;\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-slider/es/Tracks/index.js"],"names":["React","SliderContext","Track","getIndex","Tracks","props","prefixCls","style","values","startPoint","onStartMove","_React$useContext","useContext","included","range","min","trackList","useMemo","length","startValue","endValue","start","Math","end","max","list","i","push","map","_ref","index","createElement","key"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,YAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACpC,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AAAA,MACEC,KAAK,GAAGF,KAAK,CAACE,KADhB;AAAA,MAEEC,MAAM,GAAGH,KAAK,CAACG,MAFjB;AAAA,MAGEC,UAAU,GAAGJ,KAAK,CAACI,UAHrB;AAAA,MAIEC,WAAW,GAAGL,KAAK,CAACK,WAJtB;;AAKA,MAAIC,iBAAiB,GAAGX,KAAK,CAACY,UAAN,CAAiBX,aAAjB,CAAxB;AAAA,MACEY,QAAQ,GAAGF,iBAAiB,CAACE,QAD/B;AAAA,MAEEC,KAAK,GAAGH,iBAAiB,CAACG,KAF5B;AAAA,MAGEC,GAAG,GAAGJ,iBAAiB,CAACI,GAH1B;;AAIA,MAAIC,SAAS,GAAGhB,KAAK,CAACiB,OAAN,CAAc,YAAY;AACxC,QAAI,CAACH,KAAL,EAAY;AACV;AACA,UAAIN,MAAM,CAACU,MAAP,KAAkB,CAAtB,EAAyB;AACvB,eAAO,EAAP;AACD;;AACD,UAAIC,UAAU,GAAGV,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+CA,UAA/C,GAA4DM,GAA7E;AACA,UAAIK,QAAQ,GAAGZ,MAAM,CAAC,CAAD,CAArB;AACA,aAAO,CAAC;AACNa,QAAAA,KAAK,EAAEC,IAAI,CAACP,GAAL,CAASI,UAAT,EAAqBC,QAArB,CADD;AAENG,QAAAA,GAAG,EAAED,IAAI,CAACE,GAAL,CAASL,UAAT,EAAqBC,QAArB;AAFC,OAAD,CAAP;AAID,KAZuC,CAaxC;;;AACA,QAAIK,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,MAAM,CAACU,MAAP,GAAgB,CAApC,EAAuCQ,CAAC,IAAI,CAA5C,EAA+C;AAC7CD,MAAAA,IAAI,CAACE,IAAL,CAAU;AACRN,QAAAA,KAAK,EAAEb,MAAM,CAACkB,CAAD,CADL;AAERH,QAAAA,GAAG,EAAEf,MAAM,CAACkB,CAAC,GAAG,CAAL;AAFH,OAAV;AAID;;AACD,WAAOD,IAAP;AACD,GAtBe,EAsBb,CAACjB,MAAD,EAASM,KAAT,EAAgBL,UAAhB,EAA4BM,GAA5B,CAtBa,CAAhB;AAuBA,SAAOF,QAAQ,GAAGG,SAAS,CAACY,GAAV,CAAc,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACrD,QAAIT,KAAK,GAAGQ,IAAI,CAACR,KAAjB;AAAA,QACEE,GAAG,GAAGM,IAAI,CAACN,GADb;AAEA,WAAO,aAAavB,KAAK,CAAC+B,aAAN,CAAoB7B,KAApB,EAA2B;AAC7C4B,MAAAA,KAAK,EAAEA,KADsC;AAE7CxB,MAAAA,SAAS,EAAEA,SAFkC;AAG7CC,MAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAD,EAAQuB,KAAR,CAH8B;AAI7CT,MAAAA,KAAK,EAAEA,KAJsC;AAK7CE,MAAAA,GAAG,EAAEA,GALwC;AAM7CS,MAAAA,GAAG,EAAEF,KANwC;AAO7CpB,MAAAA,WAAW,EAAEA;AAPgC,KAA3B,CAApB;AASD,GAZiB,CAAH,GAYV,IAZL;AAaD","sourcesContent":["import * as React from 'react';\nimport SliderContext from '../context';\nimport Track from './Track';\nimport { getIndex } from '../util';\nexport default function Tracks(props) {\n  var prefixCls = props.prefixCls,\n    style = props.style,\n    values = props.values,\n    startPoint = props.startPoint,\n    onStartMove = props.onStartMove;\n  var _React$useContext = React.useContext(SliderContext),\n    included = _React$useContext.included,\n    range = _React$useContext.range,\n    min = _React$useContext.min;\n  var trackList = React.useMemo(function () {\n    if (!range) {\n      // null value do not have track\n      if (values.length === 0) {\n        return [];\n      }\n      var startValue = startPoint !== null && startPoint !== void 0 ? startPoint : min;\n      var endValue = values[0];\n      return [{\n        start: Math.min(startValue, endValue),\n        end: Math.max(startValue, endValue)\n      }];\n    }\n    // Multiple\n    var list = [];\n    for (var i = 0; i < values.length - 1; i += 1) {\n      list.push({\n        start: values[i],\n        end: values[i + 1]\n      });\n    }\n    return list;\n  }, [values, range, startPoint, min]);\n  return included ? trackList.map(function (_ref, index) {\n    var start = _ref.start,\n      end = _ref.end;\n    return /*#__PURE__*/React.createElement(Track, {\n      index: index,\n      prefixCls: prefixCls,\n      style: getIndex(style, index),\n      start: start,\n      end: end,\n      key: index,\n      onStartMove: onStartMove\n    });\n  }) : null;\n}"]},"metadata":{},"sourceType":"module"}