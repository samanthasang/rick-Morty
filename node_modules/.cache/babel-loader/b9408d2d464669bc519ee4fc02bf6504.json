{"ast":null,"code":"import { TinyColor } from '@ctrl/tinycolor';\nimport { clearFix, textEllipsis } from '../../style';\n\nconst genPictureStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    uploadThumbnailSize,\n    uploadProgressOffset\n  } = token;\n  const listCls = `${componentCls}-list`;\n  const itemCls = `${listCls}-item`;\n  return {\n    [`${componentCls}-wrapper`]: {\n      // ${listCls} 增加优先级\n      [`\n        ${listCls}${listCls}-picture,\n        ${listCls}${listCls}-picture-card,\n        ${listCls}${listCls}-picture-circle\n      `]: {\n        [itemCls]: {\n          position: 'relative',\n          height: uploadThumbnailSize + token.lineWidth * 2 + token.paddingXS * 2,\n          padding: token.paddingXS,\n          border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n          borderRadius: token.borderRadiusLG,\n          '&:hover': {\n            background: 'transparent'\n          },\n          [`${itemCls}-thumbnail`]: Object.assign(Object.assign({}, textEllipsis), {\n            width: uploadThumbnailSize,\n            height: uploadThumbnailSize,\n            lineHeight: `${uploadThumbnailSize + token.paddingSM}px`,\n            textAlign: 'center',\n            flex: 'none',\n            [iconCls]: {\n              fontSize: token.fontSizeHeading2,\n              color: token.colorPrimary\n            },\n            img: {\n              display: 'block',\n              width: '100%',\n              height: '100%',\n              overflow: 'hidden'\n            }\n          }),\n          [`${itemCls}-progress`]: {\n            bottom: uploadProgressOffset,\n            width: `calc(100% - ${token.paddingSM * 2}px)`,\n            marginTop: 0,\n            paddingInlineStart: uploadThumbnailSize + token.paddingXS\n          }\n        },\n        [`${itemCls}-error`]: {\n          borderColor: token.colorError,\n          // Adjust the color of the error icon : https://github.com/ant-design/ant-design/pull/24160\n          [`${itemCls}-thumbnail ${iconCls}`]: {\n            [`svg path[fill='#e6f7ff']`]: {\n              fill: token.colorErrorBg\n            },\n            [`svg path[fill='#1890ff']`]: {\n              fill: token.colorError\n            }\n          }\n        },\n        [`${itemCls}-uploading`]: {\n          borderStyle: 'dashed',\n          [`${itemCls}-name`]: {\n            marginBottom: uploadProgressOffset\n          }\n        }\n      },\n      [`${listCls}${listCls}-picture-circle ${itemCls}`]: {\n        [`&, &::before, ${itemCls}-thumbnail`]: {\n          borderRadius: '50%'\n        }\n      }\n    }\n  };\n};\n\nconst genPictureCardStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    fontSizeLG,\n    colorTextLightSolid\n  } = token;\n  const listCls = `${componentCls}-list`;\n  const itemCls = `${listCls}-item`;\n  const uploadPictureCardSize = token.uploadPicCardSize;\n  return {\n    [`\n      ${componentCls}-wrapper${componentCls}-picture-card-wrapper,\n      ${componentCls}-wrapper${componentCls}-picture-circle-wrapper\n    `]: Object.assign(Object.assign({}, clearFix()), {\n      display: 'inline-block',\n      width: '100%',\n      [`${componentCls}${componentCls}-select`]: {\n        width: uploadPictureCardSize,\n        height: uploadPictureCardSize,\n        marginInlineEnd: token.marginXS,\n        marginBottom: token.marginXS,\n        textAlign: 'center',\n        verticalAlign: 'top',\n        backgroundColor: token.colorFillAlter,\n        border: `${token.lineWidth}px dashed ${token.colorBorder}`,\n        borderRadius: token.borderRadiusLG,\n        cursor: 'pointer',\n        transition: `border-color ${token.motionDurationSlow}`,\n        [`> ${componentCls}`]: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          textAlign: 'center'\n        },\n        [`&:not(${componentCls}-disabled):hover`]: {\n          borderColor: token.colorPrimary\n        }\n      },\n      // list\n      [`${listCls}${listCls}-picture-card, ${listCls}${listCls}-picture-circle`]: {\n        [`${listCls}-item-container`]: {\n          display: 'inline-block',\n          width: uploadPictureCardSize,\n          height: uploadPictureCardSize,\n          marginBlock: `0 ${token.marginXS}px`,\n          marginInline: `0 ${token.marginXS}px`,\n          verticalAlign: 'top'\n        },\n        '&::after': {\n          display: 'none'\n        },\n        [itemCls]: {\n          height: '100%',\n          margin: 0,\n          '&::before': {\n            position: 'absolute',\n            zIndex: 1,\n            width: `calc(100% - ${token.paddingXS * 2}px)`,\n            height: `calc(100% - ${token.paddingXS * 2}px)`,\n            backgroundColor: token.colorBgMask,\n            opacity: 0,\n            transition: `all ${token.motionDurationSlow}`,\n            content: '\" \"'\n          }\n        },\n        [`${itemCls}:hover`]: {\n          [`&::before, ${itemCls}-actions`]: {\n            opacity: 1\n          }\n        },\n        [`${itemCls}-actions`]: {\n          position: 'absolute',\n          insetInlineStart: 0,\n          zIndex: 10,\n          width: '100%',\n          whiteSpace: 'nowrap',\n          textAlign: 'center',\n          opacity: 0,\n          transition: `all ${token.motionDurationSlow}`,\n          [`${iconCls}-eye, ${iconCls}-download, ${iconCls}-delete`]: {\n            zIndex: 10,\n            width: fontSizeLG,\n            margin: `0 ${token.marginXXS}px`,\n            fontSize: fontSizeLG,\n            cursor: 'pointer',\n            transition: `all ${token.motionDurationSlow}`,\n            svg: {\n              verticalAlign: 'baseline'\n            }\n          }\n        },\n        [`${itemCls}-actions, ${itemCls}-actions:hover`]: {\n          [`${iconCls}-eye, ${iconCls}-download, ${iconCls}-delete`]: {\n            color: new TinyColor(colorTextLightSolid).setAlpha(0.65).toRgbString(),\n            '&:hover': {\n              color: colorTextLightSolid\n            }\n          }\n        },\n        [`${itemCls}-thumbnail, ${itemCls}-thumbnail img`]: {\n          position: 'static',\n          display: 'block',\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain'\n        },\n        [`${itemCls}-name`]: {\n          display: 'none',\n          textAlign: 'center'\n        },\n        [`${itemCls}-file + ${itemCls}-name`]: {\n          position: 'absolute',\n          bottom: token.margin,\n          display: 'block',\n          width: `calc(100% - ${token.paddingXS * 2}px)`\n        },\n        [`${itemCls}-uploading`]: {\n          [`&${itemCls}`]: {\n            backgroundColor: token.colorFillAlter\n          },\n          [`&::before, ${iconCls}-eye, ${iconCls}-download, ${iconCls}-delete`]: {\n            display: 'none'\n          }\n        },\n        [`${itemCls}-progress`]: {\n          bottom: token.marginXL,\n          width: `calc(100% - ${token.paddingXS * 2}px)`,\n          paddingInlineStart: 0\n        }\n      }\n    }),\n    [`${componentCls}-wrapper${componentCls}-picture-circle-wrapper`]: {\n      [`${componentCls}${componentCls}-select`]: {\n        borderRadius: '50%'\n      }\n    }\n  };\n};\n\nexport { genPictureStyle, genPictureCardStyle };","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/upload/style/picture.js"],"names":["TinyColor","clearFix","textEllipsis","genPictureStyle","token","componentCls","iconCls","uploadThumbnailSize","uploadProgressOffset","listCls","itemCls","position","height","lineWidth","paddingXS","padding","border","lineType","colorBorder","borderRadius","borderRadiusLG","background","Object","assign","width","lineHeight","paddingSM","textAlign","flex","fontSize","fontSizeHeading2","color","colorPrimary","img","display","overflow","bottom","marginTop","paddingInlineStart","borderColor","colorError","fill","colorErrorBg","borderStyle","marginBottom","genPictureCardStyle","fontSizeLG","colorTextLightSolid","uploadPictureCardSize","uploadPicCardSize","marginInlineEnd","marginXS","verticalAlign","backgroundColor","colorFillAlter","cursor","transition","motionDurationSlow","alignItems","justifyContent","marginBlock","marginInline","margin","zIndex","colorBgMask","opacity","content","insetInlineStart","whiteSpace","marginXXS","svg","setAlpha","toRgbString","objectFit","marginXL"],"mappings":"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","sourcesContent":["import { TinyColor } from '@ctrl/tinycolor';\nimport { clearFix, textEllipsis } from '../../style';\nconst genPictureStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    uploadThumbnailSize,\n    uploadProgressOffset\n  } = token;\n  const listCls = `${componentCls}-list`;\n  const itemCls = `${listCls}-item`;\n  return {\n    [`${componentCls}-wrapper`]: {\n      // ${listCls} 增加优先级\n      [`\n        ${listCls}${listCls}-picture,\n        ${listCls}${listCls}-picture-card,\n        ${listCls}${listCls}-picture-circle\n      `]: {\n        [itemCls]: {\n          position: 'relative',\n          height: uploadThumbnailSize + token.lineWidth * 2 + token.paddingXS * 2,\n          padding: token.paddingXS,\n          border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n          borderRadius: token.borderRadiusLG,\n          '&:hover': {\n            background: 'transparent'\n          },\n          [`${itemCls}-thumbnail`]: Object.assign(Object.assign({}, textEllipsis), {\n            width: uploadThumbnailSize,\n            height: uploadThumbnailSize,\n            lineHeight: `${uploadThumbnailSize + token.paddingSM}px`,\n            textAlign: 'center',\n            flex: 'none',\n            [iconCls]: {\n              fontSize: token.fontSizeHeading2,\n              color: token.colorPrimary\n            },\n            img: {\n              display: 'block',\n              width: '100%',\n              height: '100%',\n              overflow: 'hidden'\n            }\n          }),\n          [`${itemCls}-progress`]: {\n            bottom: uploadProgressOffset,\n            width: `calc(100% - ${token.paddingSM * 2}px)`,\n            marginTop: 0,\n            paddingInlineStart: uploadThumbnailSize + token.paddingXS\n          }\n        },\n        [`${itemCls}-error`]: {\n          borderColor: token.colorError,\n          // Adjust the color of the error icon : https://github.com/ant-design/ant-design/pull/24160\n          [`${itemCls}-thumbnail ${iconCls}`]: {\n            [`svg path[fill='#e6f7ff']`]: {\n              fill: token.colorErrorBg\n            },\n            [`svg path[fill='#1890ff']`]: {\n              fill: token.colorError\n            }\n          }\n        },\n        [`${itemCls}-uploading`]: {\n          borderStyle: 'dashed',\n          [`${itemCls}-name`]: {\n            marginBottom: uploadProgressOffset\n          }\n        }\n      },\n      [`${listCls}${listCls}-picture-circle ${itemCls}`]: {\n        [`&, &::before, ${itemCls}-thumbnail`]: {\n          borderRadius: '50%'\n        }\n      }\n    }\n  };\n};\nconst genPictureCardStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    fontSizeLG,\n    colorTextLightSolid\n  } = token;\n  const listCls = `${componentCls}-list`;\n  const itemCls = `${listCls}-item`;\n  const uploadPictureCardSize = token.uploadPicCardSize;\n  return {\n    [`\n      ${componentCls}-wrapper${componentCls}-picture-card-wrapper,\n      ${componentCls}-wrapper${componentCls}-picture-circle-wrapper\n    `]: Object.assign(Object.assign({}, clearFix()), {\n      display: 'inline-block',\n      width: '100%',\n      [`${componentCls}${componentCls}-select`]: {\n        width: uploadPictureCardSize,\n        height: uploadPictureCardSize,\n        marginInlineEnd: token.marginXS,\n        marginBottom: token.marginXS,\n        textAlign: 'center',\n        verticalAlign: 'top',\n        backgroundColor: token.colorFillAlter,\n        border: `${token.lineWidth}px dashed ${token.colorBorder}`,\n        borderRadius: token.borderRadiusLG,\n        cursor: 'pointer',\n        transition: `border-color ${token.motionDurationSlow}`,\n        [`> ${componentCls}`]: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          textAlign: 'center'\n        },\n        [`&:not(${componentCls}-disabled):hover`]: {\n          borderColor: token.colorPrimary\n        }\n      },\n      // list\n      [`${listCls}${listCls}-picture-card, ${listCls}${listCls}-picture-circle`]: {\n        [`${listCls}-item-container`]: {\n          display: 'inline-block',\n          width: uploadPictureCardSize,\n          height: uploadPictureCardSize,\n          marginBlock: `0 ${token.marginXS}px`,\n          marginInline: `0 ${token.marginXS}px`,\n          verticalAlign: 'top'\n        },\n        '&::after': {\n          display: 'none'\n        },\n        [itemCls]: {\n          height: '100%',\n          margin: 0,\n          '&::before': {\n            position: 'absolute',\n            zIndex: 1,\n            width: `calc(100% - ${token.paddingXS * 2}px)`,\n            height: `calc(100% - ${token.paddingXS * 2}px)`,\n            backgroundColor: token.colorBgMask,\n            opacity: 0,\n            transition: `all ${token.motionDurationSlow}`,\n            content: '\" \"'\n          }\n        },\n        [`${itemCls}:hover`]: {\n          [`&::before, ${itemCls}-actions`]: {\n            opacity: 1\n          }\n        },\n        [`${itemCls}-actions`]: {\n          position: 'absolute',\n          insetInlineStart: 0,\n          zIndex: 10,\n          width: '100%',\n          whiteSpace: 'nowrap',\n          textAlign: 'center',\n          opacity: 0,\n          transition: `all ${token.motionDurationSlow}`,\n          [`${iconCls}-eye, ${iconCls}-download, ${iconCls}-delete`]: {\n            zIndex: 10,\n            width: fontSizeLG,\n            margin: `0 ${token.marginXXS}px`,\n            fontSize: fontSizeLG,\n            cursor: 'pointer',\n            transition: `all ${token.motionDurationSlow}`,\n            svg: {\n              verticalAlign: 'baseline'\n            }\n          }\n        },\n        [`${itemCls}-actions, ${itemCls}-actions:hover`]: {\n          [`${iconCls}-eye, ${iconCls}-download, ${iconCls}-delete`]: {\n            color: new TinyColor(colorTextLightSolid).setAlpha(0.65).toRgbString(),\n            '&:hover': {\n              color: colorTextLightSolid\n            }\n          }\n        },\n        [`${itemCls}-thumbnail, ${itemCls}-thumbnail img`]: {\n          position: 'static',\n          display: 'block',\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain'\n        },\n        [`${itemCls}-name`]: {\n          display: 'none',\n          textAlign: 'center'\n        },\n        [`${itemCls}-file + ${itemCls}-name`]: {\n          position: 'absolute',\n          bottom: token.margin,\n          display: 'block',\n          width: `calc(100% - ${token.paddingXS * 2}px)`\n        },\n        [`${itemCls}-uploading`]: {\n          [`&${itemCls}`]: {\n            backgroundColor: token.colorFillAlter\n          },\n          [`&::before, ${iconCls}-eye, ${iconCls}-download, ${iconCls}-delete`]: {\n            display: 'none'\n          }\n        },\n        [`${itemCls}-progress`]: {\n          bottom: token.marginXL,\n          width: `calc(100% - ${token.paddingXS * 2}px)`,\n          paddingInlineStart: 0\n        }\n      }\n    }),\n    [`${componentCls}-wrapper${componentCls}-picture-circle-wrapper`]: {\n      [`${componentCls}${componentCls}-select`]: {\n        borderRadius: '50%'\n      }\n    }\n  };\n};\nexport { genPictureStyle, genPictureCardStyle };"]},"metadata":{},"sourceType":"module"}