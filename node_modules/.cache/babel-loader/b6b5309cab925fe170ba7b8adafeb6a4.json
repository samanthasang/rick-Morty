{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport hash from '@emotion/hash';\nimport { ATTR_TOKEN, CSS_IN_JS_INSTANCE, CSS_IN_JS_INSTANCE_ID } from \"../StyleContext\";\nimport useGlobalCache from \"./useGlobalCache\";\nimport { flattenToken, token2key } from \"../util\";\nvar EMPTY_OVERRIDE = {}; // Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\n\nvar hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nvar tokenKeys = new Map();\n\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\n\nfunction removeStyleTags(key) {\n  if (typeof document !== 'undefined') {\n    var styles = document.querySelectorAll(\"style[\".concat(ATTR_TOKEN, \"=\\\"\").concat(key, \"\\\"]\"));\n    styles.forEach(function (style) {\n      if (style[CSS_IN_JS_INSTANCE] === CSS_IN_JS_INSTANCE_ID) {\n        var _style$parentNode;\n\n        (_style$parentNode = style.parentNode) === null || _style$parentNode === void 0 ? void 0 : _style$parentNode.removeChild(style);\n      }\n    });\n  }\n} // Remove will check current keys first\n\n\nfunction cleanTokenStyle(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  var tokenKeyList = Array.from(tokenKeys.keys());\n  var cleanableKeyList = tokenKeyList.filter(function (key) {\n    var count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  });\n\n  if (cleanableKeyList.length < tokenKeyList.length) {\n    cleanableKeyList.forEach(function (key) {\n      removeStyleTags(key);\n      tokenKeys.delete(key);\n    });\n  }\n}\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\n\n\nexport default function useCacheToken(theme, tokens) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _option$salt = option.salt,\n      salt = _option$salt === void 0 ? '' : _option$salt,\n      _option$override = option.override,\n      override = _option$override === void 0 ? EMPTY_OVERRIDE : _option$override,\n      formatToken = option.formatToken; // Basic - We do basic cache here\n\n  var mergedToken = React.useMemo(function () {\n    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(tokens)));\n  }, [tokens]);\n  var tokenStr = React.useMemo(function () {\n    return flattenToken(mergedToken);\n  }, [mergedToken]);\n  var overrideTokenStr = React.useMemo(function () {\n    return flattenToken(override);\n  }, [override]);\n  var cachedToken = useGlobalCache('token', [salt, theme.id, tokenStr, overrideTokenStr], function () {\n    var derivativeToken = theme.getDerivativeToken(mergedToken); // Merge with override\n\n    var mergedDerivativeToken = _objectSpread(_objectSpread({}, derivativeToken), override); // Format if needed\n\n\n    if (formatToken) {\n      mergedDerivativeToken = formatToken(mergedDerivativeToken);\n    } // Optimize for `useStyleRegister` performance\n\n\n    var tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    recordCleanToken(tokenKey);\n    var hashId = \"\".concat(hashPrefix, \"-\").concat(hash(tokenKey));\n    mergedDerivativeToken._hashId = hashId; // Not used\n\n    return [mergedDerivativeToken, hashId];\n  }, function (cache) {\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._tokenKey);\n  });\n  return cachedToken;\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/@ant-design/cssinjs/es/hooks/useCacheToken.js"],"names":["_objectSpread","_toConsumableArray","React","hash","ATTR_TOKEN","CSS_IN_JS_INSTANCE","CSS_IN_JS_INSTANCE_ID","useGlobalCache","flattenToken","token2key","EMPTY_OVERRIDE","hashPrefix","process","env","NODE_ENV","tokenKeys","Map","recordCleanToken","tokenKey","set","get","removeStyleTags","key","document","styles","querySelectorAll","concat","forEach","style","_style$parentNode","parentNode","removeChild","cleanTokenStyle","tokenKeyList","Array","from","keys","cleanableKeyList","filter","count","length","delete","useCacheToken","theme","tokens","option","arguments","undefined","_option$salt","salt","_option$override","override","formatToken","mergedToken","useMemo","Object","assign","apply","tokenStr","overrideTokenStr","cachedToken","id","derivativeToken","getDerivativeToken","mergedDerivativeToken","_tokenKey","hashId","_hashId","cache"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport hash from '@emotion/hash';\nimport { ATTR_TOKEN, CSS_IN_JS_INSTANCE, CSS_IN_JS_INSTANCE_ID } from \"../StyleContext\";\nimport useGlobalCache from \"./useGlobalCache\";\nimport { flattenToken, token2key } from \"../util\";\nvar EMPTY_OVERRIDE = {};\n\n// Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\nvar hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nvar tokenKeys = new Map();\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\nfunction removeStyleTags(key) {\n  if (typeof document !== 'undefined') {\n    var styles = document.querySelectorAll(\"style[\".concat(ATTR_TOKEN, \"=\\\"\").concat(key, \"\\\"]\"));\n    styles.forEach(function (style) {\n      if (style[CSS_IN_JS_INSTANCE] === CSS_IN_JS_INSTANCE_ID) {\n        var _style$parentNode;\n        (_style$parentNode = style.parentNode) === null || _style$parentNode === void 0 ? void 0 : _style$parentNode.removeChild(style);\n      }\n    });\n  }\n}\n\n// Remove will check current keys first\nfunction cleanTokenStyle(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  var tokenKeyList = Array.from(tokenKeys.keys());\n  var cleanableKeyList = tokenKeyList.filter(function (key) {\n    var count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  });\n  if (cleanableKeyList.length < tokenKeyList.length) {\n    cleanableKeyList.forEach(function (key) {\n      removeStyleTags(key);\n      tokenKeys.delete(key);\n    });\n  }\n}\n\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\nexport default function useCacheToken(theme, tokens) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _option$salt = option.salt,\n    salt = _option$salt === void 0 ? '' : _option$salt,\n    _option$override = option.override,\n    override = _option$override === void 0 ? EMPTY_OVERRIDE : _option$override,\n    formatToken = option.formatToken;\n\n  // Basic - We do basic cache here\n  var mergedToken = React.useMemo(function () {\n    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(tokens)));\n  }, [tokens]);\n  var tokenStr = React.useMemo(function () {\n    return flattenToken(mergedToken);\n  }, [mergedToken]);\n  var overrideTokenStr = React.useMemo(function () {\n    return flattenToken(override);\n  }, [override]);\n  var cachedToken = useGlobalCache('token', [salt, theme.id, tokenStr, overrideTokenStr], function () {\n    var derivativeToken = theme.getDerivativeToken(mergedToken);\n\n    // Merge with override\n    var mergedDerivativeToken = _objectSpread(_objectSpread({}, derivativeToken), override);\n\n    // Format if needed\n    if (formatToken) {\n      mergedDerivativeToken = formatToken(mergedDerivativeToken);\n    }\n\n    // Optimize for `useStyleRegister` performance\n    var tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    recordCleanToken(tokenKey);\n    var hashId = \"\".concat(hashPrefix, \"-\").concat(hash(tokenKey));\n    mergedDerivativeToken._hashId = hashId; // Not used\n\n    return [mergedDerivativeToken, hashId];\n  }, function (cache) {\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._tokenKey);\n  });\n  return cachedToken;\n}"]},"metadata":{},"sourceType":"module"}