{"ast":null,"code":"import { SHOW_CHILD } from \"./commonUtil\";\nexport function formatStrategyValues(pathKeys, getKeyPathEntities, showCheckedStrategy) {\n  var valueSet = new Set(pathKeys);\n  var keyPathEntities = getKeyPathEntities();\n  return pathKeys.filter(function (key) {\n    var entity = keyPathEntities[key];\n    var parent = entity ? entity.parent : null;\n    var children = entity ? entity.children : null;\n    return showCheckedStrategy === SHOW_CHILD ? !(children && children.some(function (child) {\n      return child.key && valueSet.has(child.key);\n    })) : !(parent && !parent.node.disabled && valueSet.has(parent.key));\n  });\n}\nexport function toPathOptions(valueCells, options, fieldNames) {\n  var stringMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var currentList = options;\n  var valueOptions = [];\n\n  var _loop = function _loop() {\n    var _currentList, _currentList2, _foundOption$fieldNam;\n\n    var valueCell = valueCells[i];\n    var foundIndex = (_currentList = currentList) === null || _currentList === void 0 ? void 0 : _currentList.findIndex(function (option) {\n      var val = option[fieldNames.value];\n      return stringMode ? String(val) === String(valueCell) : val === valueCell;\n    });\n    var foundOption = foundIndex !== -1 ? (_currentList2 = currentList) === null || _currentList2 === void 0 ? void 0 : _currentList2[foundIndex] : null;\n    valueOptions.push({\n      value: (_foundOption$fieldNam = foundOption === null || foundOption === void 0 ? void 0 : foundOption[fieldNames.value]) !== null && _foundOption$fieldNam !== void 0 ? _foundOption$fieldNam : valueCell,\n      index: foundIndex,\n      option: foundOption\n    });\n    currentList = foundOption === null || foundOption === void 0 ? void 0 : foundOption[fieldNames.children];\n  };\n\n  for (var i = 0; i < valueCells.length; i += 1) {\n    _loop();\n  }\n\n  return valueOptions;\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-cascader/es/utils/treeUtil.js"],"names":["SHOW_CHILD","formatStrategyValues","pathKeys","getKeyPathEntities","showCheckedStrategy","valueSet","Set","keyPathEntities","filter","key","entity","parent","children","some","child","has","node","disabled","toPathOptions","valueCells","options","fieldNames","stringMode","arguments","length","undefined","currentList","valueOptions","_loop","_currentList","_currentList2","_foundOption$fieldNam","valueCell","i","foundIndex","findIndex","option","val","value","String","foundOption","push","index"],"mappings":"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","sourcesContent":["import { SHOW_CHILD } from \"./commonUtil\";\nexport function formatStrategyValues(pathKeys, getKeyPathEntities, showCheckedStrategy) {\n  var valueSet = new Set(pathKeys);\n  var keyPathEntities = getKeyPathEntities();\n  return pathKeys.filter(function (key) {\n    var entity = keyPathEntities[key];\n    var parent = entity ? entity.parent : null;\n    var children = entity ? entity.children : null;\n    return showCheckedStrategy === SHOW_CHILD ? !(children && children.some(function (child) {\n      return child.key && valueSet.has(child.key);\n    })) : !(parent && !parent.node.disabled && valueSet.has(parent.key));\n  });\n}\nexport function toPathOptions(valueCells, options, fieldNames) {\n  var stringMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var currentList = options;\n  var valueOptions = [];\n  var _loop = function _loop() {\n    var _currentList, _currentList2, _foundOption$fieldNam;\n    var valueCell = valueCells[i];\n    var foundIndex = (_currentList = currentList) === null || _currentList === void 0 ? void 0 : _currentList.findIndex(function (option) {\n      var val = option[fieldNames.value];\n      return stringMode ? String(val) === String(valueCell) : val === valueCell;\n    });\n    var foundOption = foundIndex !== -1 ? (_currentList2 = currentList) === null || _currentList2 === void 0 ? void 0 : _currentList2[foundIndex] : null;\n    valueOptions.push({\n      value: (_foundOption$fieldNam = foundOption === null || foundOption === void 0 ? void 0 : foundOption[fieldNames.value]) !== null && _foundOption$fieldNam !== void 0 ? _foundOption$fieldNam : valueCell,\n      index: foundIndex,\n      option: foundOption\n    });\n    currentList = foundOption === null || foundOption === void 0 ? void 0 : foundOption[fieldNames.children];\n  };\n  for (var i = 0; i < valueCells.length; i += 1) {\n    _loop();\n  }\n  return valueOptions;\n}"]},"metadata":{},"sourceType":"module"}