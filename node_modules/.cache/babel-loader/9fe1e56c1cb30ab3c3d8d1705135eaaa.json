{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Cell from \"../Cell\";\nimport TableContext from \"../context/TableContext\";\nimport { useContext } from '@rc-component/context';\nimport { getCellFixedInfo } from \"../utils/fixUtil\";\nimport { getColumnsKey } from \"../utils/valueUtil\";\n\nfunction HeaderRow(_ref) {\n  var cells = _ref.cells,\n      stickyOffsets = _ref.stickyOffsets,\n      flattenColumns = _ref.flattenColumns,\n      RowComponent = _ref.rowComponent,\n      CellComponent = _ref.cellComponent,\n      tdCellComponent = _ref.tdCellComponent,\n      onHeaderRow = _ref.onHeaderRow,\n      index = _ref.index;\n\n  var _useContext = useContext(TableContext, ['prefixCls', 'direction']),\n      prefixCls = _useContext.prefixCls,\n      direction = _useContext.direction;\n\n  var rowProps;\n\n  if (onHeaderRow) {\n    rowProps = onHeaderRow(cells.map(function (cell) {\n      return cell.column;\n    }), index);\n  }\n\n  var columnsKey = getColumnsKey(cells.map(function (cell) {\n    return cell.column;\n  }));\n  return /*#__PURE__*/React.createElement(RowComponent, rowProps, cells.map(function (cell, cellIndex) {\n    var column = cell.column;\n    var fixedInfo = getCellFixedInfo(cell.colStart, cell.colEnd, flattenColumns, stickyOffsets, direction, column);\n    var additionalProps;\n\n    if (column && column.onHeaderCell) {\n      additionalProps = cell.column.onHeaderCell(column);\n    }\n\n    return /*#__PURE__*/React.createElement(Cell, _extends({}, cell, {\n      scope: column.title ? cell.colSpan > 1 ? 'colgroup' : 'col' : null,\n      ellipsis: column.ellipsis,\n      align: column.align,\n      component: column.title ? CellComponent : tdCellComponent,\n      prefixCls: prefixCls,\n      key: columnsKey[cellIndex]\n    }, fixedInfo, {\n      additionalProps: additionalProps,\n      rowType: \"header\"\n    }));\n  }));\n}\n\nHeaderRow.displayName = 'HeaderRow';\nexport default HeaderRow;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-table/es/Header/HeaderRow.js"],"names":["_extends","React","Cell","TableContext","useContext","getCellFixedInfo","getColumnsKey","HeaderRow","_ref","cells","stickyOffsets","flattenColumns","RowComponent","rowComponent","CellComponent","cellComponent","tdCellComponent","onHeaderRow","index","_useContext","prefixCls","direction","rowProps","map","cell","column","columnsKey","createElement","cellIndex","fixedInfo","colStart","colEnd","additionalProps","onHeaderCell","scope","title","colSpan","ellipsis","align","component","key","rowType","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Cell from \"../Cell\";\nimport TableContext from \"../context/TableContext\";\nimport { useContext } from '@rc-component/context';\nimport { getCellFixedInfo } from \"../utils/fixUtil\";\nimport { getColumnsKey } from \"../utils/valueUtil\";\nfunction HeaderRow(_ref) {\n  var cells = _ref.cells,\n    stickyOffsets = _ref.stickyOffsets,\n    flattenColumns = _ref.flattenColumns,\n    RowComponent = _ref.rowComponent,\n    CellComponent = _ref.cellComponent,\n    tdCellComponent = _ref.tdCellComponent,\n    onHeaderRow = _ref.onHeaderRow,\n    index = _ref.index;\n  var _useContext = useContext(TableContext, ['prefixCls', 'direction']),\n    prefixCls = _useContext.prefixCls,\n    direction = _useContext.direction;\n  var rowProps;\n  if (onHeaderRow) {\n    rowProps = onHeaderRow(cells.map(function (cell) {\n      return cell.column;\n    }), index);\n  }\n  var columnsKey = getColumnsKey(cells.map(function (cell) {\n    return cell.column;\n  }));\n  return /*#__PURE__*/React.createElement(RowComponent, rowProps, cells.map(function (cell, cellIndex) {\n    var column = cell.column;\n    var fixedInfo = getCellFixedInfo(cell.colStart, cell.colEnd, flattenColumns, stickyOffsets, direction, column);\n    var additionalProps;\n    if (column && column.onHeaderCell) {\n      additionalProps = cell.column.onHeaderCell(column);\n    }\n    return /*#__PURE__*/React.createElement(Cell, _extends({}, cell, {\n      scope: column.title ? cell.colSpan > 1 ? 'colgroup' : 'col' : null,\n      ellipsis: column.ellipsis,\n      align: column.align,\n      component: column.title ? CellComponent : tdCellComponent,\n      prefixCls: prefixCls,\n      key: columnsKey[cellIndex]\n    }, fixedInfo, {\n      additionalProps: additionalProps,\n      rowType: \"header\"\n    }));\n  }));\n}\nHeaderRow.displayName = 'HeaderRow';\nexport default HeaderRow;"]},"metadata":{},"sourceType":"module"}