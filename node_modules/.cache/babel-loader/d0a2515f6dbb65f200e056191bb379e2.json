{"ast":null,"code":"import { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genNotificationPlacementStyle from './placement';\nimport { resetComponent } from '../../style';\n\nconst genNotificationStyle = token => {\n  const {\n    iconCls,\n    componentCls,\n    // .ant-notification\n    boxShadow,\n    fontSizeLG,\n    notificationMarginBottom,\n    borderRadiusLG,\n    colorSuccess,\n    colorInfo,\n    colorWarning,\n    colorError,\n    colorTextHeading,\n    notificationBg,\n    notificationPadding,\n    notificationMarginEdge,\n    motionDurationMid,\n    motionEaseInOut,\n    fontSize,\n    lineHeight,\n    width,\n    notificationIconSize\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  const notificationFadeIn = new Keyframes('antNotificationFadeIn', {\n    '0%': {\n      left: {\n        _skip_check_: true,\n        value: width\n      },\n      opacity: 0\n    },\n    '100%': {\n      left: {\n        _skip_check_: true,\n        value: 0\n      },\n      opacity: 1\n    }\n  });\n  const notificationFadeOut = new Keyframes('antNotificationFadeOut', {\n    '0%': {\n      maxHeight: token.animationMaxHeight,\n      marginBottom: notificationMarginBottom,\n      opacity: 1\n    },\n    '100%': {\n      maxHeight: 0,\n      marginBottom: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      opacity: 0\n    }\n  });\n  return [// ============================ Holder ============================\n  {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'fixed',\n      zIndex: token.zIndexPopup,\n      marginInlineEnd: notificationMarginEdge,\n      [`${componentCls}-hook-holder`]: {\n        position: 'relative'\n      },\n      [`&${componentCls}-top, &${componentCls}-bottom`]: {\n        [`${componentCls}-notice`]: {\n          marginInline: 'auto auto'\n        }\n      },\n      [`&${componentCls}-topLeft, &${componentCls}-bottomLeft`]: {\n        [`${componentCls}-notice`]: {\n          marginInlineEnd: 'auto',\n          marginInlineStart: 0\n        }\n      },\n      //  animation\n      [`${componentCls}-fade-enter, ${componentCls}-fade-appear`]: {\n        animationDuration: token.motionDurationMid,\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        opacity: 0,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-leave`]: {\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        animationDuration: motionDurationMid,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n        animationName: notificationFadeIn,\n        animationPlayState: 'running'\n      },\n      [`${componentCls}-fade-leave${componentCls}-fade-leave-active`]: {\n        animationName: notificationFadeOut,\n        animationPlayState: 'running'\n      }\n    }), genNotificationPlacementStyle(token)), {\n      // RTL\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-notice-btn`]: {\n          float: 'left'\n        }\n      }\n    })\n  }, // ============================ Notice ============================\n  {\n    [noticeCls]: {\n      position: 'relative',\n      width,\n      maxWidth: `calc(100vw - ${notificationMarginEdge * 2}px)`,\n      marginBottom: notificationMarginBottom,\n      marginInlineStart: 'auto',\n      padding: notificationPadding,\n      overflow: 'hidden',\n      lineHeight,\n      wordWrap: 'break-word',\n      background: notificationBg,\n      borderRadius: borderRadiusLG,\n      boxShadow,\n      [`${componentCls}-close-icon`]: {\n        fontSize,\n        cursor: 'pointer'\n      },\n      [`${noticeCls}-message`]: {\n        marginBottom: token.marginXS,\n        color: colorTextHeading,\n        fontSize: fontSizeLG,\n        lineHeight: token.lineHeightLG\n      },\n      [`${noticeCls}-description`]: {\n        fontSize\n      },\n      [`&${noticeCls}-closable ${noticeCls}-message`]: {\n        paddingInlineEnd: token.paddingLG\n      },\n      [`${noticeCls}-with-icon ${noticeCls}-message`]: {\n        marginBottom: token.marginXS,\n        marginInlineStart: token.marginSM + notificationIconSize,\n        fontSize: fontSizeLG\n      },\n      [`${noticeCls}-with-icon ${noticeCls}-description`]: {\n        marginInlineStart: token.marginSM + notificationIconSize,\n        fontSize\n      },\n      // Icon & color style in different selector level\n      // https://github.com/ant-design/ant-design/issues/16503\n      // https://github.com/ant-design/ant-design/issues/15512\n      [`${noticeCls}-icon`]: {\n        position: 'absolute',\n        fontSize: notificationIconSize,\n        lineHeight: 0,\n        // icon-font\n        [`&-success${iconCls}`]: {\n          color: colorSuccess\n        },\n        [`&-info${iconCls}`]: {\n          color: colorInfo\n        },\n        [`&-warning${iconCls}`]: {\n          color: colorWarning\n        },\n        [`&-error${iconCls}`]: {\n          color: colorError\n        }\n      },\n      [`${noticeCls}-close`]: {\n        position: 'absolute',\n        top: token.notificationPaddingVertical,\n        insetInlineEnd: token.notificationPaddingHorizontal,\n        color: token.colorIcon,\n        outline: 'none',\n        width: token.notificationCloseButtonSize,\n        height: token.notificationCloseButtonSize,\n        borderRadius: token.borderRadiusSM,\n        transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '&:hover': {\n          color: token.colorIconHover,\n          backgroundColor: token.wireframe ? 'transparent' : token.colorFillContent\n        }\n      },\n      [`${noticeCls}-btn`]: {\n        float: 'right',\n        marginTop: token.marginSM\n      }\n    }\n  }, // ============================= Pure =============================\n  {\n    [`${noticeCls}-pure-panel`]: {\n      margin: 0\n    }\n  }];\n}; // ============================== Export ==============================\n\n\nexport default genComponentStyleHook('Notification', token => {\n  const notificationPaddingVertical = token.paddingMD;\n  const notificationPaddingHorizontal = token.paddingLG;\n  const notificationToken = mergeToken(token, {\n    // default.less variables\n    notificationBg: token.colorBgElevated,\n    notificationPaddingVertical,\n    notificationPaddingHorizontal,\n    // index.less variables\n    notificationPadding: `${token.paddingMD}px ${token.paddingContentHorizontalLG}px`,\n    notificationMarginBottom: token.margin,\n    notificationMarginEdge: token.marginLG,\n    animationMaxHeight: 150,\n    notificationIconSize: token.fontSizeLG * token.lineHeightLG,\n    notificationCloseButtonSize: token.controlHeightLG * 0.55\n  });\n  return [genNotificationStyle(notificationToken)];\n}, token => ({\n  zIndexPopup: token.zIndexPopupBase + 50,\n  width: 384\n}));","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/notification/style/index.js"],"names":["Keyframes","genComponentStyleHook","mergeToken","genNotificationPlacementStyle","resetComponent","genNotificationStyle","token","iconCls","componentCls","boxShadow","fontSizeLG","notificationMarginBottom","borderRadiusLG","colorSuccess","colorInfo","colorWarning","colorError","colorTextHeading","notificationBg","notificationPadding","notificationMarginEdge","motionDurationMid","motionEaseInOut","fontSize","lineHeight","width","notificationIconSize","noticeCls","notificationFadeIn","left","_skip_check_","value","opacity","notificationFadeOut","maxHeight","animationMaxHeight","marginBottom","paddingTop","paddingBottom","Object","assign","position","zIndex","zIndexPopup","marginInlineEnd","marginInline","marginInlineStart","animationDuration","animationTimingFunction","animationFillMode","animationPlayState","animationName","direction","float","maxWidth","padding","overflow","wordWrap","background","borderRadius","cursor","marginXS","color","lineHeightLG","paddingInlineEnd","paddingLG","marginSM","top","notificationPaddingVertical","insetInlineEnd","notificationPaddingHorizontal","colorIcon","outline","notificationCloseButtonSize","height","borderRadiusSM","transition","display","alignItems","justifyContent","colorIconHover","backgroundColor","wireframe","colorFillContent","marginTop","margin","paddingMD","notificationToken","colorBgElevated","paddingContentHorizontalLG","marginLG","controlHeightLG","zIndexPopupBase"],"mappings":"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","sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genNotificationPlacementStyle from './placement';\nimport { resetComponent } from '../../style';\nconst genNotificationStyle = token => {\n  const {\n    iconCls,\n    componentCls,\n    // .ant-notification\n    boxShadow,\n    fontSizeLG,\n    notificationMarginBottom,\n    borderRadiusLG,\n    colorSuccess,\n    colorInfo,\n    colorWarning,\n    colorError,\n    colorTextHeading,\n    notificationBg,\n    notificationPadding,\n    notificationMarginEdge,\n    motionDurationMid,\n    motionEaseInOut,\n    fontSize,\n    lineHeight,\n    width,\n    notificationIconSize\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  const notificationFadeIn = new Keyframes('antNotificationFadeIn', {\n    '0%': {\n      left: {\n        _skip_check_: true,\n        value: width\n      },\n      opacity: 0\n    },\n    '100%': {\n      left: {\n        _skip_check_: true,\n        value: 0\n      },\n      opacity: 1\n    }\n  });\n  const notificationFadeOut = new Keyframes('antNotificationFadeOut', {\n    '0%': {\n      maxHeight: token.animationMaxHeight,\n      marginBottom: notificationMarginBottom,\n      opacity: 1\n    },\n    '100%': {\n      maxHeight: 0,\n      marginBottom: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      opacity: 0\n    }\n  });\n  return [\n  // ============================ Holder ============================\n  {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'fixed',\n      zIndex: token.zIndexPopup,\n      marginInlineEnd: notificationMarginEdge,\n      [`${componentCls}-hook-holder`]: {\n        position: 'relative'\n      },\n      [`&${componentCls}-top, &${componentCls}-bottom`]: {\n        [`${componentCls}-notice`]: {\n          marginInline: 'auto auto'\n        }\n      },\n      [`&${componentCls}-topLeft, &${componentCls}-bottomLeft`]: {\n        [`${componentCls}-notice`]: {\n          marginInlineEnd: 'auto',\n          marginInlineStart: 0\n        }\n      },\n      //  animation\n      [`${componentCls}-fade-enter, ${componentCls}-fade-appear`]: {\n        animationDuration: token.motionDurationMid,\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        opacity: 0,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-leave`]: {\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        animationDuration: motionDurationMid,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n        animationName: notificationFadeIn,\n        animationPlayState: 'running'\n      },\n      [`${componentCls}-fade-leave${componentCls}-fade-leave-active`]: {\n        animationName: notificationFadeOut,\n        animationPlayState: 'running'\n      }\n    }), genNotificationPlacementStyle(token)), {\n      // RTL\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-notice-btn`]: {\n          float: 'left'\n        }\n      }\n    })\n  },\n  // ============================ Notice ============================\n  {\n    [noticeCls]: {\n      position: 'relative',\n      width,\n      maxWidth: `calc(100vw - ${notificationMarginEdge * 2}px)`,\n      marginBottom: notificationMarginBottom,\n      marginInlineStart: 'auto',\n      padding: notificationPadding,\n      overflow: 'hidden',\n      lineHeight,\n      wordWrap: 'break-word',\n      background: notificationBg,\n      borderRadius: borderRadiusLG,\n      boxShadow,\n      [`${componentCls}-close-icon`]: {\n        fontSize,\n        cursor: 'pointer'\n      },\n      [`${noticeCls}-message`]: {\n        marginBottom: token.marginXS,\n        color: colorTextHeading,\n        fontSize: fontSizeLG,\n        lineHeight: token.lineHeightLG\n      },\n      [`${noticeCls}-description`]: {\n        fontSize\n      },\n      [`&${noticeCls}-closable ${noticeCls}-message`]: {\n        paddingInlineEnd: token.paddingLG\n      },\n      [`${noticeCls}-with-icon ${noticeCls}-message`]: {\n        marginBottom: token.marginXS,\n        marginInlineStart: token.marginSM + notificationIconSize,\n        fontSize: fontSizeLG\n      },\n      [`${noticeCls}-with-icon ${noticeCls}-description`]: {\n        marginInlineStart: token.marginSM + notificationIconSize,\n        fontSize\n      },\n      // Icon & color style in different selector level\n      // https://github.com/ant-design/ant-design/issues/16503\n      // https://github.com/ant-design/ant-design/issues/15512\n      [`${noticeCls}-icon`]: {\n        position: 'absolute',\n        fontSize: notificationIconSize,\n        lineHeight: 0,\n        // icon-font\n        [`&-success${iconCls}`]: {\n          color: colorSuccess\n        },\n        [`&-info${iconCls}`]: {\n          color: colorInfo\n        },\n        [`&-warning${iconCls}`]: {\n          color: colorWarning\n        },\n        [`&-error${iconCls}`]: {\n          color: colorError\n        }\n      },\n      [`${noticeCls}-close`]: {\n        position: 'absolute',\n        top: token.notificationPaddingVertical,\n        insetInlineEnd: token.notificationPaddingHorizontal,\n        color: token.colorIcon,\n        outline: 'none',\n        width: token.notificationCloseButtonSize,\n        height: token.notificationCloseButtonSize,\n        borderRadius: token.borderRadiusSM,\n        transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '&:hover': {\n          color: token.colorIconHover,\n          backgroundColor: token.wireframe ? 'transparent' : token.colorFillContent\n        }\n      },\n      [`${noticeCls}-btn`]: {\n        float: 'right',\n        marginTop: token.marginSM\n      }\n    }\n  },\n  // ============================= Pure =============================\n  {\n    [`${noticeCls}-pure-panel`]: {\n      margin: 0\n    }\n  }];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Notification', token => {\n  const notificationPaddingVertical = token.paddingMD;\n  const notificationPaddingHorizontal = token.paddingLG;\n  const notificationToken = mergeToken(token, {\n    // default.less variables\n    notificationBg: token.colorBgElevated,\n    notificationPaddingVertical,\n    notificationPaddingHorizontal,\n    // index.less variables\n    notificationPadding: `${token.paddingMD}px ${token.paddingContentHorizontalLG}px`,\n    notificationMarginBottom: token.margin,\n    notificationMarginEdge: token.marginLG,\n    animationMaxHeight: 150,\n    notificationIconSize: token.fontSizeLG * token.lineHeightLG,\n    notificationCloseButtonSize: token.controlHeightLG * 0.55\n  });\n  return [genNotificationStyle(notificationToken)];\n}, token => ({\n  zIndexPopup: token.zIndexPopupBase + 50,\n  width: 384\n}));"]},"metadata":{},"sourceType":"module"}