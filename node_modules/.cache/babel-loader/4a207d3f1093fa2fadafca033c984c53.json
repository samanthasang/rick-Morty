{"ast":null,"code":"import _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { FormItemInputContext } from '../form/context';\nimport { Button, Group } from '../radio';\nimport Select from '../select';\nvar YearSelectOffset = 10;\nvar YearSelectTotal = 20;\n\nfunction YearSelect(props) {\n  var fullscreen = props.fullscreen,\n      validRange = props.validRange,\n      generateConfig = props.generateConfig,\n      locale = props.locale,\n      prefixCls = props.prefixCls,\n      value = props.value,\n      _onChange = props.onChange,\n      divRef = props.divRef;\n  var year = generateConfig.getYear(value || generateConfig.getNow());\n  var start = year - YearSelectOffset;\n  var end = start + YearSelectTotal;\n\n  if (validRange) {\n    start = generateConfig.getYear(validRange[0]);\n    end = generateConfig.getYear(validRange[1]) + 1;\n  }\n\n  var suffix = locale && locale.year === '年' ? '年' : '';\n  var options = [];\n\n  for (var index = start; index < end; index++) {\n    options.push({\n      label: \"\".concat(index).concat(suffix),\n      value: index\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Select, {\n    size: fullscreen ? undefined : 'small',\n    options: options,\n    value: year,\n    className: \"\".concat(prefixCls, \"-year-select\"),\n    onChange: function onChange(numYear) {\n      var newDate = generateConfig.setYear(value, numYear);\n\n      if (validRange) {\n        var _validRange = _slicedToArray(validRange, 2),\n            startDate = _validRange[0],\n            endDate = _validRange[1];\n\n        var newYear = generateConfig.getYear(newDate);\n        var newMonth = generateConfig.getMonth(newDate);\n\n        if (newYear === generateConfig.getYear(endDate) && newMonth > generateConfig.getMonth(endDate)) {\n          newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(endDate));\n        }\n\n        if (newYear === generateConfig.getYear(startDate) && newMonth < generateConfig.getMonth(startDate)) {\n          newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(startDate));\n        }\n      }\n\n      _onChange(newDate);\n    },\n    getPopupContainer: function getPopupContainer() {\n      return divRef.current;\n    }\n  });\n}\n\nfunction MonthSelect(props) {\n  var prefixCls = props.prefixCls,\n      fullscreen = props.fullscreen,\n      validRange = props.validRange,\n      value = props.value,\n      generateConfig = props.generateConfig,\n      locale = props.locale,\n      _onChange2 = props.onChange,\n      divRef = props.divRef;\n  var month = generateConfig.getMonth(value || generateConfig.getNow());\n  var start = 0;\n  var end = 11;\n\n  if (validRange) {\n    var _validRange2 = _slicedToArray(validRange, 2),\n        rangeStart = _validRange2[0],\n        rangeEnd = _validRange2[1];\n\n    var currentYear = generateConfig.getYear(value);\n\n    if (generateConfig.getYear(rangeEnd) === currentYear) {\n      end = generateConfig.getMonth(rangeEnd);\n    }\n\n    if (generateConfig.getYear(rangeStart) === currentYear) {\n      start = generateConfig.getMonth(rangeStart);\n    }\n  }\n\n  var months = locale.shortMonths || generateConfig.locale.getShortMonths(locale.locale);\n  var options = [];\n\n  for (var index = start; index <= end; index += 1) {\n    options.push({\n      label: months[index],\n      value: index\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Select, {\n    size: fullscreen ? undefined : 'small',\n    className: \"\".concat(prefixCls, \"-month-select\"),\n    value: month,\n    options: options,\n    onChange: function onChange(newMonth) {\n      _onChange2(generateConfig.setMonth(value, newMonth));\n    },\n    getPopupContainer: function getPopupContainer() {\n      return divRef.current;\n    }\n  });\n}\n\nfunction ModeSwitch(props) {\n  var prefixCls = props.prefixCls,\n      locale = props.locale,\n      mode = props.mode,\n      fullscreen = props.fullscreen,\n      onModeChange = props.onModeChange;\n  return /*#__PURE__*/React.createElement(Group, {\n    onChange: function onChange(_ref) {\n      var value = _ref.target.value;\n      onModeChange(value);\n    },\n    value: mode,\n    size: fullscreen ? undefined : 'small',\n    className: \"\".concat(prefixCls, \"-mode-switch\")\n  }, /*#__PURE__*/React.createElement(Button, {\n    value: \"month\"\n  }, locale.month), /*#__PURE__*/React.createElement(Button, {\n    value: \"year\"\n  }, locale.year));\n}\n\nfunction CalendarHeader(props) {\n  var prefixCls = props.prefixCls,\n      fullscreen = props.fullscreen,\n      mode = props.mode,\n      onChange = props.onChange,\n      onModeChange = props.onModeChange;\n  var divRef = React.useRef(null);\n  var formItemInputContext = useContext(FormItemInputContext);\n  var mergedFormItemInputContext = useMemo(function () {\n    return Object.assign(Object.assign({}, formItemInputContext), {\n      isFormItemInput: false\n    });\n  }, [formItemInputContext]);\n  var sharedProps = Object.assign(Object.assign({}, props), {\n    onChange: onChange,\n    fullscreen: fullscreen,\n    divRef: divRef\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-header\"),\n    ref: divRef\n  }, /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: mergedFormItemInputContext\n  }, /*#__PURE__*/React.createElement(YearSelect, Object.assign({}, sharedProps)), mode === 'month' && /*#__PURE__*/React.createElement(MonthSelect, Object.assign({}, sharedProps))), /*#__PURE__*/React.createElement(ModeSwitch, Object.assign({}, sharedProps, {\n    onModeChange: onModeChange\n  })));\n}\n\nexport default CalendarHeader;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/calendar/Header.js"],"names":["React","useContext","useMemo","FormItemInputContext","Button","Group","Select","YearSelectOffset","YearSelectTotal","YearSelect","props","fullscreen","validRange","generateConfig","locale","prefixCls","value","onChange","divRef","year","getYear","getNow","start","end","suffix","options","index","push","label","createElement","size","undefined","className","numYear","newDate","setYear","startDate","endDate","newYear","newMonth","getMonth","setMonth","getPopupContainer","current","MonthSelect","month","rangeStart","rangeEnd","currentYear","months","shortMonths","getShortMonths","ModeSwitch","mode","onModeChange","_ref","target","CalendarHeader","useRef","formItemInputContext","mergedFormItemInputContext","Object","assign","isFormItemInput","sharedProps","ref","Provider"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { FormItemInputContext } from '../form/context';\nimport { Button, Group } from '../radio';\nimport Select from '../select';\nconst YearSelectOffset = 10;\nconst YearSelectTotal = 20;\nfunction YearSelect(props) {\n  const {\n    fullscreen,\n    validRange,\n    generateConfig,\n    locale,\n    prefixCls,\n    value,\n    onChange,\n    divRef\n  } = props;\n  const year = generateConfig.getYear(value || generateConfig.getNow());\n  let start = year - YearSelectOffset;\n  let end = start + YearSelectTotal;\n  if (validRange) {\n    start = generateConfig.getYear(validRange[0]);\n    end = generateConfig.getYear(validRange[1]) + 1;\n  }\n  const suffix = locale && locale.year === '年' ? '年' : '';\n  const options = [];\n  for (let index = start; index < end; index++) {\n    options.push({\n      label: `${index}${suffix}`,\n      value: index\n    });\n  }\n  return /*#__PURE__*/React.createElement(Select, {\n    size: fullscreen ? undefined : 'small',\n    options: options,\n    value: year,\n    className: `${prefixCls}-year-select`,\n    onChange: numYear => {\n      let newDate = generateConfig.setYear(value, numYear);\n      if (validRange) {\n        const [startDate, endDate] = validRange;\n        const newYear = generateConfig.getYear(newDate);\n        const newMonth = generateConfig.getMonth(newDate);\n        if (newYear === generateConfig.getYear(endDate) && newMonth > generateConfig.getMonth(endDate)) {\n          newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(endDate));\n        }\n        if (newYear === generateConfig.getYear(startDate) && newMonth < generateConfig.getMonth(startDate)) {\n          newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(startDate));\n        }\n      }\n      onChange(newDate);\n    },\n    getPopupContainer: () => divRef.current\n  });\n}\nfunction MonthSelect(props) {\n  const {\n    prefixCls,\n    fullscreen,\n    validRange,\n    value,\n    generateConfig,\n    locale,\n    onChange,\n    divRef\n  } = props;\n  const month = generateConfig.getMonth(value || generateConfig.getNow());\n  let start = 0;\n  let end = 11;\n  if (validRange) {\n    const [rangeStart, rangeEnd] = validRange;\n    const currentYear = generateConfig.getYear(value);\n    if (generateConfig.getYear(rangeEnd) === currentYear) {\n      end = generateConfig.getMonth(rangeEnd);\n    }\n    if (generateConfig.getYear(rangeStart) === currentYear) {\n      start = generateConfig.getMonth(rangeStart);\n    }\n  }\n  const months = locale.shortMonths || generateConfig.locale.getShortMonths(locale.locale);\n  const options = [];\n  for (let index = start; index <= end; index += 1) {\n    options.push({\n      label: months[index],\n      value: index\n    });\n  }\n  return /*#__PURE__*/React.createElement(Select, {\n    size: fullscreen ? undefined : 'small',\n    className: `${prefixCls}-month-select`,\n    value: month,\n    options: options,\n    onChange: newMonth => {\n      onChange(generateConfig.setMonth(value, newMonth));\n    },\n    getPopupContainer: () => divRef.current\n  });\n}\nfunction ModeSwitch(props) {\n  const {\n    prefixCls,\n    locale,\n    mode,\n    fullscreen,\n    onModeChange\n  } = props;\n  return /*#__PURE__*/React.createElement(Group, {\n    onChange: _ref => {\n      let {\n        target: {\n          value\n        }\n      } = _ref;\n      onModeChange(value);\n    },\n    value: mode,\n    size: fullscreen ? undefined : 'small',\n    className: `${prefixCls}-mode-switch`\n  }, /*#__PURE__*/React.createElement(Button, {\n    value: \"month\"\n  }, locale.month), /*#__PURE__*/React.createElement(Button, {\n    value: \"year\"\n  }, locale.year));\n}\nfunction CalendarHeader(props) {\n  const {\n    prefixCls,\n    fullscreen,\n    mode,\n    onChange,\n    onModeChange\n  } = props;\n  const divRef = React.useRef(null);\n  const formItemInputContext = useContext(FormItemInputContext);\n  const mergedFormItemInputContext = useMemo(() => Object.assign(Object.assign({}, formItemInputContext), {\n    isFormItemInput: false\n  }), [formItemInputContext]);\n  const sharedProps = Object.assign(Object.assign({}, props), {\n    onChange,\n    fullscreen,\n    divRef\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-header`,\n    ref: divRef\n  }, /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: mergedFormItemInputContext\n  }, /*#__PURE__*/React.createElement(YearSelect, Object.assign({}, sharedProps)), mode === 'month' && /*#__PURE__*/React.createElement(MonthSelect, Object.assign({}, sharedProps))), /*#__PURE__*/React.createElement(ModeSwitch, Object.assign({}, sharedProps, {\n    onModeChange: onModeChange\n  })));\n}\nexport default CalendarHeader;"]},"metadata":{},"sourceType":"module"}