{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport classNames from 'classnames';\nimport RcSlider from 'rc-slider';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport warning from '../_util/warning';\nimport SliderTooltip from './SliderTooltip';\nimport useStyle from './style';\n\nconst defaultFormatter = val => typeof val === 'number' ? val.toString() : '';\n\nconst Slider = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    range,\n    className,\n    rootClassName,\n    // Deprecated Props\n    tooltipPrefixCls: legacyTooltipPrefixCls,\n    tipFormatter: legacyTipFormatter,\n    tooltipVisible: legacyTooltipVisible,\n    getTooltipPopupContainer: legacyGetTooltipPopupContainer,\n    tooltipPlacement: legacyTooltipPlacement\n  } = props,\n        restProps = __rest(props, [\"prefixCls\", \"range\", \"className\", \"rootClassName\", \"tooltipPrefixCls\", \"tipFormatter\", \"tooltipVisible\", \"getTooltipPopupContainer\", \"tooltipPlacement\"]);\n\n  const {\n    getPrefixCls,\n    direction,\n    getPopupContainer\n  } = React.useContext(ConfigContext);\n  const [opens, setOpens] = React.useState({});\n\n  const toggleTooltipOpen = (index, open) => {\n    setOpens(prev => Object.assign(Object.assign({}, prev), {\n      [index]: open\n    }));\n  };\n\n  const getTooltipPlacement = (placement, vertical) => {\n    if (placement) {\n      return placement;\n    }\n\n    if (!vertical) {\n      return 'top';\n    }\n\n    return direction === 'rtl' ? 'left' : 'right';\n  };\n\n  const prefixCls = getPrefixCls('slider', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(className, rootClassName, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, hashId); // make reverse default on rtl direction\n\n  if (direction === 'rtl' && !restProps.vertical) {\n    restProps.reverse = !restProps.reverse;\n  } // Range config\n\n\n  const [mergedRange, draggableTrack] = React.useMemo(() => {\n    if (!range) {\n      return [false];\n    }\n\n    return typeof range === 'object' ? [true, range.draggableTrack] : [true, false];\n  }, [range]); // Warning for deprecated usage\n\n  if (process.env.NODE_ENV !== 'production') {\n    [['tooltipPrefixCls', 'prefixCls'], ['getTooltipPopupContainer', 'getPopupContainer'], ['tipFormatter', 'formatter'], ['tooltipPlacement', 'placement'], ['tooltipVisible', 'open']].forEach(_ref => {\n      let [deprecatedName, newName] = _ref;\n      process.env.NODE_ENV !== \"production\" ? warning(!(deprecatedName in props), 'Slider', `\\`${deprecatedName}\\` is deprecated, please use \\`tooltip.${newName}\\` instead.`) : void 0;\n    });\n  }\n\n  const handleRender = (node, info) => {\n    var _a;\n\n    const {\n      index,\n      dragging\n    } = info;\n    const {\n      tooltip = {},\n      vertical\n    } = props;\n    const tooltipProps = Object.assign({}, tooltip);\n    const {\n      open: tooltipOpen,\n      placement: tooltipPlacement,\n      getPopupContainer: getTooltipPopupContainer,\n      prefixCls: customizeTooltipPrefixCls,\n      formatter: tipFormatter\n    } = tooltipProps;\n    let mergedTipFormatter;\n\n    if (tipFormatter || tipFormatter === null) {\n      mergedTipFormatter = tipFormatter;\n    } else if (legacyTipFormatter || legacyTipFormatter === null) {\n      mergedTipFormatter = legacyTipFormatter;\n    } else {\n      mergedTipFormatter = defaultFormatter;\n    }\n\n    const isTipFormatter = mergedTipFormatter ? opens[index] || dragging : false;\n    const open = (_a = tooltipOpen !== null && tooltipOpen !== void 0 ? tooltipOpen : legacyTooltipVisible) !== null && _a !== void 0 ? _a : tooltipOpen === undefined && isTipFormatter;\n    const passedProps = Object.assign(Object.assign({}, node.props), {\n      onMouseEnter: () => toggleTooltipOpen(index, true),\n      onMouseLeave: () => toggleTooltipOpen(index, false)\n    });\n    const tooltipPrefixCls = getPrefixCls('tooltip', customizeTooltipPrefixCls !== null && customizeTooltipPrefixCls !== void 0 ? customizeTooltipPrefixCls : legacyTooltipPrefixCls);\n    return /*#__PURE__*/React.createElement(SliderTooltip, {\n      prefixCls: tooltipPrefixCls,\n      title: mergedTipFormatter ? mergedTipFormatter(info.value) : '',\n      open: open,\n      placement: getTooltipPlacement(tooltipPlacement !== null && tooltipPlacement !== void 0 ? tooltipPlacement : legacyTooltipPlacement, vertical),\n      key: index,\n      overlayClassName: `${prefixCls}-tooltip`,\n      getPopupContainer: getTooltipPopupContainer || legacyGetTooltipPopupContainer || getPopupContainer\n    }, /*#__PURE__*/React.cloneElement(node, passedProps));\n  };\n\n  return wrapSSR( /*#__PURE__*/React.createElement(RcSlider, Object.assign({}, restProps, {\n    step: restProps.step,\n    range: mergedRange,\n    draggableTrack: draggableTrack,\n    className: cls,\n    ref: ref,\n    prefixCls: prefixCls,\n    handleRender: handleRender\n  })));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Slider.displayName = 'Slider';\n}\n\nexport default Slider;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/slider/index.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","classNames","RcSlider","React","ConfigContext","warning","SliderTooltip","useStyle","defaultFormatter","val","toString","Slider","forwardRef","props","ref","prefixCls","customizePrefixCls","range","className","rootClassName","tooltipPrefixCls","legacyTooltipPrefixCls","tipFormatter","legacyTipFormatter","tooltipVisible","legacyTooltipVisible","getTooltipPopupContainer","legacyGetTooltipPopupContainer","tooltipPlacement","legacyTooltipPlacement","restProps","getPrefixCls","direction","getPopupContainer","useContext","opens","setOpens","useState","toggleTooltipOpen","index","open","prev","assign","getTooltipPlacement","placement","vertical","wrapSSR","hashId","cls","reverse","mergedRange","draggableTrack","useMemo","process","env","NODE_ENV","forEach","_ref","deprecatedName","newName","handleRender","node","info","_a","dragging","tooltip","tooltipProps","tooltipOpen","customizeTooltipPrefixCls","formatter","mergedTipFormatter","isTipFormatter","undefined","passedProps","onMouseEnter","onMouseLeave","createElement","title","value","key","overlayClassName","cloneElement","step","displayName"],"mappings":"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","sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport RcSlider from 'rc-slider';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport warning from '../_util/warning';\nimport SliderTooltip from './SliderTooltip';\nimport useStyle from './style';\nconst defaultFormatter = val => typeof val === 'number' ? val.toString() : '';\nconst Slider = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      range,\n      className,\n      rootClassName,\n      // Deprecated Props\n      tooltipPrefixCls: legacyTooltipPrefixCls,\n      tipFormatter: legacyTipFormatter,\n      tooltipVisible: legacyTooltipVisible,\n      getTooltipPopupContainer: legacyGetTooltipPopupContainer,\n      tooltipPlacement: legacyTooltipPlacement\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"range\", \"className\", \"rootClassName\", \"tooltipPrefixCls\", \"tipFormatter\", \"tooltipVisible\", \"getTooltipPopupContainer\", \"tooltipPlacement\"]);\n  const {\n    getPrefixCls,\n    direction,\n    getPopupContainer\n  } = React.useContext(ConfigContext);\n  const [opens, setOpens] = React.useState({});\n  const toggleTooltipOpen = (index, open) => {\n    setOpens(prev => Object.assign(Object.assign({}, prev), {\n      [index]: open\n    }));\n  };\n  const getTooltipPlacement = (placement, vertical) => {\n    if (placement) {\n      return placement;\n    }\n    if (!vertical) {\n      return 'top';\n    }\n    return direction === 'rtl' ? 'left' : 'right';\n  };\n  const prefixCls = getPrefixCls('slider', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(className, rootClassName, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, hashId);\n  // make reverse default on rtl direction\n  if (direction === 'rtl' && !restProps.vertical) {\n    restProps.reverse = !restProps.reverse;\n  }\n  // Range config\n  const [mergedRange, draggableTrack] = React.useMemo(() => {\n    if (!range) {\n      return [false];\n    }\n    return typeof range === 'object' ? [true, range.draggableTrack] : [true, false];\n  }, [range]);\n  // Warning for deprecated usage\n  if (process.env.NODE_ENV !== 'production') {\n    [['tooltipPrefixCls', 'prefixCls'], ['getTooltipPopupContainer', 'getPopupContainer'], ['tipFormatter', 'formatter'], ['tooltipPlacement', 'placement'], ['tooltipVisible', 'open']].forEach(_ref => {\n      let [deprecatedName, newName] = _ref;\n      process.env.NODE_ENV !== \"production\" ? warning(!(deprecatedName in props), 'Slider', `\\`${deprecatedName}\\` is deprecated, please use \\`tooltip.${newName}\\` instead.`) : void 0;\n    });\n  }\n  const handleRender = (node, info) => {\n    var _a;\n    const {\n      index,\n      dragging\n    } = info;\n    const {\n      tooltip = {},\n      vertical\n    } = props;\n    const tooltipProps = Object.assign({}, tooltip);\n    const {\n      open: tooltipOpen,\n      placement: tooltipPlacement,\n      getPopupContainer: getTooltipPopupContainer,\n      prefixCls: customizeTooltipPrefixCls,\n      formatter: tipFormatter\n    } = tooltipProps;\n    let mergedTipFormatter;\n    if (tipFormatter || tipFormatter === null) {\n      mergedTipFormatter = tipFormatter;\n    } else if (legacyTipFormatter || legacyTipFormatter === null) {\n      mergedTipFormatter = legacyTipFormatter;\n    } else {\n      mergedTipFormatter = defaultFormatter;\n    }\n    const isTipFormatter = mergedTipFormatter ? opens[index] || dragging : false;\n    const open = (_a = tooltipOpen !== null && tooltipOpen !== void 0 ? tooltipOpen : legacyTooltipVisible) !== null && _a !== void 0 ? _a : tooltipOpen === undefined && isTipFormatter;\n    const passedProps = Object.assign(Object.assign({}, node.props), {\n      onMouseEnter: () => toggleTooltipOpen(index, true),\n      onMouseLeave: () => toggleTooltipOpen(index, false)\n    });\n    const tooltipPrefixCls = getPrefixCls('tooltip', customizeTooltipPrefixCls !== null && customizeTooltipPrefixCls !== void 0 ? customizeTooltipPrefixCls : legacyTooltipPrefixCls);\n    return /*#__PURE__*/React.createElement(SliderTooltip, {\n      prefixCls: tooltipPrefixCls,\n      title: mergedTipFormatter ? mergedTipFormatter(info.value) : '',\n      open: open,\n      placement: getTooltipPlacement(tooltipPlacement !== null && tooltipPlacement !== void 0 ? tooltipPlacement : legacyTooltipPlacement, vertical),\n      key: index,\n      overlayClassName: `${prefixCls}-tooltip`,\n      getPopupContainer: getTooltipPopupContainer || legacyGetTooltipPopupContainer || getPopupContainer\n    }, /*#__PURE__*/React.cloneElement(node, passedProps));\n  };\n  return wrapSSR( /*#__PURE__*/React.createElement(RcSlider, Object.assign({}, restProps, {\n    step: restProps.step,\n    range: mergedRange,\n    draggableTrack: draggableTrack,\n    className: cls,\n    ref: ref,\n    prefixCls: prefixCls,\n    handleRender: handleRender\n  })));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Slider.displayName = 'Slider';\n}\nexport default Slider;"]},"metadata":{},"sourceType":"module"}