{"ast":null,"code":"import { useMemo } from 'react';\nvar DEFAULT_SIZE = {\n  width: 0,\n  height: 0,\n  left: 0,\n  top: 0,\n  right: 0\n};\nexport default function useVisibleRange(tabOffsets, visibleTabContentValue, transform, tabContentSizeValue, addNodeSizeValue, operationNodeSizeValue, _ref) {\n  var tabs = _ref.tabs,\n      tabPosition = _ref.tabPosition,\n      rtl = _ref.rtl;\n  var charUnit;\n  var position;\n  var transformSize;\n\n  if (['top', 'bottom'].includes(tabPosition)) {\n    charUnit = 'width';\n    position = rtl ? 'right' : 'left';\n    transformSize = Math.abs(transform);\n  } else {\n    charUnit = 'height';\n    position = 'top';\n    transformSize = -transform;\n  }\n\n  return useMemo(function () {\n    if (!tabs.length) {\n      return [0, 0];\n    }\n\n    var len = tabs.length;\n    var endIndex = len;\n\n    for (var i = 0; i < len; i += 1) {\n      var offset = tabOffsets.get(tabs[i].key) || DEFAULT_SIZE;\n\n      if (offset[position] + offset[charUnit] > transformSize + visibleTabContentValue) {\n        endIndex = i - 1;\n        break;\n      }\n    }\n\n    var startIndex = 0;\n\n    for (var _i = len - 1; _i >= 0; _i -= 1) {\n      var _offset = tabOffsets.get(tabs[_i].key) || DEFAULT_SIZE;\n\n      if (_offset[position] < transformSize) {\n        startIndex = _i + 1;\n        break;\n      }\n    }\n\n    return [startIndex, endIndex];\n  }, [tabOffsets, visibleTabContentValue, tabContentSizeValue, addNodeSizeValue, operationNodeSizeValue, transformSize, tabPosition, tabs.map(function (tab) {\n    return tab.key;\n  }).join('_'), rtl]);\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-tabs/es/hooks/useVisibleRange.js"],"names":["useMemo","DEFAULT_SIZE","width","height","left","top","right","useVisibleRange","tabOffsets","visibleTabContentValue","transform","tabContentSizeValue","addNodeSizeValue","operationNodeSizeValue","_ref","tabs","tabPosition","rtl","charUnit","position","transformSize","includes","Math","abs","length","len","endIndex","i","offset","get","key","startIndex","_i","_offset","map","tab","join"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CADU;AAEjBC,EAAAA,MAAM,EAAE,CAFS;AAGjBC,EAAAA,IAAI,EAAE,CAHW;AAIjBC,EAAAA,GAAG,EAAE,CAJY;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAAnB;AAOA,eAAe,SAASC,eAAT,CAAyBC,UAAzB,EAAqCC,sBAArC,EAA6DC,SAA7D,EAAwEC,mBAAxE,EAA6FC,gBAA7F,EAA+GC,sBAA/G,EAAuIC,IAAvI,EAA6I;AAC1J,MAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AAAA,MACEC,WAAW,GAAGF,IAAI,CAACE,WADrB;AAAA,MAEEC,GAAG,GAAGH,IAAI,CAACG,GAFb;AAGA,MAAIC,QAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,aAAJ;;AACA,MAAI,CAAC,KAAD,EAAQ,QAAR,EAAkBC,QAAlB,CAA2BL,WAA3B,CAAJ,EAA6C;AAC3CE,IAAAA,QAAQ,GAAG,OAAX;AACAC,IAAAA,QAAQ,GAAGF,GAAG,GAAG,OAAH,GAAa,MAA3B;AACAG,IAAAA,aAAa,GAAGE,IAAI,CAACC,GAAL,CAASb,SAAT,CAAhB;AACD,GAJD,MAIO;AACLQ,IAAAA,QAAQ,GAAG,QAAX;AACAC,IAAAA,QAAQ,GAAG,KAAX;AACAC,IAAAA,aAAa,GAAG,CAACV,SAAjB;AACD;;AACD,SAAOV,OAAO,CAAC,YAAY;AACzB,QAAI,CAACe,IAAI,CAACS,MAAV,EAAkB;AAChB,aAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACD;;AACD,QAAIC,GAAG,GAAGV,IAAI,CAACS,MAAf;AACA,QAAIE,QAAQ,GAAGD,GAAf;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,IAAI,CAA9B,EAAiC;AAC/B,UAAIC,MAAM,GAAGpB,UAAU,CAACqB,GAAX,CAAed,IAAI,CAACY,CAAD,CAAJ,CAAQG,GAAvB,KAA+B7B,YAA5C;;AACA,UAAI2B,MAAM,CAACT,QAAD,CAAN,GAAmBS,MAAM,CAACV,QAAD,CAAzB,GAAsCE,aAAa,GAAGX,sBAA1D,EAAkF;AAChFiB,QAAAA,QAAQ,GAAGC,CAAC,GAAG,CAAf;AACA;AACD;AACF;;AACD,QAAII,UAAU,GAAG,CAAjB;;AACA,SAAK,IAAIC,EAAE,GAAGP,GAAG,GAAG,CAApB,EAAuBO,EAAE,IAAI,CAA7B,EAAgCA,EAAE,IAAI,CAAtC,EAAyC;AACvC,UAAIC,OAAO,GAAGzB,UAAU,CAACqB,GAAX,CAAed,IAAI,CAACiB,EAAD,CAAJ,CAASF,GAAxB,KAAgC7B,YAA9C;;AACA,UAAIgC,OAAO,CAACd,QAAD,CAAP,GAAoBC,aAAxB,EAAuC;AACrCW,QAAAA,UAAU,GAAGC,EAAE,GAAG,CAAlB;AACA;AACD;AACF;;AACD,WAAO,CAACD,UAAD,EAAaL,QAAb,CAAP;AACD,GAtBa,EAsBX,CAAClB,UAAD,EAAaC,sBAAb,EAAqCE,mBAArC,EAA0DC,gBAA1D,EAA4EC,sBAA5E,EAAoGO,aAApG,EAAmHJ,WAAnH,EAAgID,IAAI,CAACmB,GAAL,CAAS,UAAUC,GAAV,EAAe;AACzJ,WAAOA,GAAG,CAACL,GAAX;AACD,GAFkI,EAEhIM,IAFgI,CAE3H,GAF2H,CAAhI,EAEWnB,GAFX,CAtBW,CAAd;AAyBD","sourcesContent":["import { useMemo } from 'react';\nvar DEFAULT_SIZE = {\n  width: 0,\n  height: 0,\n  left: 0,\n  top: 0,\n  right: 0\n};\nexport default function useVisibleRange(tabOffsets, visibleTabContentValue, transform, tabContentSizeValue, addNodeSizeValue, operationNodeSizeValue, _ref) {\n  var tabs = _ref.tabs,\n    tabPosition = _ref.tabPosition,\n    rtl = _ref.rtl;\n  var charUnit;\n  var position;\n  var transformSize;\n  if (['top', 'bottom'].includes(tabPosition)) {\n    charUnit = 'width';\n    position = rtl ? 'right' : 'left';\n    transformSize = Math.abs(transform);\n  } else {\n    charUnit = 'height';\n    position = 'top';\n    transformSize = -transform;\n  }\n  return useMemo(function () {\n    if (!tabs.length) {\n      return [0, 0];\n    }\n    var len = tabs.length;\n    var endIndex = len;\n    for (var i = 0; i < len; i += 1) {\n      var offset = tabOffsets.get(tabs[i].key) || DEFAULT_SIZE;\n      if (offset[position] + offset[charUnit] > transformSize + visibleTabContentValue) {\n        endIndex = i - 1;\n        break;\n      }\n    }\n    var startIndex = 0;\n    for (var _i = len - 1; _i >= 0; _i -= 1) {\n      var _offset = tabOffsets.get(tabs[_i].key) || DEFAULT_SIZE;\n      if (_offset[position] < transformSize) {\n        startIndex = _i + 1;\n        break;\n      }\n    }\n    return [startIndex, endIndex];\n  }, [tabOffsets, visibleTabContentValue, tabContentSizeValue, addNodeSizeValue, operationNodeSizeValue, transformSize, tabPosition, tabs.map(function (tab) {\n    return tab.key;\n  }).join('_'), rtl]);\n}"]},"metadata":{},"sourceType":"module"}