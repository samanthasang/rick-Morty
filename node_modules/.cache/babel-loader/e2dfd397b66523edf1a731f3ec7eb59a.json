{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport warning from \"rc-util/es/warning\";\nimport { supportRef, useComposeRef } from \"rc-util/es/ref\";\nimport OrderContext from \"./Context\";\nimport useDom from \"./useDom\";\nimport useScrollLocker from \"./useScrollLocker\";\nimport { inlineMock } from \"./mock\";\n\nvar getPortalContainer = function getPortalContainer(getContainer) {\n  if (getContainer === false) {\n    return false;\n  }\n\n  if (!canUseDom() || !getContainer) {\n    return null;\n  }\n\n  if (typeof getContainer === 'string') {\n    return document.querySelector(getContainer);\n  }\n\n  if (typeof getContainer === 'function') {\n    return getContainer();\n  }\n\n  return getContainer;\n};\n\nvar Portal = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var open = props.open,\n      autoLock = props.autoLock,\n      getContainer = props.getContainer,\n      debug = props.debug,\n      _props$autoDestroy = props.autoDestroy,\n      autoDestroy = _props$autoDestroy === void 0 ? true : _props$autoDestroy,\n      children = props.children;\n\n  var _React$useState = React.useState(open),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      shouldRender = _React$useState2[0],\n      setShouldRender = _React$useState2[1];\n\n  var mergedRender = shouldRender || open; // ========================= Warning =========================\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(canUseDom() || !open, \"Portal only work in client side. Please call 'useEffect' to show Portal instead default render in SSR.\");\n  } // ====================== Should Render ======================\n\n\n  React.useEffect(function () {\n    if (autoDestroy || open) {\n      setShouldRender(open);\n    }\n  }, [open, autoDestroy]); // ======================== Container ========================\n\n  var _React$useState3 = React.useState(function () {\n    return getPortalContainer(getContainer);\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      innerContainer = _React$useState4[0],\n      setInnerContainer = _React$useState4[1];\n\n  React.useEffect(function () {\n    var customizeContainer = getPortalContainer(getContainer); // Tell component that we check this in effect which is safe to be `null`\n\n    setInnerContainer(customizeContainer !== null && customizeContainer !== void 0 ? customizeContainer : null);\n  });\n\n  var _useDom = useDom(mergedRender && !innerContainer, debug),\n      _useDom2 = _slicedToArray(_useDom, 2),\n      defaultContainer = _useDom2[0],\n      queueCreate = _useDom2[1];\n\n  var mergedContainer = innerContainer !== null && innerContainer !== void 0 ? innerContainer : defaultContainer; // ========================= Locker ==========================\n\n  useScrollLocker(autoLock && open && canUseDom() && (mergedContainer === defaultContainer || mergedContainer === document.body)); // =========================== Ref ===========================\n\n  var childRef = null;\n\n  if (children && supportRef(children) && ref) {\n    var _ref = children;\n    childRef = _ref.ref;\n  }\n\n  var mergedRef = useComposeRef(childRef, ref); // ========================= Render ==========================\n  // Do not render when nothing need render\n  // When innerContainer is `undefined`, it may not ready since user use ref in the same render\n\n  if (!mergedRender || !canUseDom() || innerContainer === undefined) {\n    return null;\n  } // Render inline\n\n\n  var renderInline = mergedContainer === false || inlineMock();\n  var reffedChildren = children;\n\n  if (ref) {\n    reffedChildren = /*#__PURE__*/React.cloneElement(children, {\n      ref: mergedRef\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(OrderContext.Provider, {\n    value: queueCreate\n  }, renderInline ? reffedChildren : /*#__PURE__*/createPortal(reffedChildren, mergedContainer));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Portal.displayName = 'Portal';\n}\n\nexport default Portal;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/@rc-component/portal/es/Portal.js"],"names":["_slicedToArray","React","createPortal","canUseDom","warning","supportRef","useComposeRef","OrderContext","useDom","useScrollLocker","inlineMock","getPortalContainer","getContainer","document","querySelector","Portal","forwardRef","props","ref","open","autoLock","debug","_props$autoDestroy","autoDestroy","children","_React$useState","useState","_React$useState2","shouldRender","setShouldRender","mergedRender","process","env","NODE_ENV","useEffect","_React$useState3","_React$useState4","innerContainer","setInnerContainer","customizeContainer","_useDom","_useDom2","defaultContainer","queueCreate","mergedContainer","body","childRef","_ref","mergedRef","undefined","renderInline","reffedChildren","cloneElement","createElement","Provider","value","displayName"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport warning from \"rc-util/es/warning\";\nimport { supportRef, useComposeRef } from \"rc-util/es/ref\";\nimport OrderContext from \"./Context\";\nimport useDom from \"./useDom\";\nimport useScrollLocker from \"./useScrollLocker\";\nimport { inlineMock } from \"./mock\";\nvar getPortalContainer = function getPortalContainer(getContainer) {\n  if (getContainer === false) {\n    return false;\n  }\n  if (!canUseDom() || !getContainer) {\n    return null;\n  }\n  if (typeof getContainer === 'string') {\n    return document.querySelector(getContainer);\n  }\n  if (typeof getContainer === 'function') {\n    return getContainer();\n  }\n  return getContainer;\n};\nvar Portal = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var open = props.open,\n    autoLock = props.autoLock,\n    getContainer = props.getContainer,\n    debug = props.debug,\n    _props$autoDestroy = props.autoDestroy,\n    autoDestroy = _props$autoDestroy === void 0 ? true : _props$autoDestroy,\n    children = props.children;\n  var _React$useState = React.useState(open),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    shouldRender = _React$useState2[0],\n    setShouldRender = _React$useState2[1];\n  var mergedRender = shouldRender || open;\n\n  // ========================= Warning =========================\n  if (process.env.NODE_ENV !== 'production') {\n    warning(canUseDom() || !open, \"Portal only work in client side. Please call 'useEffect' to show Portal instead default render in SSR.\");\n  }\n\n  // ====================== Should Render ======================\n  React.useEffect(function () {\n    if (autoDestroy || open) {\n      setShouldRender(open);\n    }\n  }, [open, autoDestroy]);\n\n  // ======================== Container ========================\n  var _React$useState3 = React.useState(function () {\n      return getPortalContainer(getContainer);\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    innerContainer = _React$useState4[0],\n    setInnerContainer = _React$useState4[1];\n  React.useEffect(function () {\n    var customizeContainer = getPortalContainer(getContainer);\n\n    // Tell component that we check this in effect which is safe to be `null`\n    setInnerContainer(customizeContainer !== null && customizeContainer !== void 0 ? customizeContainer : null);\n  });\n  var _useDom = useDom(mergedRender && !innerContainer, debug),\n    _useDom2 = _slicedToArray(_useDom, 2),\n    defaultContainer = _useDom2[0],\n    queueCreate = _useDom2[1];\n  var mergedContainer = innerContainer !== null && innerContainer !== void 0 ? innerContainer : defaultContainer;\n\n  // ========================= Locker ==========================\n  useScrollLocker(autoLock && open && canUseDom() && (mergedContainer === defaultContainer || mergedContainer === document.body));\n\n  // =========================== Ref ===========================\n  var childRef = null;\n  if (children && supportRef(children) && ref) {\n    var _ref = children;\n    childRef = _ref.ref;\n  }\n  var mergedRef = useComposeRef(childRef, ref);\n\n  // ========================= Render ==========================\n  // Do not render when nothing need render\n  // When innerContainer is `undefined`, it may not ready since user use ref in the same render\n  if (!mergedRender || !canUseDom() || innerContainer === undefined) {\n    return null;\n  }\n\n  // Render inline\n  var renderInline = mergedContainer === false || inlineMock();\n  var reffedChildren = children;\n  if (ref) {\n    reffedChildren = /*#__PURE__*/React.cloneElement(children, {\n      ref: mergedRef\n    });\n  }\n  return /*#__PURE__*/React.createElement(OrderContext.Provider, {\n    value: queueCreate\n  }, renderInline ? reffedChildren : /*#__PURE__*/createPortal(reffedChildren, mergedContainer));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Portal.displayName = 'Portal';\n}\nexport default Portal;"]},"metadata":{},"sourceType":"module"}