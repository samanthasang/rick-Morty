{"ast":null,"code":"import _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken, statistic } from './util/statistic';\nimport genPresetColor from './util/genPresetColor';\nvar defaultTheme = createTheme(defaultDerivative);\nexport { // colors\nPresetColors, // Statistic\nstatistic, statisticToken, mergeToken, // hooks\nuseStyleRegister, genComponentStyleHook, genPresetColor }; // ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\n\nexport var defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport var DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig); // ================================== Hook ==================================\n\nexport function useToken() {\n  var _React$useContext = React.useContext(DesignTokenContext),\n      rootDesignToken = _React$useContext.token,\n      hashed = _React$useContext.hashed,\n      theme = _React$useContext.theme,\n      components = _React$useContext.components;\n\n  var salt = \"\".concat(version, \"-\").concat(hashed || '');\n  var mergedTheme = theme || defaultTheme;\n\n  var _useCacheToken = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n    salt: salt,\n    override: Object.assign({\n      override: rootDesignToken\n    }, components),\n    formatToken: formatToken\n  }),\n      _useCacheToken2 = _slicedToArray(_useCacheToken, 2),\n      token = _useCacheToken2[0],\n      hashId = _useCacheToken2[1];\n\n  return [mergedTheme, token, hashed ? hashId : ''];\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/theme/internal.js"],"names":["createTheme","useCacheToken","useStyleRegister","React","version","PresetColors","defaultDerivative","defaultSeedToken","formatToken","genComponentStyleHook","statisticToken","merge","mergeToken","statistic","genPresetColor","defaultTheme","defaultConfig","token","hashed","DesignTokenContext","createContext","useToken","useContext","rootDesignToken","theme","components","salt","mergedTheme","override","Object","assign","hashId"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,gBAArC,QAA6D,qBAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,iBAAP,MAA8B,kBAA9B;AACA,OAAOC,gBAAP,MAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,cAAP,IAAyBC,KAAK,IAAIC,UAAlC,EAA8CC,SAA9C,QAA+D,kBAA/D;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,IAAMC,YAAY,GAAGf,WAAW,CAACM,iBAAD,CAAhC;AACA,SACA;AACAD,YAFA,EAGA;AACAQ,SAJA,EAIWH,cAJX,EAI2BE,UAJ3B,EAKA;AACAV,gBANA,EAMkBO,qBANlB,EAMyCK,cANzC,G,CAOA;AACA;;AACA,OAAO,IAAME,aAAa,GAAG;AAC3BC,EAAAA,KAAK,EAAEV,gBADoB;AAE3BW,EAAAA,MAAM,EAAE;AAFmB,CAAtB;AAIP,OAAO,IAAMC,kBAAkB,GAAG,aAAahB,KAAK,CAACiB,aAAN,CAAoBJ,aAApB,CAAxC,C,CACP;;AACA,OAAO,SAASK,QAAT,GAAoB;AACzB,0BAKIlB,KAAK,CAACmB,UAAN,CAAiBH,kBAAjB,CALJ;AAAA,MACSI,eADT,qBACEN,KADF;AAAA,MAEEC,MAFF,qBAEEA,MAFF;AAAA,MAGEM,KAHF,qBAGEA,KAHF;AAAA,MAIEC,UAJF,qBAIEA,UAJF;;AAMA,MAAMC,IAAI,aAAMtB,OAAN,cAAiBc,MAAM,IAAI,EAA3B,CAAV;AACA,MAAMS,WAAW,GAAGH,KAAK,IAAIT,YAA7B;;AACA,uBAAwBd,aAAa,CAAC0B,WAAD,EAAc,CAACpB,gBAAD,EAAmBgB,eAAnB,CAAd,EAAmD;AACtFG,IAAAA,IAAI,EAAJA,IADsF;AAEtFE,IAAAA,QAAQ,EAAEC,MAAM,CAACC,MAAP,CAAc;AACtBF,MAAAA,QAAQ,EAAEL;AADY,KAAd,EAEPE,UAFO,CAF4E;AAKtFjB,IAAAA,WAAW,EAAXA;AALsF,GAAnD,CAArC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcc,MAAd;;AAOA,SAAO,CAACJ,WAAD,EAAcV,KAAd,EAAqBC,MAAM,GAAGa,MAAH,GAAY,EAAvC,CAAP;AACD","sourcesContent":["import { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken, statistic } from './util/statistic';\nimport genPresetColor from './util/genPresetColor';\nconst defaultTheme = createTheme(defaultDerivative);\nexport {\n// colors\nPresetColors,\n// Statistic\nstatistic, statisticToken, mergeToken,\n// hooks\nuseStyleRegister, genComponentStyleHook, genPresetColor };\n// ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\nexport const defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport const DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig);\n// ================================== Hook ==================================\nexport function useToken() {\n  const {\n    token: rootDesignToken,\n    hashed,\n    theme,\n    components\n  } = React.useContext(DesignTokenContext);\n  const salt = `${version}-${hashed || ''}`;\n  const mergedTheme = theme || defaultTheme;\n  const [token, hashId] = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n    salt,\n    override: Object.assign({\n      override: rootDesignToken\n    }, components),\n    formatToken\n  });\n  return [mergedTheme, token, hashed ? hashId : ''];\n}"]},"metadata":{},"sourceType":"module"}