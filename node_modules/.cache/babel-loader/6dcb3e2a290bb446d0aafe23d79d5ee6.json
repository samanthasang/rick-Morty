{"ast":null,"code":"import LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport CSSMotion from 'rc-motion';\nimport React from 'react';\n\nvar getCollapsedWidth = function getCollapsedWidth() {\n  return {\n    width: 0,\n    opacity: 0,\n    transform: 'scale(0)'\n  };\n};\n\nvar getRealWidth = function getRealWidth(node) {\n  return {\n    width: node.scrollWidth,\n    opacity: 1,\n    transform: 'scale(1)'\n  };\n};\n\nvar LoadingIcon = function LoadingIcon(_ref) {\n  var prefixCls = _ref.prefixCls,\n      loading = _ref.loading,\n      existIcon = _ref.existIcon;\n  var visible = !!loading;\n\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-loading-icon\")\n    }, /*#__PURE__*/React.createElement(LoadingOutlined, null));\n  }\n\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    // We do not really use this motionName\n    motionName: \"\".concat(prefixCls, \"-loading-icon-motion\"),\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, function (_ref2, ref) {\n    var className = _ref2.className,\n        style = _ref2.style;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-loading-icon\"),\n      style: style,\n      ref: ref\n    }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n      className: className\n    }));\n  });\n};\n\nexport default LoadingIcon;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/button/LoadingIcon.js"],"names":["LoadingOutlined","CSSMotion","React","getCollapsedWidth","width","opacity","transform","getRealWidth","node","scrollWidth","LoadingIcon","_ref","prefixCls","loading","existIcon","visible","createElement","className","motionName","removeOnLeave","onAppearStart","onAppearActive","onEnterStart","onEnterActive","onLeaveStart","onLeaveActive","_ref2","ref","style"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,4CAA5B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAO;AAC/BC,IAAAA,KAAK,EAAE,CADwB;AAE/BC,IAAAA,OAAO,EAAE,CAFsB;AAG/BC,IAAAA,SAAS,EAAE;AAHoB,GAAP;AAAA,CAA1B;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI;AAAA,SAAK;AAC5BJ,IAAAA,KAAK,EAAEI,IAAI,CAACC,WADgB;AAE5BJ,IAAAA,OAAO,EAAE,CAFmB;AAG5BC,IAAAA,SAAS,EAAE;AAHiB,GAAL;AAAA,CAAzB;;AAKA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AAC1B,MACEC,SADF,GAIID,IAJJ,CACEC,SADF;AAAA,MAEEC,OAFF,GAIIF,IAJJ,CAEEE,OAFF;AAAA,MAGEC,SAHF,GAIIH,IAJJ,CAGEG,SAHF;AAKA,MAAMC,OAAO,GAAG,CAAC,CAACF,OAAlB;;AACA,MAAIC,SAAJ,EAAe;AACb,WAAO,aAAaZ,KAAK,CAACc,aAAN,CAAoB,MAApB,EAA4B;AAC9CC,MAAAA,SAAS,YAAKL,SAAL;AADqC,KAA5B,EAEjB,aAAaV,KAAK,CAACc,aAAN,CAAoBhB,eAApB,EAAqC,IAArC,CAFI,CAApB;AAGD;;AACD,SAAO,aAAaE,KAAK,CAACc,aAAN,CAAoBf,SAApB,EAA+B;AACjDc,IAAAA,OAAO,EAAEA,OADwC;AAEjD;AACAG,IAAAA,UAAU,YAAKN,SAAL,yBAHuC;AAIjDO,IAAAA,aAAa,EAAE,IAJkC;AAKjDC,IAAAA,aAAa,EAAEjB,iBALkC;AAMjDkB,IAAAA,cAAc,EAAEd,YANiC;AAOjDe,IAAAA,YAAY,EAAEnB,iBAPmC;AAQjDoB,IAAAA,aAAa,EAAEhB,YARkC;AASjDiB,IAAAA,YAAY,EAAEjB,YATmC;AAUjDkB,IAAAA,aAAa,EAAEtB;AAVkC,GAA/B,EAWjB,UAACuB,KAAD,EAAQC,GAAR,EAAgB;AACjB,QACEV,SADF,GAGIS,KAHJ,CACET,SADF;AAAA,QAEEW,KAFF,GAGIF,KAHJ,CAEEE,KAFF;AAIA,WAAO,aAAa1B,KAAK,CAACc,aAAN,CAAoB,MAApB,EAA4B;AAC9CC,MAAAA,SAAS,YAAKL,SAAL,kBADqC;AAE9CgB,MAAAA,KAAK,EAAEA,KAFuC;AAG9CD,MAAAA,GAAG,EAAEA;AAHyC,KAA5B,EAIjB,aAAazB,KAAK,CAACc,aAAN,CAAoBhB,eAApB,EAAqC;AACnDiB,MAAAA,SAAS,EAAEA;AADwC,KAArC,CAJI,CAApB;AAOD,GAvBmB,CAApB;AAwBD,CApCD;;AAqCA,eAAeP,WAAf","sourcesContent":["import LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport CSSMotion from 'rc-motion';\nimport React from 'react';\nconst getCollapsedWidth = () => ({\n  width: 0,\n  opacity: 0,\n  transform: 'scale(0)'\n});\nconst getRealWidth = node => ({\n  width: node.scrollWidth,\n  opacity: 1,\n  transform: 'scale(1)'\n});\nconst LoadingIcon = _ref => {\n  let {\n    prefixCls,\n    loading,\n    existIcon\n  } = _ref;\n  const visible = !!loading;\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-loading-icon`\n    }, /*#__PURE__*/React.createElement(LoadingOutlined, null));\n  }\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    // We do not really use this motionName\n    motionName: `${prefixCls}-loading-icon-motion`,\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, (_ref2, ref) => {\n    let {\n      className,\n      style\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-loading-icon`,\n      style: style,\n      ref: ref\n    }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n      className: className\n    }));\n  });\n};\nexport default LoadingIcon;"]},"metadata":{},"sourceType":"module"}