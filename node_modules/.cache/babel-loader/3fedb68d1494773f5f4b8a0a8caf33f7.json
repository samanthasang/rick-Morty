{"ast":null,"code":"import * as React from 'react';\nexport var defaultIconPrefixCls = 'anticon';\n\nvar defaultGetPrefixCls = function defaultGetPrefixCls(suffixCls, customizePrefixCls) {\n  if (customizePrefixCls) return customizePrefixCls;\n  return suffixCls ? \"ant-\".concat(suffixCls) : 'ant';\n}; // zombieJ: ðŸš¨ Do not pass `defaultRenderEmpty` here since it will cause circular dependency.\n\n\nexport var ConfigContext = /*#__PURE__*/React.createContext({\n  // We provide a default function for Context without provider\n  getPrefixCls: defaultGetPrefixCls,\n  iconPrefixCls: defaultIconPrefixCls\n});\nvar ConfigConsumer = ConfigContext.Consumer;\nexport { ConfigConsumer };","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/config-provider/context.js"],"names":["React","defaultIconPrefixCls","defaultGetPrefixCls","suffixCls","customizePrefixCls","ConfigContext","createContext","getPrefixCls","iconPrefixCls","ConfigConsumer","Consumer"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,IAAMC,oBAAoB,GAAG,SAA7B;;AACP,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,SAAD,EAAYC,kBAAZ,EAAmC;AAC7D,MAAIA,kBAAJ,EAAwB,OAAOA,kBAAP;AACxB,SAAOD,SAAS,iBAAUA,SAAV,IAAwB,KAAxC;AACD,CAHD,C,CAIA;;;AACA,OAAO,IAAME,aAAa,GAAG,aAAaL,KAAK,CAACM,aAAN,CAAoB;AAC5D;AACAC,EAAAA,YAAY,EAAEL,mBAF8C;AAG5DM,EAAAA,aAAa,EAAEP;AAH6C,CAApB,CAAnC;AAKA,IACKQ,cADL,GAEHJ,aAFG,CACLK,QADK","sourcesContent":["import * as React from 'react';\nexport const defaultIconPrefixCls = 'anticon';\nconst defaultGetPrefixCls = (suffixCls, customizePrefixCls) => {\n  if (customizePrefixCls) return customizePrefixCls;\n  return suffixCls ? `ant-${suffixCls}` : 'ant';\n};\n// zombieJ: ðŸš¨ Do not pass `defaultRenderEmpty` here since it will cause circular dependency.\nexport const ConfigContext = /*#__PURE__*/React.createContext({\n  // We provide a default function for Context without provider\n  getPrefixCls: defaultGetPrefixCls,\n  iconPrefixCls: defaultIconPrefixCls\n});\nexport const {\n  Consumer: ConfigConsumer\n} = ConfigContext;"]},"metadata":{},"sourceType":"module"}