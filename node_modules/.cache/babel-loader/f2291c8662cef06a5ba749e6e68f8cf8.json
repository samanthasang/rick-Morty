{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\n\nconst Element = props => {\n  const {\n    prefixCls,\n    className,\n    style,\n    size,\n    shape\n  } = props;\n  const sizeCls = classNames({\n    [`${prefixCls}-lg`]: size === 'large',\n    [`${prefixCls}-sm`]: size === 'small'\n  });\n  const shapeCls = classNames({\n    [`${prefixCls}-circle`]: shape === 'circle',\n    [`${prefixCls}-square`]: shape === 'square',\n    [`${prefixCls}-round`]: shape === 'round'\n  });\n  const sizeStyle = React.useMemo(() => typeof size === 'number' ? {\n    width: size,\n    height: size,\n    lineHeight: `${size}px`\n  } : {}, [size]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(prefixCls, sizeCls, shapeCls, className),\n    style: Object.assign(Object.assign({}, sizeStyle), style)\n  });\n};\n\nexport default Element;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/skeleton/Element.js"],"names":["classNames","React","Element","props","prefixCls","className","style","size","shape","sizeCls","shapeCls","sizeStyle","useMemo","width","height","lineHeight","createElement","Object","assign"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AACA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFL,KANJ;AAOA,QAAMM,OAAO,GAAGT,UAAU,CAAC;AACzB,KAAE,GAAEI,SAAU,KAAd,GAAqBG,IAAI,KAAK,OADL;AAEzB,KAAE,GAAEH,SAAU,KAAd,GAAqBG,IAAI,KAAK;AAFL,GAAD,CAA1B;AAIA,QAAMG,QAAQ,GAAGV,UAAU,CAAC;AAC1B,KAAE,GAAEI,SAAU,SAAd,GAAyBI,KAAK,KAAK,QADT;AAE1B,KAAE,GAAEJ,SAAU,SAAd,GAAyBI,KAAK,KAAK,QAFT;AAG1B,KAAE,GAAEJ,SAAU,QAAd,GAAwBI,KAAK,KAAK;AAHR,GAAD,CAA3B;AAKA,QAAMG,SAAS,GAAGV,KAAK,CAACW,OAAN,CAAc,MAAM,OAAOL,IAAP,KAAgB,QAAhB,GAA2B;AAC/DM,IAAAA,KAAK,EAAEN,IADwD;AAE/DO,IAAAA,MAAM,EAAEP,IAFuD;AAG/DQ,IAAAA,UAAU,EAAG,GAAER,IAAK;AAH2C,GAA3B,GAIlC,EAJc,EAIV,CAACA,IAAD,CAJU,CAAlB;AAKA,SAAO,aAAaN,KAAK,CAACe,aAAN,CAAoB,MAApB,EAA4B;AAC9CX,IAAAA,SAAS,EAAEL,UAAU,CAACI,SAAD,EAAYK,OAAZ,EAAqBC,QAArB,EAA+BL,SAA/B,CADyB;AAE9CC,IAAAA,KAAK,EAAEW,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,SAAlB,CAAd,EAA4CL,KAA5C;AAFuC,GAA5B,CAApB;AAID,CA1BD;;AA2BA,eAAeJ,OAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nconst Element = props => {\n  const {\n    prefixCls,\n    className,\n    style,\n    size,\n    shape\n  } = props;\n  const sizeCls = classNames({\n    [`${prefixCls}-lg`]: size === 'large',\n    [`${prefixCls}-sm`]: size === 'small'\n  });\n  const shapeCls = classNames({\n    [`${prefixCls}-circle`]: shape === 'circle',\n    [`${prefixCls}-square`]: shape === 'square',\n    [`${prefixCls}-round`]: shape === 'round'\n  });\n  const sizeStyle = React.useMemo(() => typeof size === 'number' ? {\n    width: size,\n    height: size,\n    lineHeight: `${size}px`\n  } : {}, [size]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(prefixCls, sizeCls, shapeCls, className),\n    style: Object.assign(Object.assign({}, sizeStyle), style)\n  });\n};\nexport default Element;"]},"metadata":{},"sourceType":"module"}