{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { textEllipsis } from '../../style';\n\nvar genEllipsisStyle = function genEllipsisStyle(token) {\n  var _Object$assign;\n\n  var componentCls = token.componentCls;\n  return _defineProperty({}, \"\".concat(componentCls, \"-wrapper\"), _defineProperty({}, \"\".concat(componentCls, \"-cell-ellipsis\"), Object.assign(Object.assign({}, textEllipsis), (_Object$assign = {\n    wordBreak: 'keep-all'\n  }, _defineProperty(_Object$assign, \"\\n          &\".concat(componentCls, \"-cell-fix-left-last,\\n          &\").concat(componentCls, \"-cell-fix-right-first\\n        \"), _defineProperty({\n    overflow: 'visible'\n  }, \"\".concat(componentCls, \"-cell-content\"), {\n    display: 'block',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  })), _defineProperty(_Object$assign, \"\".concat(componentCls, \"-column-title\"), {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    wordBreak: 'keep-all'\n  }), _Object$assign))));\n};\n\nexport default genEllipsisStyle;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/table/style/ellipsis.js"],"names":["textEllipsis","genEllipsisStyle","token","componentCls","Object","assign","wordBreak","overflow","display","textOverflow"],"mappings":";AAAA,SAASA,YAAT,QAA6B,aAA7B;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAAA;;AAChC,MACEC,YADF,GAEID,KAFJ,CACEC,YADF;AAGA,uCACMA,YADN,6CAEQA,YAFR,qBAEuCC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,YAAlB,CAAd;AACjCM,IAAAA,SAAS,EAAE;AADsB,4DAI5BH,YAJ4B,8CAK5BA,YAL4B;AAO/BI,IAAAA,QAAQ,EAAE;AAPqB,eAQ3BJ,YAR2B,oBAQG;AAChCK,IAAAA,OAAO,EAAE,OADuB;AAEhCD,IAAAA,QAAQ,EAAE,QAFsB;AAGhCE,IAAAA,YAAY,EAAE;AAHkB,GARH,8CAc7BN,YAd6B,oBAcC;AAChCI,IAAAA,QAAQ,EAAE,QADsB;AAEhCE,IAAAA,YAAY,EAAE,UAFkB;AAGhCH,IAAAA,SAAS,EAAE;AAHqB,GAdD,mBAFvC;AAwBD,CA5BD;;AA6BA,eAAeL,gBAAf","sourcesContent":["import { textEllipsis } from '../../style';\nconst genEllipsisStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-wrapper`]: {\n      [`${componentCls}-cell-ellipsis`]: Object.assign(Object.assign({}, textEllipsis), {\n        wordBreak: 'keep-all',\n        // Fixed first or last should special process\n        [`\n          &${componentCls}-cell-fix-left-last,\n          &${componentCls}-cell-fix-right-first\n        `]: {\n          overflow: 'visible',\n          [`${componentCls}-cell-content`]: {\n            display: 'block',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n          }\n        },\n        [`${componentCls}-column-title`]: {\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          wordBreak: 'keep-all'\n        }\n      })\n    }\n  };\n};\nexport default genEllipsisStyle;"]},"metadata":{},"sourceType":"module"}