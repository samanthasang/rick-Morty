{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { genCollapseMotion } from '../../style/motion';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genFocusOutline, resetComponent } from '../../style'; // ============================ Keyframes =============================\n\nvar treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n}); // ============================== Switch ==============================\n\nvar getSwitchStyle = function getSwitchStyle(prefixCls, token) {\n  return _defineProperty({}, \".\".concat(prefixCls, \"-switcher-icon\"), {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: \"transform \".concat(token.motionDurationSlow)\n    }\n  });\n}; // =============================== Drop ===============================\n\n\nvar getDropIndicatorStyle = function getDropIndicatorStyle(prefixCls, token) {\n  return _defineProperty({}, \".\".concat(prefixCls, \"-drop-indicator\"), {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: \"\".concat(token.lineWidthBold, \"px solid \").concat(token.colorPrimary),\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  });\n};\n\nexport var genBaseStyle = function genBaseStyle(prefixCls, token) {\n  var _$concat2, _draggable, _$concat6, _$concat$concat, _showLine, _Object$assign;\n\n  var treeCls = token.treeCls,\n      treeNodeCls = token.treeNodeCls,\n      treeNodePadding = token.treeNodePadding,\n      treeTitleHeight = token.treeTitleHeight;\n  var treeCheckBoxMarginVertical = (treeTitleHeight - token.fontSizeLG) / 2;\n  var treeCheckBoxMarginHorizontal = token.paddingXS;\n  return _defineProperty({}, treeCls, Object.assign(Object.assign({}, resetComponent(token)), (_Object$assign = {\n    background: token.colorBgContainer,\n    borderRadius: token.borderRadius,\n    transition: \"background-color \".concat(token.motionDurationSlow)\n  }, _defineProperty(_Object$assign, \"&\".concat(treeCls, \"-rtl\"), _defineProperty({}, \"\".concat(treeCls, \"-switcher\"), {\n    '&_close': _defineProperty({}, \"\".concat(treeCls, \"-switcher-icon\"), {\n      svg: {\n        transform: 'rotate(90deg)'\n      }\n    })\n  })), _defineProperty(_Object$assign, \"&-focused:not(:hover):not(\".concat(treeCls, \"-active-focused)\"), Object.assign({}, genFocusOutline(token))), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-list-holder-inner\"), {\n    alignItems: 'flex-start'\n  }), _defineProperty(_Object$assign, \"&\".concat(treeCls, \"-block-node\"), _defineProperty({}, \"\".concat(treeCls, \"-list-holder-inner\"), (_$concat2 = {\n    alignItems: 'stretch'\n  }, _defineProperty(_$concat2, \"\".concat(treeCls, \"-node-content-wrapper\"), {\n    flex: 'auto'\n  }), _defineProperty(_$concat2, \"\".concat(treeNodeCls, \".dragging\"), {\n    position: 'relative',\n    '&:after': {\n      position: 'absolute',\n      top: 0,\n      insetInlineEnd: 0,\n      bottom: treeNodePadding,\n      insetInlineStart: 0,\n      border: \"1px solid \".concat(token.colorPrimary),\n      opacity: 0,\n      animationName: treeNodeFX,\n      animationDuration: token.motionDurationSlow,\n      animationPlayState: 'running',\n      animationFillMode: 'forwards',\n      content: '\"\"',\n      pointerEvents: 'none'\n    }\n  }), _$concat2))), _defineProperty(_Object$assign, \"\".concat(treeNodeCls), (_$concat6 = {\n    display: 'flex',\n    alignItems: 'flex-start',\n    padding: \"0 0 \".concat(treeNodePadding, \"px 0\"),\n    outline: 'none',\n    '&-rtl': {\n      direction: 'rtl'\n    },\n    // Disabled\n    '&-disabled': _defineProperty({}, \"\".concat(treeCls, \"-node-content-wrapper\"), {\n      color: token.colorTextDisabled,\n      cursor: 'not-allowed',\n      '&:hover': {\n        background: 'transparent'\n      }\n    })\n  }, _defineProperty(_$concat6, \"&-active \".concat(treeCls, \"-node-content-wrapper\"), Object.assign({}, genFocusOutline(token))), _defineProperty(_$concat6, \"&:not(\".concat(treeNodeCls, \"-disabled).filter-node \").concat(treeCls, \"-title\"), {\n    color: 'inherit',\n    fontWeight: 500\n  }), _defineProperty(_$concat6, '&-draggable', (_draggable = {}, _defineProperty(_draggable, \"\".concat(treeCls, \"-draggable-icon\"), _defineProperty({\n    width: treeTitleHeight,\n    lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n    textAlign: 'center',\n    visibility: 'visible',\n    opacity: 0.2,\n    transition: \"opacity \".concat(token.motionDurationSlow)\n  }, \"\".concat(treeNodeCls, \":hover &\"), {\n    opacity: 0.45\n  })), _defineProperty(_draggable, \"&\".concat(treeNodeCls, \"-disabled\"), _defineProperty({}, \"\".concat(treeCls, \"-draggable-icon\"), {\n    visibility: 'hidden'\n  })), _draggable)), _$concat6)), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-indent\"), {\n    alignSelf: 'stretch',\n    whiteSpace: 'nowrap',\n    userSelect: 'none',\n    '&-unit': {\n      display: 'inline-block',\n      width: treeTitleHeight\n    }\n  }), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-draggable-icon\"), {\n    visibility: 'hidden'\n  }), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-switcher\"), Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), {\n    position: 'relative',\n    flex: 'none',\n    alignSelf: 'stretch',\n    width: treeTitleHeight,\n    margin: 0,\n    lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n    textAlign: 'center',\n    cursor: 'pointer',\n    userSelect: 'none',\n    '&-noop': {\n      cursor: 'default'\n    },\n    '&_close': _defineProperty({}, \"\".concat(treeCls, \"-switcher-icon\"), {\n      svg: {\n        transform: 'rotate(-90deg)'\n      }\n    }),\n    '&-loading-icon': {\n      color: token.colorPrimary\n    },\n    '&-leaf-line': {\n      position: 'relative',\n      zIndex: 1,\n      display: 'inline-block',\n      width: '100%',\n      height: '100%',\n      // https://github.com/ant-design/ant-design/issues/31884\n      '&:before': {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: treeTitleHeight / 2,\n        bottom: -treeNodePadding,\n        marginInlineStart: -1,\n        borderInlineEnd: \"1px solid \".concat(token.colorBorder),\n        content: '\"\"'\n      },\n      '&:after': {\n        position: 'absolute',\n        width: treeTitleHeight / 2 * 0.8,\n        height: treeTitleHeight / 2,\n        borderBottom: \"1px solid \".concat(token.colorBorder),\n        content: '\"\"'\n      }\n    }\n  })), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-checkbox\"), {\n    top: 'initial',\n    marginInlineEnd: treeCheckBoxMarginHorizontal,\n    marginBlockStart: treeCheckBoxMarginVertical\n  }), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-node-content-wrapper, \").concat(treeCls, \"-checkbox + span\"), (_$concat$concat = {\n    position: 'relative',\n    zIndex: 'auto',\n    minHeight: treeTitleHeight,\n    margin: 0,\n    padding: \"0 \".concat(token.paddingXS / 2, \"px\"),\n    color: 'inherit',\n    lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n    background: 'transparent',\n    borderRadius: token.borderRadius,\n    cursor: 'pointer',\n    transition: \"all \".concat(token.motionDurationMid, \", border 0s, line-height 0s, box-shadow 0s\"),\n    '&:hover': {\n      backgroundColor: token.controlItemBgHover\n    }\n  }, _defineProperty(_$concat$concat, \"&\".concat(treeCls, \"-node-selected\"), {\n    backgroundColor: token.controlItemBgActive\n  }), _defineProperty(_$concat$concat, \"\".concat(treeCls, \"-iconEle\"), {\n    display: 'inline-block',\n    width: treeTitleHeight,\n    height: treeTitleHeight,\n    lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n    textAlign: 'center',\n    verticalAlign: 'top',\n    '&:empty': {\n      display: 'none'\n    }\n  }), _$concat$concat)), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-unselectable \").concat(treeCls, \"-node-content-wrapper:hover\"), {\n    backgroundColor: 'transparent'\n  }), _defineProperty(_Object$assign, \"\".concat(treeCls, \"-node-content-wrapper\"), Object.assign({\n    lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n    userSelect: 'none'\n  }, getDropIndicatorStyle(prefixCls, token))), _defineProperty(_Object$assign, \"\".concat(treeNodeCls, \".drop-container\"), {\n    '> [draggable]': {\n      boxShadow: \"0 0 0 2px \".concat(token.colorPrimary)\n    }\n  }), _defineProperty(_Object$assign, '&-show-line', (_showLine = {}, _defineProperty(_showLine, \"\".concat(treeCls, \"-indent\"), {\n    '&-unit': {\n      position: 'relative',\n      height: '100%',\n      '&:before': {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: treeTitleHeight / 2,\n        bottom: -treeNodePadding,\n        borderInlineEnd: \"1px solid \".concat(token.colorBorder),\n        content: '\"\"'\n      },\n      '&-end': {\n        '&:before': {\n          display: 'none'\n        }\n      }\n    }\n  }), _defineProperty(_showLine, \"\".concat(treeCls, \"-switcher\"), {\n    background: 'transparent',\n    '&-line-icon': {\n      // https://github.com/ant-design/ant-design/issues/32813\n      verticalAlign: '-0.15em'\n    }\n  }), _showLine)), _defineProperty(_Object$assign, \"\".concat(treeNodeCls, \"-leaf-last\"), _defineProperty({}, \"\".concat(treeCls, \"-switcher\"), {\n    '&-leaf-line': {\n      '&:before': {\n        top: 'auto !important',\n        bottom: 'auto !important',\n        height: \"\".concat(treeTitleHeight / 2, \"px !important\")\n      }\n    }\n  })), _Object$assign)));\n}; // ============================ Directory =============================\n\nexport var genDirectoryStyle = function genDirectoryStyle(token) {\n  var _selected, _treeNodeCls;\n\n  var treeCls = token.treeCls,\n      treeNodeCls = token.treeNodeCls,\n      treeNodePadding = token.treeNodePadding;\n  return _defineProperty({}, \"\".concat(treeCls).concat(treeCls, \"-directory\"), _defineProperty({}, treeNodeCls, (_treeNodeCls = {\n    position: 'relative',\n    // Hover color\n    '&:before': {\n      position: 'absolute',\n      top: 0,\n      insetInlineEnd: 0,\n      bottom: treeNodePadding,\n      insetInlineStart: 0,\n      transition: \"background-color \".concat(token.motionDurationMid),\n      content: '\"\"',\n      pointerEvents: 'none'\n    },\n    '&:hover': {\n      '&:before': {\n        background: token.controlItemBgHover\n      }\n    },\n    // Elements\n    '> *': {\n      zIndex: 1\n    }\n  }, _defineProperty(_treeNodeCls, \"\".concat(treeCls, \"-switcher\"), {\n    transition: \"color \".concat(token.motionDurationMid)\n  }), _defineProperty(_treeNodeCls, \"\".concat(treeCls, \"-node-content-wrapper\"), _defineProperty({\n    borderRadius: 0,\n    userSelect: 'none',\n    '&:hover': {\n      background: 'transparent'\n    }\n  }, \"&\".concat(treeCls, \"-node-selected\"), {\n    color: token.colorTextLightSolid,\n    background: 'transparent'\n  })), _defineProperty(_treeNodeCls, '&-selected', (_selected = {}, _defineProperty(_selected, \"\\n            &:hover::before,\\n            &::before\\n          \", {\n    background: token.colorPrimary\n  }), _defineProperty(_selected, \"\".concat(treeCls, \"-switcher\"), {\n    color: token.colorTextLightSolid\n  }), _defineProperty(_selected, \"\".concat(treeCls, \"-node-content-wrapper\"), {\n    color: token.colorTextLightSolid,\n    background: 'transparent'\n  }), _selected)), _treeNodeCls)));\n}; // ============================== Merged ==============================\n\nexport var genTreeStyle = function genTreeStyle(prefixCls, token) {\n  var treeCls = \".\".concat(prefixCls);\n  var treeNodeCls = \"\".concat(treeCls, \"-treenode\");\n  var treeNodePadding = token.paddingXS / 2;\n  var treeTitleHeight = token.controlHeightSM;\n  var treeToken = mergeToken(token, {\n    treeCls: treeCls,\n    treeNodeCls: treeNodeCls,\n    treeNodePadding: treeNodePadding,\n    treeTitleHeight: treeTitleHeight\n  });\n  return [// Basic\n  genBaseStyle(prefixCls, treeToken), // Directory\n  genDirectoryStyle(treeToken)];\n}; // ============================== Export ==============================\n\nexport default genComponentStyleHook('Tree', function (token, _ref) {\n  var prefixCls = _ref.prefixCls;\n  return [_defineProperty({}, token.componentCls, getCheckboxStyle(\"\".concat(prefixCls, \"-checkbox\"), token)), genTreeStyle(prefixCls, token), genCollapseMotion(token)];\n});","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/tree/style/index.js"],"names":["Keyframes","genCollapseMotion","getStyle","getCheckboxStyle","genComponentStyleHook","mergeToken","genFocusOutline","resetComponent","treeNodeFX","opacity","getSwitchStyle","prefixCls","token","display","fontSize","verticalAlign","svg","transition","motionDurationSlow","getDropIndicatorStyle","position","zIndex","height","backgroundColor","colorPrimary","borderRadius","pointerEvents","top","insetInlineStart","width","border","lineWidthBold","content","genBaseStyle","treeCls","treeNodeCls","treeNodePadding","treeTitleHeight","treeCheckBoxMarginVertical","fontSizeLG","treeCheckBoxMarginHorizontal","paddingXS","Object","assign","background","colorBgContainer","transform","alignItems","flex","insetInlineEnd","bottom","animationName","animationDuration","animationPlayState","animationFillMode","padding","outline","direction","color","colorTextDisabled","cursor","fontWeight","lineHeight","textAlign","visibility","alignSelf","whiteSpace","userSelect","margin","marginInlineStart","borderInlineEnd","colorBorder","borderBottom","marginInlineEnd","marginBlockStart","minHeight","motionDurationMid","controlItemBgHover","controlItemBgActive","boxShadow","genDirectoryStyle","colorTextLightSolid","genTreeStyle","controlHeightSM","treeToken","_ref","componentCls"],"mappings":"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","sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { genCollapseMotion } from '../../style/motion';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genFocusOutline, resetComponent } from '../../style';\n// ============================ Keyframes =============================\nconst treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\n// ============================== Switch ==============================\nconst getSwitchStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-switcher-icon`]: {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: `transform ${token.motionDurationSlow}`\n    }\n  }\n});\n// =============================== Drop ===============================\nconst getDropIndicatorStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-drop-indicator`]: {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: `${token.lineWidthBold}px solid ${token.colorPrimary}`,\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  }\n});\nexport const genBaseStyle = (prefixCls, token) => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  } = token;\n  const treeCheckBoxMarginVertical = (treeTitleHeight - token.fontSizeLG) / 2;\n  const treeCheckBoxMarginHorizontal = token.paddingXS;\n  return {\n    [treeCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadius,\n      transition: `background-color ${token.motionDurationSlow}`,\n      [`&${treeCls}-rtl`]: {\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          '&_close': {\n            [`${treeCls}-switcher-icon`]: {\n              svg: {\n                transform: 'rotate(90deg)'\n              }\n            }\n          }\n        }\n      },\n      [`&-focused:not(:hover):not(${treeCls}-active-focused)`]: Object.assign({}, genFocusOutline(token)),\n      // =================== Virtual List ===================\n      [`${treeCls}-list-holder-inner`]: {\n        alignItems: 'flex-start'\n      },\n      [`&${treeCls}-block-node`]: {\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            flex: 'auto'\n          },\n          // >>> Drag\n          [`${treeNodeCls}.dragging`]: {\n            position: 'relative',\n            '&:after': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: 0,\n              bottom: treeNodePadding,\n              insetInlineStart: 0,\n              border: `1px solid ${token.colorPrimary}`,\n              opacity: 0,\n              animationName: treeNodeFX,\n              animationDuration: token.motionDurationSlow,\n              animationPlayState: 'running',\n              animationFillMode: 'forwards',\n              content: '\"\"',\n              pointerEvents: 'none'\n            }\n          }\n        }\n      },\n      // ===================== TreeNode =====================\n      [`${treeNodeCls}`]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        padding: `0 0 ${treeNodePadding}px 0`,\n        outline: 'none',\n        '&-rtl': {\n          direction: 'rtl'\n        },\n        // Disabled\n        '&-disabled': {\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextDisabled,\n            cursor: 'not-allowed',\n            '&:hover': {\n              background: 'transparent'\n            }\n          }\n        },\n        [`&-active ${treeCls}-node-content-wrapper`]: Object.assign({}, genFocusOutline(token)),\n        [`&:not(${treeNodeCls}-disabled).filter-node ${treeCls}-title`]: {\n          color: 'inherit',\n          fontWeight: 500\n        },\n        '&-draggable': {\n          [`${treeCls}-draggable-icon`]: {\n            width: treeTitleHeight,\n            lineHeight: `${treeTitleHeight}px`,\n            textAlign: 'center',\n            visibility: 'visible',\n            opacity: 0.2,\n            transition: `opacity ${token.motionDurationSlow}`,\n            [`${treeNodeCls}:hover &`]: {\n              opacity: 0.45\n            }\n          },\n          [`&${treeNodeCls}-disabled`]: {\n            [`${treeCls}-draggable-icon`]: {\n              visibility: 'hidden'\n            }\n          }\n        }\n      },\n      // >>> Indent\n      [`${treeCls}-indent`]: {\n        alignSelf: 'stretch',\n        whiteSpace: 'nowrap',\n        userSelect: 'none',\n        '&-unit': {\n          display: 'inline-block',\n          width: treeTitleHeight\n        }\n      },\n      // >>> Drag Handler\n      [`${treeCls}-draggable-icon`]: {\n        visibility: 'hidden'\n      },\n      // >>> Switcher\n      [`${treeCls}-switcher`]: Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), {\n        position: 'relative',\n        flex: 'none',\n        alignSelf: 'stretch',\n        width: treeTitleHeight,\n        margin: 0,\n        lineHeight: `${treeTitleHeight}px`,\n        textAlign: 'center',\n        cursor: 'pointer',\n        userSelect: 'none',\n        '&-noop': {\n          cursor: 'default'\n        },\n        '&_close': {\n          [`${treeCls}-switcher-icon`]: {\n            svg: {\n              transform: 'rotate(-90deg)'\n            }\n          }\n        },\n        '&-loading-icon': {\n          color: token.colorPrimary\n        },\n        '&-leaf-line': {\n          position: 'relative',\n          zIndex: 1,\n          display: 'inline-block',\n          width: '100%',\n          height: '100%',\n          // https://github.com/ant-design/ant-design/issues/31884\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: treeTitleHeight / 2,\n            bottom: -treeNodePadding,\n            marginInlineStart: -1,\n            borderInlineEnd: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          },\n          '&:after': {\n            position: 'absolute',\n            width: treeTitleHeight / 2 * 0.8,\n            height: treeTitleHeight / 2,\n            borderBottom: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          }\n        }\n      }),\n      // >>> Checkbox\n      [`${treeCls}-checkbox`]: {\n        top: 'initial',\n        marginInlineEnd: treeCheckBoxMarginHorizontal,\n        marginBlockStart: treeCheckBoxMarginVertical\n      },\n      // >>> Title\n      // add `${treeCls}-checkbox + span` to cover checkbox `${checkboxCls} + span`\n      [`${treeCls}-node-content-wrapper, ${treeCls}-checkbox + span`]: {\n        position: 'relative',\n        zIndex: 'auto',\n        minHeight: treeTitleHeight,\n        margin: 0,\n        padding: `0 ${token.paddingXS / 2}px`,\n        color: 'inherit',\n        lineHeight: `${treeTitleHeight}px`,\n        background: 'transparent',\n        borderRadius: token.borderRadius,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}, border 0s, line-height 0s, box-shadow 0s`,\n        '&:hover': {\n          backgroundColor: token.controlItemBgHover\n        },\n        [`&${treeCls}-node-selected`]: {\n          backgroundColor: token.controlItemBgActive\n        },\n        // Icon\n        [`${treeCls}-iconEle`]: {\n          display: 'inline-block',\n          width: treeTitleHeight,\n          height: treeTitleHeight,\n          lineHeight: `${treeTitleHeight}px`,\n          textAlign: 'center',\n          verticalAlign: 'top',\n          '&:empty': {\n            display: 'none'\n          }\n        }\n      },\n      // https://github.com/ant-design/ant-design/issues/28217\n      [`${treeCls}-unselectable ${treeCls}-node-content-wrapper:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      // ==================== Draggable =====================\n      [`${treeCls}-node-content-wrapper`]: Object.assign({\n        lineHeight: `${treeTitleHeight}px`,\n        userSelect: 'none'\n      }, getDropIndicatorStyle(prefixCls, token)),\n      [`${treeNodeCls}.drop-container`]: {\n        '> [draggable]': {\n          boxShadow: `0 0 0 2px ${token.colorPrimary}`\n        }\n      },\n      // ==================== Show Line =====================\n      '&-show-line': {\n        // ================ Indent lines ================\n        [`${treeCls}-indent`]: {\n          '&-unit': {\n            position: 'relative',\n            height: '100%',\n            '&:before': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: treeTitleHeight / 2,\n              bottom: -treeNodePadding,\n              borderInlineEnd: `1px solid ${token.colorBorder}`,\n              content: '\"\"'\n            },\n            '&-end': {\n              '&:before': {\n                display: 'none'\n              }\n            }\n          }\n        },\n        // ============== Cover Background ==============\n        [`${treeCls}-switcher`]: {\n          background: 'transparent',\n          '&-line-icon': {\n            // https://github.com/ant-design/ant-design/issues/32813\n            verticalAlign: '-0.15em'\n          }\n        }\n      },\n      [`${treeNodeCls}-leaf-last`]: {\n        [`${treeCls}-switcher`]: {\n          '&-leaf-line': {\n            '&:before': {\n              top: 'auto !important',\n              bottom: 'auto !important',\n              height: `${treeTitleHeight / 2}px !important`\n            }\n          }\n        }\n      }\n    })\n  };\n};\n// ============================ Directory =============================\nexport const genDirectoryStyle = token => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding\n  } = token;\n  return {\n    [`${treeCls}${treeCls}-directory`]: {\n      // ================== TreeNode ==================\n      [treeNodeCls]: {\n        position: 'relative',\n        // Hover color\n        '&:before': {\n          position: 'absolute',\n          top: 0,\n          insetInlineEnd: 0,\n          bottom: treeNodePadding,\n          insetInlineStart: 0,\n          transition: `background-color ${token.motionDurationMid}`,\n          content: '\"\"',\n          pointerEvents: 'none'\n        },\n        '&:hover': {\n          '&:before': {\n            background: token.controlItemBgHover\n          }\n        },\n        // Elements\n        '> *': {\n          zIndex: 1\n        },\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          transition: `color ${token.motionDurationMid}`\n        },\n        // >>> Title\n        [`${treeCls}-node-content-wrapper`]: {\n          borderRadius: 0,\n          userSelect: 'none',\n          '&:hover': {\n            background: 'transparent'\n          },\n          [`&${treeCls}-node-selected`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        },\n        // ============= Selected =============\n        '&-selected': {\n          [`\n            &:hover::before,\n            &::before\n          `]: {\n            background: token.colorPrimary\n          },\n          // >>> Switcher\n          [`${treeCls}-switcher`]: {\n            color: token.colorTextLightSolid\n          },\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        }\n      }\n    }\n  };\n};\n// ============================== Merged ==============================\nexport const genTreeStyle = (prefixCls, token) => {\n  const treeCls = `.${prefixCls}`;\n  const treeNodeCls = `${treeCls}-treenode`;\n  const treeNodePadding = token.paddingXS / 2;\n  const treeTitleHeight = token.controlHeightSM;\n  const treeToken = mergeToken(token, {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  });\n  return [\n  // Basic\n  genBaseStyle(prefixCls, treeToken),\n  // Directory\n  genDirectoryStyle(treeToken)];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tree', (token, _ref) => {\n  let {\n    prefixCls\n  } = _ref;\n  return [{\n    [token.componentCls]: getCheckboxStyle(`${prefixCls}-checkbox`, token)\n  }, genTreeStyle(prefixCls, token), genCollapseMotion(token)];\n});"]},"metadata":{},"sourceType":"module"}