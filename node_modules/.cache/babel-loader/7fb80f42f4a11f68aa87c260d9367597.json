{"ast":null,"code":"import { fillRef, supportRef, useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nvar TriggerWrapper = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n      getTriggerDOMNode = props.getTriggerDOMNode;\n  var canUseRef = supportRef(children); // When use `getTriggerDOMNode`, we should do additional work to get the real dom\n\n  var setRef = React.useCallback(function (node) {\n    fillRef(ref, getTriggerDOMNode ? getTriggerDOMNode(node) : node);\n  }, [getTriggerDOMNode]);\n  var mergedRef = useComposeRef(setRef, children.ref);\n  return canUseRef ? /*#__PURE__*/React.cloneElement(children, {\n    ref: mergedRef\n  }) : children;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  TriggerWrapper.displayName = 'TriggerWrapper';\n}\n\nexport default TriggerWrapper;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/@rc-component/trigger/es/TriggerWrapper.js"],"names":["fillRef","supportRef","useComposeRef","React","TriggerWrapper","forwardRef","props","ref","children","getTriggerDOMNode","canUseRef","setRef","useCallback","node","mergedRef","cloneElement","process","env","NODE_ENV","displayName"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,UAAlB,EAA8BC,aAA9B,QAAmD,gBAAnD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,IAAIC,cAAc,GAAG,aAAaD,KAAK,CAACE,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACvE,MAAIC,QAAQ,GAAGF,KAAK,CAACE,QAArB;AAAA,MACEC,iBAAiB,GAAGH,KAAK,CAACG,iBAD5B;AAEA,MAAIC,SAAS,GAAGT,UAAU,CAACO,QAAD,CAA1B,CAHuE,CAKvE;;AACA,MAAIG,MAAM,GAAGR,KAAK,CAACS,WAAN,CAAkB,UAAUC,IAAV,EAAgB;AAC7Cb,IAAAA,OAAO,CAACO,GAAD,EAAME,iBAAiB,GAAGA,iBAAiB,CAACI,IAAD,CAApB,GAA6BA,IAApD,CAAP;AACD,GAFY,EAEV,CAACJ,iBAAD,CAFU,CAAb;AAGA,MAAIK,SAAS,GAAGZ,aAAa,CAACS,MAAD,EAASH,QAAQ,CAACD,GAAlB,CAA7B;AACA,SAAOG,SAAS,GAAG,aAAaP,KAAK,CAACY,YAAN,CAAmBP,QAAnB,EAA6B;AAC3DD,IAAAA,GAAG,EAAEO;AADsD,GAA7B,CAAhB,GAEXN,QAFL;AAGD,CAbiC,CAAlC;;AAcA,IAAIQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCd,EAAAA,cAAc,CAACe,WAAf,GAA6B,gBAA7B;AACD;;AACD,eAAef,cAAf","sourcesContent":["import { fillRef, supportRef, useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nvar TriggerWrapper = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n    getTriggerDOMNode = props.getTriggerDOMNode;\n  var canUseRef = supportRef(children);\n\n  // When use `getTriggerDOMNode`, we should do additional work to get the real dom\n  var setRef = React.useCallback(function (node) {\n    fillRef(ref, getTriggerDOMNode ? getTriggerDOMNode(node) : node);\n  }, [getTriggerDOMNode]);\n  var mergedRef = useComposeRef(setRef, children.ref);\n  return canUseRef ? /*#__PURE__*/React.cloneElement(children, {\n    ref: mergedRef\n  }) : children;\n});\nif (process.env.NODE_ENV !== 'production') {\n  TriggerWrapper.displayName = 'TriggerWrapper';\n}\nexport default TriggerWrapper;"]},"metadata":{},"sourceType":"module"}