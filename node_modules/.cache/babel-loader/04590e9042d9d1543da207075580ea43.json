{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\n\nfunction notEmpty(val) {\n  return val !== undefined && val !== null;\n}\n\nconst Cell = _ref => {\n  let {\n    itemPrefixCls,\n    component,\n    span,\n    className,\n    style,\n    labelStyle,\n    contentStyle,\n    bordered,\n    label,\n    content,\n    colon\n  } = _ref;\n  const Component = component;\n\n  if (bordered) {\n    return /*#__PURE__*/React.createElement(Component, {\n      className: classNames({\n        [`${itemPrefixCls}-item-label`]: notEmpty(label),\n        [`${itemPrefixCls}-item-content`]: notEmpty(content)\n      }, className),\n      style: style,\n      colSpan: span\n    }, notEmpty(label) && /*#__PURE__*/React.createElement(\"span\", {\n      style: labelStyle\n    }, label), notEmpty(content) && /*#__PURE__*/React.createElement(\"span\", {\n      style: contentStyle\n    }, content));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, {\n    className: classNames(`${itemPrefixCls}-item`, className),\n    style: style,\n    colSpan: span\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${itemPrefixCls}-item-container`\n  }, (label || label === 0) && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(`${itemPrefixCls}-item-label`, {\n      [`${itemPrefixCls}-item-no-colon`]: !colon\n    }),\n    style: labelStyle\n  }, label), (content || content === 0) && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(`${itemPrefixCls}-item-content`),\n    style: contentStyle\n  }, content)));\n};\n\nexport default Cell;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/descriptions/Cell.js"],"names":["classNames","React","notEmpty","val","undefined","Cell","_ref","itemPrefixCls","component","span","className","style","labelStyle","contentStyle","bordered","label","content","colon","Component","createElement","colSpan"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AACA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAOA,GAAG,KAAKC,SAAR,IAAqBD,GAAG,KAAK,IAApC;AACD;;AACD,MAAME,IAAI,GAAGC,IAAI,IAAI;AACnB,MAAI;AACFC,IAAAA,aADE;AAEFC,IAAAA,SAFE;AAGFC,IAAAA,IAHE;AAIFC,IAAAA,SAJE;AAKFC,IAAAA,KALE;AAMFC,IAAAA,UANE;AAOFC,IAAAA,YAPE;AAQFC,IAAAA,QARE;AASFC,IAAAA,KATE;AAUFC,IAAAA,OAVE;AAWFC,IAAAA;AAXE,MAYAX,IAZJ;AAaA,QAAMY,SAAS,GAAGV,SAAlB;;AACA,MAAIM,QAAJ,EAAc;AACZ,WAAO,aAAab,KAAK,CAACkB,aAAN,CAAoBD,SAApB,EAA+B;AACjDR,MAAAA,SAAS,EAAEV,UAAU,CAAC;AACpB,SAAE,GAAEO,aAAc,aAAlB,GAAiCL,QAAQ,CAACa,KAAD,CADrB;AAEpB,SAAE,GAAER,aAAc,eAAlB,GAAmCL,QAAQ,CAACc,OAAD;AAFvB,OAAD,EAGlBN,SAHkB,CAD4B;AAKjDC,MAAAA,KAAK,EAAEA,KAL0C;AAMjDS,MAAAA,OAAO,EAAEX;AANwC,KAA/B,EAOjBP,QAAQ,CAACa,KAAD,CAAR,IAAmB,aAAad,KAAK,CAACkB,aAAN,CAAoB,MAApB,EAA4B;AAC7DR,MAAAA,KAAK,EAAEC;AADsD,KAA5B,EAEhCG,KAFgC,CAPf,EASTb,QAAQ,CAACc,OAAD,CAAR,IAAqB,aAAaf,KAAK,CAACkB,aAAN,CAAoB,MAApB,EAA4B;AACvER,MAAAA,KAAK,EAAEE;AADgE,KAA5B,EAE1CG,OAF0C,CATzB,CAApB;AAYD;;AACD,SAAO,aAAaf,KAAK,CAACkB,aAAN,CAAoBD,SAApB,EAA+B;AACjDR,IAAAA,SAAS,EAAEV,UAAU,CAAE,GAAEO,aAAc,OAAlB,EAA0BG,SAA1B,CAD4B;AAEjDC,IAAAA,KAAK,EAAEA,KAF0C;AAGjDS,IAAAA,OAAO,EAAEX;AAHwC,GAA/B,EAIjB,aAAaR,KAAK,CAACkB,aAAN,CAAoB,KAApB,EAA2B;AACzCT,IAAAA,SAAS,EAAG,GAAEH,aAAc;AADa,GAA3B,EAEb,CAACQ,KAAK,IAAIA,KAAK,KAAK,CAApB,KAA0B,aAAad,KAAK,CAACkB,aAAN,CAAoB,MAApB,EAA4B;AACpET,IAAAA,SAAS,EAAEV,UAAU,CAAE,GAAEO,aAAc,aAAlB,EAAgC;AACnD,OAAE,GAAEA,aAAc,gBAAlB,GAAoC,CAACU;AADc,KAAhC,CAD+C;AAIpEN,IAAAA,KAAK,EAAEC;AAJ6D,GAA5B,EAKvCG,KALuC,CAF1B,EAOL,CAACC,OAAO,IAAIA,OAAO,KAAK,CAAxB,KAA8B,aAAaf,KAAK,CAACkB,aAAN,CAAoB,MAApB,EAA4B;AAChFT,IAAAA,SAAS,EAAEV,UAAU,CAAE,GAAEO,aAAc,eAAlB,CAD2D;AAEhFI,IAAAA,KAAK,EAAEE;AAFyE,GAA5B,EAGnDG,OAHmD,CAPtC,CAJI,CAApB;AAeD,CA5CD;;AA6CA,eAAeX,IAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nfunction notEmpty(val) {\n  return val !== undefined && val !== null;\n}\nconst Cell = _ref => {\n  let {\n    itemPrefixCls,\n    component,\n    span,\n    className,\n    style,\n    labelStyle,\n    contentStyle,\n    bordered,\n    label,\n    content,\n    colon\n  } = _ref;\n  const Component = component;\n  if (bordered) {\n    return /*#__PURE__*/React.createElement(Component, {\n      className: classNames({\n        [`${itemPrefixCls}-item-label`]: notEmpty(label),\n        [`${itemPrefixCls}-item-content`]: notEmpty(content)\n      }, className),\n      style: style,\n      colSpan: span\n    }, notEmpty(label) && /*#__PURE__*/React.createElement(\"span\", {\n      style: labelStyle\n    }, label), notEmpty(content) && /*#__PURE__*/React.createElement(\"span\", {\n      style: contentStyle\n    }, content));\n  }\n  return /*#__PURE__*/React.createElement(Component, {\n    className: classNames(`${itemPrefixCls}-item`, className),\n    style: style,\n    colSpan: span\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${itemPrefixCls}-item-container`\n  }, (label || label === 0) && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(`${itemPrefixCls}-item-label`, {\n      [`${itemPrefixCls}-item-no-colon`]: !colon\n    }),\n    style: labelStyle\n  }, label), (content || content === 0) && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(`${itemPrefixCls}-item-content`),\n    style: contentStyle\n  }, content)));\n};\nexport default Cell;"]},"metadata":{},"sourceType":"module"}