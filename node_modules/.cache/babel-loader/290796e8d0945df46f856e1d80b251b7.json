{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonNode from './Node';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport Paragraph from './Paragraph';\nimport Title from './Title';\nimport useStyle from './style';\n\nfunction getComponentProps(prop) {\n  if (prop && typeof prop === 'object') {\n    return prop;\n  }\n\n  return {};\n}\n\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\n\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n\n  return {};\n}\n\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {}; // Width\n\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  } // Rows\n\n\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n\n  return basicProps;\n}\n\nvar Skeleton = function Skeleton(props) {\n  var customizePrefixCls = props.prefixCls,\n      loading = props.loading,\n      className = props.className,\n      rootClassName = props.rootClassName,\n      style = props.style,\n      children = props.children,\n      _props$avatar = props.avatar,\n      avatar = _props$avatar === void 0 ? false : _props$avatar,\n      _props$title = props.title,\n      title = _props$title === void 0 ? true : _props$title,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? true : _props$paragraph,\n      active = props.active,\n      round = props.round;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1];\n\n  if (loading || !('loading' in props)) {\n    var _classNames;\n\n    var hasAvatar = !!avatar;\n    var hasTitle = !!title;\n    var hasParagraph = !!paragraph; // Avatar\n\n    var avatarNode;\n\n    if (hasAvatar) {\n      var avatarProps = Object.assign(Object.assign({\n        prefixCls: \"\".concat(prefixCls, \"-avatar\")\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar)); // We direct use SkeletonElement as avatar in skeleton internal.\n\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-header\")\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({}, avatarProps)));\n    }\n\n    var contentNode;\n\n    if (hasTitle || hasParagraph) {\n      // Title\n      var $title;\n\n      if (hasTitle) {\n        var titleProps = Object.assign(Object.assign({\n          prefixCls: \"\".concat(prefixCls, \"-title\")\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n        $title = /*#__PURE__*/React.createElement(Title, Object.assign({}, titleProps));\n      } // Paragraph\n\n\n      var paragraphNode;\n\n      if (hasParagraph) {\n        var paragraphProps = Object.assign(Object.assign({\n          prefixCls: \"\".concat(prefixCls, \"-paragraph\")\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, Object.assign({}, paragraphProps));\n      }\n\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-content\")\n      }, $title, paragraphNode);\n    }\n\n    var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-avatar\"), hasAvatar), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active\"), active), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-round\"), round), _classNames), className, rootClassName, hashId);\n    return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, avatarNode, contentNode));\n  }\n\n  return typeof children !== 'undefined' ? children : null;\n};\n\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\n\nif (process.env.NODE_ENV !== 'production') {\n  Skeleton.displayName = 'Skeleton';\n}\n\nexport default Skeleton;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/skeleton/Skeleton.js"],"names":["classNames","React","ConfigContext","SkeletonAvatar","SkeletonButton","SkeletonNode","Element","SkeletonImage","SkeletonInput","Paragraph","Title","useStyle","getComponentProps","prop","getAvatarBasicProps","hasTitle","hasParagraph","size","shape","getTitleBasicProps","hasAvatar","width","getParagraphBasicProps","basicProps","rows","Skeleton","props","customizePrefixCls","prefixCls","loading","className","rootClassName","style","children","avatar","title","paragraph","active","round","useContext","getPrefixCls","direction","wrapSSR","hashId","avatarNode","avatarProps","Object","assign","createElement","contentNode","$title","titleProps","paragraphNode","paragraphProps","cls","Button","Avatar","Input","Image","Node","process","env","NODE_ENV","displayName"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,cAAP,MAA2B,UAA3B;AACA,OAAOC,cAAP,MAA2B,UAA3B;AACA,OAAOC,YAAP,MAAyB,QAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,SAArB;;AACA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,MAAIA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;AACpC,WAAOA,IAAP;AACD;;AACD,SAAO,EAAP;AACD;;AACD,SAASC,mBAAT,CAA6BC,QAA7B,EAAuCC,YAAvC,EAAqD;AACnD,MAAID,QAAQ,IAAI,CAACC,YAAjB,EAA+B;AAC7B;AACA,WAAO;AACLC,MAAAA,IAAI,EAAE,OADD;AAELC,MAAAA,KAAK,EAAE;AAFF,KAAP;AAID;;AACD,SAAO;AACLD,IAAAA,IAAI,EAAE,OADD;AAELC,IAAAA,KAAK,EAAE;AAFF,GAAP;AAID;;AACD,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCJ,YAAvC,EAAqD;AACnD,MAAI,CAACI,SAAD,IAAcJ,YAAlB,EAAgC;AAC9B,WAAO;AACLK,MAAAA,KAAK,EAAE;AADF,KAAP;AAGD;;AACD,MAAID,SAAS,IAAIJ,YAAjB,EAA+B;AAC7B,WAAO;AACLK,MAAAA,KAAK,EAAE;AADF,KAAP;AAGD;;AACD,SAAO,EAAP;AACD;;AACD,SAASC,sBAAT,CAAgCF,SAAhC,EAA2CL,QAA3C,EAAqD;AACnD,MAAMQ,UAAU,GAAG,EAAnB,CADmD,CAEnD;;AACA,MAAI,CAACH,SAAD,IAAc,CAACL,QAAnB,EAA6B;AAC3BQ,IAAAA,UAAU,CAACF,KAAX,GAAmB,KAAnB;AACD,GALkD,CAMnD;;;AACA,MAAI,CAACD,SAAD,IAAcL,QAAlB,EAA4B;AAC1BQ,IAAAA,UAAU,CAACC,IAAX,GAAkB,CAAlB;AACD,GAFD,MAEO;AACLD,IAAAA,UAAU,CAACC,IAAX,GAAkB,CAAlB;AACD;;AACD,SAAOD,UAAP;AACD;;AACD,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,MACaC,kBADb,GAYID,KAZJ,CACEE,SADF;AAAA,MAEEC,OAFF,GAYIH,KAZJ,CAEEG,OAFF;AAAA,MAGEC,SAHF,GAYIJ,KAZJ,CAGEI,SAHF;AAAA,MAIEC,aAJF,GAYIL,KAZJ,CAIEK,aAJF;AAAA,MAKEC,KALF,GAYIN,KAZJ,CAKEM,KALF;AAAA,MAMEC,QANF,GAYIP,KAZJ,CAMEO,QANF;AAAA,sBAYIP,KAZJ,CAOEQ,MAPF;AAAA,MAOEA,MAPF,8BAOW,KAPX;AAAA,qBAYIR,KAZJ,CAQES,KARF;AAAA,MAQEA,KARF,6BAQU,IARV;AAAA,yBAYIT,KAZJ,CASEU,SATF;AAAA,MASEA,SATF,iCASc,IATd;AAAA,MAUEC,MAVF,GAYIX,KAZJ,CAUEW,MAVF;AAAA,MAWEC,KAXF,GAYIZ,KAZJ,CAWEY,KAXF;;AAaA,0BAGIrC,KAAK,CAACsC,UAAN,CAAiBrC,aAAjB,CAHJ;AAAA,MACEsC,YADF,qBACEA,YADF;AAAA,MAEEC,SAFF,qBAEEA,SAFF;;AAIA,MAAMb,SAAS,GAAGY,YAAY,CAAC,UAAD,EAAab,kBAAb,CAA9B;;AACA,kBAA0BhB,QAAQ,CAACiB,SAAD,CAAlC;AAAA;AAAA,MAAOc,OAAP;AAAA,MAAgBC,MAAhB;;AACA,MAAId,OAAO,IAAI,EAAE,aAAaH,KAAf,CAAf,EAAsC;AAAA;;AACpC,QAAMN,SAAS,GAAG,CAAC,CAACc,MAApB;AACA,QAAMnB,QAAQ,GAAG,CAAC,CAACoB,KAAnB;AACA,QAAMnB,YAAY,GAAG,CAAC,CAACoB,SAAvB,CAHoC,CAIpC;;AACA,QAAIQ,UAAJ;;AACA,QAAIxB,SAAJ,EAAe;AACb,UAAMyB,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc;AAC9CnB,QAAAA,SAAS,YAAKA,SAAL;AADqC,OAAd,EAE/Bd,mBAAmB,CAACC,QAAD,EAAWC,YAAX,CAFY,CAAd,EAE6BJ,iBAAiB,CAACsB,MAAD,CAF9C,CAApB,CADa,CAIb;;AACAU,MAAAA,UAAU,GAAG,aAAa3C,KAAK,CAAC+C,aAAN,CAAoB,KAApB,EAA2B;AACnDlB,QAAAA,SAAS,YAAKF,SAAL;AAD0C,OAA3B,EAEvB,aAAa3B,KAAK,CAAC+C,aAAN,CAAoB1C,OAApB,EAA6BwC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,WAAlB,CAA7B,CAFU,CAA1B;AAGD;;AACD,QAAII,WAAJ;;AACA,QAAIlC,QAAQ,IAAIC,YAAhB,EAA8B;AAC5B;AACA,UAAIkC,MAAJ;;AACA,UAAInC,QAAJ,EAAc;AACZ,YAAMoC,UAAU,GAAGL,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc;AAC7CnB,UAAAA,SAAS,YAAKA,SAAL;AADoC,SAAd,EAE9BT,kBAAkB,CAACC,SAAD,EAAYJ,YAAZ,CAFY,CAAd,EAE8BJ,iBAAiB,CAACuB,KAAD,CAF/C,CAAnB;AAGAe,QAAAA,MAAM,GAAG,aAAajD,KAAK,CAAC+C,aAAN,CAAoBtC,KAApB,EAA2BoC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBI,UAAlB,CAA3B,CAAtB;AACD,OAR2B,CAS5B;;;AACA,UAAIC,aAAJ;;AACA,UAAIpC,YAAJ,EAAkB;AAChB,YAAMqC,cAAc,GAAGP,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc;AACjDnB,UAAAA,SAAS,YAAKA,SAAL;AADwC,SAAd,EAElCN,sBAAsB,CAACF,SAAD,EAAYL,QAAZ,CAFY,CAAd,EAE0BH,iBAAiB,CAACwB,SAAD,CAF3C,CAAvB;AAGAgB,QAAAA,aAAa,GAAG,aAAanD,KAAK,CAAC+C,aAAN,CAAoBvC,SAApB,EAA+BqC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBM,cAAlB,CAA/B,CAA7B;AACD;;AACDJ,MAAAA,WAAW,GAAG,aAAahD,KAAK,CAAC+C,aAAN,CAAoB,KAApB,EAA2B;AACpDlB,QAAAA,SAAS,YAAKF,SAAL;AAD2C,OAA3B,EAExBsB,MAFwB,EAEhBE,aAFgB,CAA3B;AAGD;;AACD,QAAME,GAAG,GAAGtD,UAAU,CAAC4B,SAAD,4DAChBA,SADgB,mBACUR,SADV,0CAEhBQ,SAFgB,cAEKS,MAFL,0CAGhBT,SAHgB,WAGEa,SAAS,KAAK,KAHhB,0CAIhBb,SAJgB,aAIIU,KAJJ,iBAKnBR,SALmB,EAKRC,aALQ,EAKOY,MALP,CAAtB;AAMA,WAAOD,OAAO,EAAE,aAAazC,KAAK,CAAC+C,aAAN,CAAoB,KAApB,EAA2B;AACtDlB,MAAAA,SAAS,EAAEwB,GAD2C;AAEtDtB,MAAAA,KAAK,EAAEA;AAF+C,KAA3B,EAG1BY,UAH0B,EAGdK,WAHc,CAAf,CAAd;AAID;;AACD,SAAO,OAAOhB,QAAP,KAAoB,WAApB,GAAkCA,QAAlC,GAA6C,IAApD;AACD,CArED;;AAsEAR,QAAQ,CAAC8B,MAAT,GAAkBnD,cAAlB;AACAqB,QAAQ,CAAC+B,MAAT,GAAkBrD,cAAlB;AACAsB,QAAQ,CAACgC,KAAT,GAAiBjD,aAAjB;AACAiB,QAAQ,CAACiC,KAAT,GAAiBnD,aAAjB;AACAkB,QAAQ,CAACkC,IAAT,GAAgBtD,YAAhB;;AACA,IAAIuD,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCrC,EAAAA,QAAQ,CAACsC,WAAT,GAAuB,UAAvB;AACD;;AACD,eAAetC,QAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonNode from './Node';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport Paragraph from './Paragraph';\nimport Title from './Title';\nimport useStyle from './style';\nfunction getComponentProps(prop) {\n  if (prop && typeof prop === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  const basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nconst Skeleton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    loading,\n    className,\n    rootClassName,\n    style,\n    children,\n    avatar = false,\n    title = true,\n    paragraph = true,\n    active,\n    round\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  if (loading || !('loading' in props)) {\n    const hasAvatar = !!avatar;\n    const hasTitle = !!title;\n    const hasParagraph = !!paragraph;\n    // Avatar\n    let avatarNode;\n    if (hasAvatar) {\n      const avatarProps = Object.assign(Object.assign({\n        prefixCls: `${prefixCls}-avatar`\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n      // We direct use SkeletonElement as avatar in skeleton internal.\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-header`\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({}, avatarProps)));\n    }\n    let contentNode;\n    if (hasTitle || hasParagraph) {\n      // Title\n      let $title;\n      if (hasTitle) {\n        const titleProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-title`\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n        $title = /*#__PURE__*/React.createElement(Title, Object.assign({}, titleProps));\n      }\n      // Paragraph\n      let paragraphNode;\n      if (hasParagraph) {\n        const paragraphProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-paragraph`\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, Object.assign({}, paragraphProps));\n      }\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-content`\n      }, $title, paragraphNode);\n    }\n    const cls = classNames(prefixCls, {\n      [`${prefixCls}-with-avatar`]: hasAvatar,\n      [`${prefixCls}-active`]: active,\n      [`${prefixCls}-rtl`]: direction === 'rtl',\n      [`${prefixCls}-round`]: round\n    }, className, rootClassName, hashId);\n    return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, avatarNode, contentNode));\n  }\n  return typeof children !== 'undefined' ? children : null;\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\nif (process.env.NODE_ENV !== 'production') {\n  Skeleton.displayName = 'Skeleton';\n}\nexport default Skeleton;"]},"metadata":{},"sourceType":"module"}