{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useStyleRegister } from '@ant-design/cssinjs';\nimport { resetIcon } from '../../style';\nimport { useToken } from '../../theme/internal';\n\nvar useStyle = function useStyle(iconPrefixCls, csp) {\n  var _useToken = useToken(),\n      _useToken2 = _slicedToArray(_useToken, 2),\n      theme = _useToken2[0],\n      token = _useToken2[1]; // Generate style for icons\n\n\n  return useStyleRegister({\n    theme: theme,\n    token: token,\n    hashId: '',\n    path: ['ant-design-icons', iconPrefixCls],\n    nonce: function nonce() {\n      return csp === null || csp === void 0 ? void 0 : csp.nonce;\n    }\n  }, function () {\n    return [_defineProperty({}, \".\".concat(iconPrefixCls), Object.assign(Object.assign({}, resetIcon()), _defineProperty({}, \".\".concat(iconPrefixCls, \" .\").concat(iconPrefixCls, \"-icon\"), {\n      display: 'block'\n    })))];\n  });\n};\n\nexport default useStyle;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/config-provider/style/index.js"],"names":["useStyleRegister","resetIcon","useToken","useStyle","iconPrefixCls","csp","theme","token","hashId","path","nonce","Object","assign","display"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,qBAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,sBAAzB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,aAAD,EAAgBC,GAAhB,EAAwB;AACvC,kBAAuBH,QAAQ,EAA/B;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,KAAd,iBADuC,CAEvC;;;AACA,SAAOP,gBAAgB,CAAC;AACtBM,IAAAA,KAAK,EAALA,KADsB;AAEtBC,IAAAA,KAAK,EAALA,KAFsB;AAGtBC,IAAAA,MAAM,EAAE,EAHc;AAItBC,IAAAA,IAAI,EAAE,CAAC,kBAAD,EAAqBL,aAArB,CAJgB;AAKtBM,IAAAA,KAAK,EAAE;AAAA,aAAML,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,KAAK,CAA7B,GAAiC,KAAK,CAAtC,GAA0CA,GAAG,CAACK,KAApD;AAAA;AALe,GAAD,EAMpB;AAAA,WAAM,gCACFN,aADE,GACgBO,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,SAAS,EAA3B,CAAd,iCAChBG,aADgB,eACEA,aADF,YACyB;AAC5CS,MAAAA,OAAO,EAAE;AADmC,KADzB,EADhB,EAAN;AAAA,GANoB,CAAvB;AAaD,CAhBD;;AAiBA,eAAeV,QAAf","sourcesContent":["import { useStyleRegister } from '@ant-design/cssinjs';\nimport { resetIcon } from '../../style';\nimport { useToken } from '../../theme/internal';\nconst useStyle = (iconPrefixCls, csp) => {\n  const [theme, token] = useToken();\n  // Generate style for icons\n  return useStyleRegister({\n    theme,\n    token,\n    hashId: '',\n    path: ['ant-design-icons', iconPrefixCls],\n    nonce: () => csp === null || csp === void 0 ? void 0 : csp.nonce\n  }, () => [{\n    [`.${iconPrefixCls}`]: Object.assign(Object.assign({}, resetIcon()), {\n      [`.${iconPrefixCls} .${iconPrefixCls}-icon`]: {\n        display: 'block'\n      }\n    })\n  }]);\n};\nexport default useStyle;"]},"metadata":{},"sourceType":"module"}