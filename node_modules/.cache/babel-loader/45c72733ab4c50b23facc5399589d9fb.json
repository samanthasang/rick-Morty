{"ast":null,"code":"import _defineProperty from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { ReloadOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport React, { useContext, useMemo } from 'react';\nimport warning from '../_util/warning';\nimport Button from '../button';\nimport { ConfigContext } from '../config-provider';\nimport { useLocale } from '../locale';\nimport Spin from '../spin';\nimport theme from '../theme';\nimport useStyle from './style/index';\nvar useToken = theme.useToken;\n\nvar QRCode = function QRCode(props) {\n  var value = props.value,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? '' : _props$icon,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 160 : _props$size,\n      _props$iconSize = props.iconSize,\n      iconSize = _props$iconSize === void 0 ? 40 : _props$iconSize,\n      _props$color = props.color,\n      color = _props$color === void 0 ? '#000' : _props$color,\n      _props$errorLevel = props.errorLevel,\n      errorLevel = _props$errorLevel === void 0 ? 'M' : _props$errorLevel,\n      _props$status = props.status,\n      status = _props$status === void 0 ? 'active' : _props$status,\n      _props$bordered = props.bordered,\n      bordered = _props$bordered === void 0 ? true : _props$bordered,\n      onRefresh = props.onRefresh,\n      style = props.style,\n      className = props.className,\n      rootClassName = props.rootClassName,\n      customizePrefixCls = props.prefixCls;\n\n  var _useContext = useContext(ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('qrcode', customizePrefixCls);\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1];\n\n  var _useToken = useToken(),\n      token = _useToken.token;\n\n  var qrCodeProps = useMemo(function () {\n    var imageSettings = {\n      src: icon,\n      x: undefined,\n      y: undefined,\n      height: iconSize,\n      width: iconSize,\n      excavate: true\n    };\n    return {\n      value: value,\n      size: size - (token.paddingSM + token.lineWidth) * 2,\n      level: errorLevel,\n      bgColor: 'transparent',\n      fgColor: color,\n      imageSettings: icon ? imageSettings : undefined\n    };\n  }, [errorLevel, color, icon, iconSize, size, value]);\n\n  var _useLocale = useLocale('QRCode'),\n      _useLocale2 = _slicedToArray(_useLocale, 1),\n      locale = _useLocale2[0];\n\n  if (!value) {\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'QRCode', 'need to receive `value` props') : void 0;\n    }\n\n    return null;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(icon && errorLevel === 'L'), 'QRCode', 'ErrorLevel `L` is not recommended to be used with `icon`, for scanning result would be affected by low level.') : void 0;\n  }\n\n  var cls = classNames(prefixCls, className, rootClassName, hashId, _defineProperty({}, \"\".concat(prefixCls, \"-borderless\"), !bordered));\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, style), {\n      width: size,\n      height: size\n    }),\n    className: cls\n  }, status !== 'active' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-mask\")\n  }, status === 'loading' && /*#__PURE__*/React.createElement(Spin, null), status === 'expired' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(prefixCls, \"-expired\")\n  }, locale === null || locale === void 0 ? void 0 : locale.expired), onRefresh && /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale === null || locale === void 0 ? void 0 : locale.refresh))), /*#__PURE__*/React.createElement(QRCodeCanvas, Object.assign({}, qrCodeProps))));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  QRCode.displayName = 'QRCode';\n}\n\nexport default QRCode;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/qrcode/index.js"],"names":["ReloadOutlined","classNames","QRCodeCanvas","React","useContext","useMemo","warning","Button","ConfigContext","useLocale","Spin","theme","useStyle","useToken","QRCode","props","value","icon","size","iconSize","color","errorLevel","status","bordered","onRefresh","style","className","rootClassName","customizePrefixCls","prefixCls","getPrefixCls","wrapSSR","hashId","token","qrCodeProps","imageSettings","src","x","undefined","y","height","width","excavate","paddingSM","lineWidth","level","bgColor","fgColor","locale","process","env","NODE_ENV","cls","createElement","Object","assign","Fragment","expired","type","onClick","refresh","displayName"],"mappings":"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","sourcesContent":["import { ReloadOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport React, { useContext, useMemo } from 'react';\nimport warning from '../_util/warning';\nimport Button from '../button';\nimport { ConfigContext } from '../config-provider';\nimport { useLocale } from '../locale';\nimport Spin from '../spin';\nimport theme from '../theme';\nimport useStyle from './style/index';\nconst {\n  useToken\n} = theme;\nconst QRCode = props => {\n  const {\n    value,\n    icon = '',\n    size = 160,\n    iconSize = 40,\n    color = '#000',\n    errorLevel = 'M',\n    status = 'active',\n    bordered = true,\n    onRefresh,\n    style,\n    className,\n    rootClassName,\n    prefixCls: customizePrefixCls\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('qrcode', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const {\n    token\n  } = useToken();\n  const qrCodeProps = useMemo(() => {\n    const imageSettings = {\n      src: icon,\n      x: undefined,\n      y: undefined,\n      height: iconSize,\n      width: iconSize,\n      excavate: true\n    };\n    return {\n      value,\n      size: size - (token.paddingSM + token.lineWidth) * 2,\n      level: errorLevel,\n      bgColor: 'transparent',\n      fgColor: color,\n      imageSettings: icon ? imageSettings : undefined\n    };\n  }, [errorLevel, color, icon, iconSize, size, value]);\n  const [locale] = useLocale('QRCode');\n  if (!value) {\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'QRCode', 'need to receive `value` props') : void 0;\n    }\n    return null;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(icon && errorLevel === 'L'), 'QRCode', 'ErrorLevel `L` is not recommended to be used with `icon`, for scanning result would be affected by low level.') : void 0;\n  }\n  const cls = classNames(prefixCls, className, rootClassName, hashId, {\n    [`${prefixCls}-borderless`]: !bordered\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, style), {\n      width: size,\n      height: size\n    }),\n    className: cls\n  }, status !== 'active' && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-mask`\n  }, status === 'loading' && /*#__PURE__*/React.createElement(Spin, null), status === 'expired' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: `${prefixCls}-expired`\n  }, locale === null || locale === void 0 ? void 0 : locale.expired), onRefresh && /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale === null || locale === void 0 ? void 0 : locale.refresh))), /*#__PURE__*/React.createElement(QRCodeCanvas, Object.assign({}, qrCodeProps))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  QRCode.displayName = 'QRCode';\n}\nexport default QRCode;"]},"metadata":{},"sourceType":"module"}