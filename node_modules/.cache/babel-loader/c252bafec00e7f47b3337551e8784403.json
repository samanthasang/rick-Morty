{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useNotification as useRcNotification } from 'rc-notification';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport { getPlacementStyle, getMotion } from './util';\nimport warning from '../_util/warning';\nimport useStyle from './style';\nimport { getCloseIcon, PureContent } from './PurePanel';\nconst DEFAULT_OFFSET = 24;\nconst DEFAULT_DURATION = 4.5;\nconst Holder = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    top,\n    bottom,\n    prefixCls: staticPrefixCls,\n    getContainer: staticGetContainer,\n    maxCount,\n    rtl,\n    onAllRemoved\n  } = props;\n  const {\n    getPrefixCls,\n    getPopupContainer\n  } = React.useContext(ConfigContext);\n  const prefixCls = staticPrefixCls || getPrefixCls('notification'); // =============================== Style ===============================\n\n  const getStyle = placement => getPlacementStyle(placement, top !== null && top !== void 0 ? top : DEFAULT_OFFSET, bottom !== null && bottom !== void 0 ? bottom : DEFAULT_OFFSET); // Style\n\n\n  const [, hashId] = useStyle(prefixCls);\n\n  const getClassName = () => classNames(hashId, {\n    [`${prefixCls}-rtl`]: rtl\n  }); // ============================== Motion ===============================\n\n\n  const getNotificationMotion = () => getMotion(prefixCls); // ============================== Origin ===============================\n\n\n  const [api, holder] = useRcNotification({\n    prefixCls,\n    style: getStyle,\n    className: getClassName,\n    motion: getNotificationMotion,\n    closable: true,\n    closeIcon: getCloseIcon(prefixCls),\n    duration: DEFAULT_DURATION,\n    getContainer: () => (staticGetContainer === null || staticGetContainer === void 0 ? void 0 : staticGetContainer()) || (getPopupContainer === null || getPopupContainer === void 0 ? void 0 : getPopupContainer()) || document.body,\n    maxCount,\n    onAllRemoved\n  }); // ================================ Ref ================================\n\n  React.useImperativeHandle(ref, () => Object.assign(Object.assign({}, api), {\n    prefixCls,\n    hashId\n  }));\n  return holder;\n}); // ==============================================================================\n// ==                                   Hook                                   ==\n// ==============================================================================\n\nexport function useInternalNotification(notificationConfig) {\n  const holderRef = React.useRef(null); // ================================ API ================================\n\n  const wrapAPI = React.useMemo(() => {\n    // Wrap with notification content\n    // >>> Open\n    const open = config => {\n      if (!holderRef.current) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Notification', 'You are calling notice in render which will break in React 18 concurrent mode. Please trigger in effect instead.') : void 0;\n        return;\n      }\n\n      const {\n        open: originOpen,\n        prefixCls,\n        hashId\n      } = holderRef.current;\n      const noticePrefixCls = `${prefixCls}-notice`;\n\n      const {\n        message,\n        description,\n        icon,\n        type,\n        btn,\n        className\n      } = config,\n            restConfig = __rest(config, [\"message\", \"description\", \"icon\", \"type\", \"btn\", \"className\"]);\n\n      return originOpen(Object.assign(Object.assign({\n        placement: 'topRight'\n      }, restConfig), {\n        content: /*#__PURE__*/React.createElement(PureContent, {\n          prefixCls: noticePrefixCls,\n          icon: icon,\n          type: type,\n          message: message,\n          description: description,\n          btn: btn\n        }),\n        className: classNames(type && `${noticePrefixCls}-${type}`, hashId, className)\n      }));\n    }; // >>> destroy\n\n\n    const destroy = key => {\n      var _a, _b;\n\n      if (key !== undefined) {\n        (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.close(key);\n      } else {\n        (_b = holderRef.current) === null || _b === void 0 ? void 0 : _b.destroy();\n      }\n    };\n\n    const clone = {\n      open,\n      destroy\n    };\n    const keys = ['success', 'info', 'warning', 'error'];\n    keys.forEach(type => {\n      clone[type] = config => open(Object.assign(Object.assign({}, config), {\n        type\n      }));\n    });\n    return clone;\n  }, []); // ============================== Return ===============================\n\n  return [wrapAPI, /*#__PURE__*/React.createElement(Holder, Object.assign({\n    key: \"notification-holder\"\n  }, notificationConfig, {\n    ref: holderRef\n  }))];\n}\nexport default function useNotification(notificationConfig) {\n  return useInternalNotification(notificationConfig);\n}","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/notification/useNotification.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","useNotification","useRcNotification","classNames","ConfigContext","getPlacementStyle","getMotion","warning","useStyle","getCloseIcon","PureContent","DEFAULT_OFFSET","DEFAULT_DURATION","Holder","forwardRef","props","ref","top","bottom","prefixCls","staticPrefixCls","getContainer","staticGetContainer","maxCount","rtl","onAllRemoved","getPrefixCls","getPopupContainer","useContext","getStyle","placement","hashId","getClassName","getNotificationMotion","api","holder","style","className","motion","closable","closeIcon","duration","document","body","useImperativeHandle","assign","useInternalNotification","notificationConfig","holderRef","useRef","wrapAPI","useMemo","open","config","current","process","env","NODE_ENV","originOpen","noticePrefixCls","message","description","icon","type","btn","restConfig","content","createElement","destroy","key","_a","_b","undefined","close","clone","keys","forEach"],"mappings":"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","sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useNotification as useRcNotification } from 'rc-notification';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport { getPlacementStyle, getMotion } from './util';\nimport warning from '../_util/warning';\nimport useStyle from './style';\nimport { getCloseIcon, PureContent } from './PurePanel';\nconst DEFAULT_OFFSET = 24;\nconst DEFAULT_DURATION = 4.5;\nconst Holder = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    top,\n    bottom,\n    prefixCls: staticPrefixCls,\n    getContainer: staticGetContainer,\n    maxCount,\n    rtl,\n    onAllRemoved\n  } = props;\n  const {\n    getPrefixCls,\n    getPopupContainer\n  } = React.useContext(ConfigContext);\n  const prefixCls = staticPrefixCls || getPrefixCls('notification');\n  // =============================== Style ===============================\n  const getStyle = placement => getPlacementStyle(placement, top !== null && top !== void 0 ? top : DEFAULT_OFFSET, bottom !== null && bottom !== void 0 ? bottom : DEFAULT_OFFSET);\n  // Style\n  const [, hashId] = useStyle(prefixCls);\n  const getClassName = () => classNames(hashId, {\n    [`${prefixCls}-rtl`]: rtl\n  });\n  // ============================== Motion ===============================\n  const getNotificationMotion = () => getMotion(prefixCls);\n  // ============================== Origin ===============================\n  const [api, holder] = useRcNotification({\n    prefixCls,\n    style: getStyle,\n    className: getClassName,\n    motion: getNotificationMotion,\n    closable: true,\n    closeIcon: getCloseIcon(prefixCls),\n    duration: DEFAULT_DURATION,\n    getContainer: () => (staticGetContainer === null || staticGetContainer === void 0 ? void 0 : staticGetContainer()) || (getPopupContainer === null || getPopupContainer === void 0 ? void 0 : getPopupContainer()) || document.body,\n    maxCount,\n    onAllRemoved\n  });\n  // ================================ Ref ================================\n  React.useImperativeHandle(ref, () => Object.assign(Object.assign({}, api), {\n    prefixCls,\n    hashId\n  }));\n  return holder;\n});\n// ==============================================================================\n// ==                                   Hook                                   ==\n// ==============================================================================\nexport function useInternalNotification(notificationConfig) {\n  const holderRef = React.useRef(null);\n  // ================================ API ================================\n  const wrapAPI = React.useMemo(() => {\n    // Wrap with notification content\n    // >>> Open\n    const open = config => {\n      if (!holderRef.current) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Notification', 'You are calling notice in render which will break in React 18 concurrent mode. Please trigger in effect instead.') : void 0;\n        return;\n      }\n      const {\n        open: originOpen,\n        prefixCls,\n        hashId\n      } = holderRef.current;\n      const noticePrefixCls = `${prefixCls}-notice`;\n      const {\n          message,\n          description,\n          icon,\n          type,\n          btn,\n          className\n        } = config,\n        restConfig = __rest(config, [\"message\", \"description\", \"icon\", \"type\", \"btn\", \"className\"]);\n      return originOpen(Object.assign(Object.assign({\n        placement: 'topRight'\n      }, restConfig), {\n        content: /*#__PURE__*/React.createElement(PureContent, {\n          prefixCls: noticePrefixCls,\n          icon: icon,\n          type: type,\n          message: message,\n          description: description,\n          btn: btn\n        }),\n        className: classNames(type && `${noticePrefixCls}-${type}`, hashId, className)\n      }));\n    };\n    // >>> destroy\n    const destroy = key => {\n      var _a, _b;\n      if (key !== undefined) {\n        (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.close(key);\n      } else {\n        (_b = holderRef.current) === null || _b === void 0 ? void 0 : _b.destroy();\n      }\n    };\n    const clone = {\n      open,\n      destroy\n    };\n    const keys = ['success', 'info', 'warning', 'error'];\n    keys.forEach(type => {\n      clone[type] = config => open(Object.assign(Object.assign({}, config), {\n        type\n      }));\n    });\n    return clone;\n  }, []);\n  // ============================== Return ===============================\n  return [wrapAPI, /*#__PURE__*/React.createElement(Holder, Object.assign({\n    key: \"notification-holder\"\n  }, notificationConfig, {\n    ref: holderRef\n  }))];\n}\nexport default function useNotification(notificationConfig) {\n  return useInternalNotification(notificationConfig);\n}"]},"metadata":{},"sourceType":"module"}