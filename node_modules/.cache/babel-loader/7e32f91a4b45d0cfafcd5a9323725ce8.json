{"ast":null,"code":"import classNames from 'classnames';\nimport { SubMenu as RcSubMenu, useFullPath } from 'rc-menu';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { cloneElement, isValidElement } from '../_util/reactNode';\nimport MenuContext from './MenuContext';\n\nvar SubMenu = function SubMenu(props) {\n  var _a;\n\n  var popupClassName = props.popupClassName,\n      icon = props.icon,\n      title = props.title,\n      customTheme = props.theme;\n  var context = React.useContext(MenuContext);\n  var prefixCls = context.prefixCls,\n      inlineCollapsed = context.inlineCollapsed,\n      contextTheme = context.theme,\n      mode = context.mode;\n  var parentPath = useFullPath();\n  var titleNode;\n\n  if (!icon) {\n    titleNode = inlineCollapsed && !parentPath.length && title && typeof title === 'string' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-inline-collapsed-noicon\")\n    }, title.charAt(0)) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-title-content\")\n    }, title);\n  } else {\n    // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n    // ref: https://github.com/ant-design/ant-design/pull/23456\n    var titleIsSpan = isValidElement(title) && title.type === 'span';\n    titleNode = /*#__PURE__*/React.createElement(React.Fragment, null, cloneElement(icon, {\n      className: classNames(isValidElement(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : '', \"\".concat(prefixCls, \"-item-icon\"))\n    }), titleIsSpan ? title : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-title-content\")\n    }, title));\n  }\n\n  var contextValue = React.useMemo(function () {\n    return Object.assign(Object.assign({}, context), {\n      firstLevel: false\n    });\n  }, [context]);\n  var popupOffset = mode === 'horizontal' ? [0, 8] : [10, 0];\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(RcSubMenu, Object.assign({\n    popupOffset: popupOffset\n  }, omit(props, ['icon']), {\n    title: titleNode,\n    popupClassName: classNames(prefixCls, popupClassName, \"\".concat(prefixCls, \"-\").concat(customTheme || contextTheme))\n  })));\n};\n\nexport default SubMenu;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/menu/SubMenu.js"],"names":["classNames","SubMenu","RcSubMenu","useFullPath","omit","React","cloneElement","isValidElement","MenuContext","props","_a","popupClassName","icon","title","customTheme","theme","context","useContext","prefixCls","inlineCollapsed","contextTheme","mode","parentPath","titleNode","length","createElement","className","charAt","titleIsSpan","type","Fragment","contextValue","useMemo","Object","assign","firstLevel","popupOffset","Provider","value"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport { SubMenu as RcSubMenu, useFullPath } from 'rc-menu';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { cloneElement, isValidElement } from '../_util/reactNode';\nimport MenuContext from './MenuContext';\nconst SubMenu = props => {\n  var _a;\n  const {\n    popupClassName,\n    icon,\n    title,\n    theme: customTheme\n  } = props;\n  const context = React.useContext(MenuContext);\n  const {\n    prefixCls,\n    inlineCollapsed,\n    theme: contextTheme,\n    mode\n  } = context;\n  const parentPath = useFullPath();\n  let titleNode;\n  if (!icon) {\n    titleNode = inlineCollapsed && !parentPath.length && title && typeof title === 'string' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: `${prefixCls}-inline-collapsed-noicon`\n    }, title.charAt(0)) : /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-title-content`\n    }, title);\n  } else {\n    // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n    // ref: https://github.com/ant-design/ant-design/pull/23456\n    const titleIsSpan = isValidElement(title) && title.type === 'span';\n    titleNode = /*#__PURE__*/React.createElement(React.Fragment, null, cloneElement(icon, {\n      className: classNames(isValidElement(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : '', `${prefixCls}-item-icon`)\n    }), titleIsSpan ? title : /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-title-content`\n    }, title));\n  }\n  const contextValue = React.useMemo(() => Object.assign(Object.assign({}, context), {\n    firstLevel: false\n  }), [context]);\n  const popupOffset = mode === 'horizontal' ? [0, 8] : [10, 0];\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(RcSubMenu, Object.assign({\n    popupOffset: popupOffset\n  }, omit(props, ['icon']), {\n    title: titleNode,\n    popupClassName: classNames(prefixCls, popupClassName, `${prefixCls}-${customTheme || contextTheme}`)\n  })));\n};\nexport default SubMenu;"]},"metadata":{},"sourceType":"module"}