{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { groupDisabledKeysMap, groupKeysMap } from '../_util/transKeys';\nimport warning from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport { FormItemInputContext } from '../form/context';\nimport defaultLocale from '../locale/en_US';\nimport { useLocale } from '../locale';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport useStyle from './style';\n\nconst Transfer = props => {\n  const {\n    dataSource = [],\n    targetKeys = [],\n    selectedKeys = [],\n    selectAllLabels = [],\n    operations = [],\n    style = {},\n    listStyle = {},\n    locale = {},\n    titles,\n    disabled,\n    showSearch = false,\n    operationStyle,\n    showSelectAll,\n    oneWay,\n    pagination,\n    status: customStatus,\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    filterOption,\n    render,\n    footer,\n    children,\n    rowKey,\n    onScroll,\n    onChange,\n    onSearch,\n    onSelectChange\n  } = props;\n  const {\n    getPrefixCls,\n    renderEmpty,\n    direction: dir\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const [sourceSelectedKeys, setSourceSelectedKeys] = useState(() => selectedKeys.filter(key => !targetKeys.includes(key)));\n  const [targetSelectedKeys, setTargetSelectedKeys] = useState(() => selectedKeys.filter(key => targetKeys.includes(key)));\n  useEffect(() => {\n    if (props.selectedKeys) {\n      setSourceSelectedKeys(() => selectedKeys.filter(key => !targetKeys.includes(key)));\n      setTargetSelectedKeys(() => selectedKeys.filter(key => targetKeys.includes(key)));\n    }\n  }, [props.selectedKeys, props.targetKeys]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!pagination || !children, 'Transfer', '`pagination` not support customize render list.') : void 0;\n  }\n\n  const setStateKeys = useCallback((direction, keys) => {\n    if (direction === 'left') {\n      setSourceSelectedKeys(prev => typeof keys === 'function' ? keys(prev || []) : keys);\n    } else {\n      setTargetSelectedKeys(prev => typeof keys === 'function' ? keys(prev || []) : keys);\n    }\n  }, [sourceSelectedKeys, targetSelectedKeys]);\n  const handleSelectChange = useCallback((direction, holder) => {\n    if (direction === 'left') {\n      onSelectChange === null || onSelectChange === void 0 ? void 0 : onSelectChange(holder, targetSelectedKeys);\n    } else {\n      onSelectChange === null || onSelectChange === void 0 ? void 0 : onSelectChange(sourceSelectedKeys, holder);\n    }\n  }, [sourceSelectedKeys, targetSelectedKeys]);\n\n  const getTitles = transferLocale => {\n    var _a;\n\n    return (_a = titles !== null && titles !== void 0 ? titles : transferLocale.titles) !== null && _a !== void 0 ? _a : [];\n  };\n\n  const handleLeftScroll = e => {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll('left', e);\n  };\n\n  const handleRightScroll = e => {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll('right', e);\n  };\n\n  const moveTo = direction => {\n    const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n    const dataSourceDisabledKeysMap = groupDisabledKeysMap(dataSource); // filter the disabled options\n\n    const newMoveKeys = moveKeys.filter(key => !dataSourceDisabledKeysMap.has(key));\n    const newMoveKeysMap = groupKeysMap(newMoveKeys); // move items to target box\n\n    const newTargetKeys = direction === 'right' ? newMoveKeys.concat(targetKeys) : targetKeys.filter(targetKey => !newMoveKeysMap.has(targetKey)); // empty checked keys\n\n    const oppositeDirection = direction === 'right' ? 'left' : 'right';\n    setStateKeys(oppositeDirection, []);\n    handleSelectChange(oppositeDirection, []);\n    onChange === null || onChange === void 0 ? void 0 : onChange(newTargetKeys, direction, newMoveKeys);\n  };\n\n  const moveToLeft = () => {\n    moveTo('left');\n  };\n\n  const moveToRight = () => {\n    moveTo('right');\n  };\n\n  const onItemSelectAll = (direction, keys, checkAll) => {\n    setStateKeys(direction, prevKeys => {\n      let mergedCheckedKeys = [];\n\n      if (checkAll) {\n        // Merge current keys with origin key\n        mergedCheckedKeys = Array.from(new Set([].concat(_toConsumableArray(prevKeys), _toConsumableArray(keys))));\n      } else {\n        const selectedKeysMap = groupKeysMap(keys); // Remove current keys from origin keys\n\n        mergedCheckedKeys = prevKeys.filter(key => !selectedKeysMap.has(key));\n      }\n\n      handleSelectChange(direction, mergedCheckedKeys);\n      return mergedCheckedKeys;\n    });\n  };\n\n  const onLeftItemSelectAll = (keys, checkAll) => {\n    onItemSelectAll('left', keys, checkAll);\n  };\n\n  const onRightItemSelectAll = (keys, checkAll) => {\n    onItemSelectAll('right', keys, checkAll);\n  };\n\n  const leftFilter = e => onSearch === null || onSearch === void 0 ? void 0 : onSearch('left', e.target.value);\n\n  const rightFilter = e => onSearch === null || onSearch === void 0 ? void 0 : onSearch('right', e.target.value);\n\n  const handleLeftClear = () => onSearch === null || onSearch === void 0 ? void 0 : onSearch('left', '');\n\n  const handleRightClear = () => onSearch === null || onSearch === void 0 ? void 0 : onSearch('right', '');\n\n  const onItemSelect = (direction, selectedKey, checked) => {\n    const holder = _toConsumableArray(direction === 'left' ? sourceSelectedKeys : targetSelectedKeys);\n\n    const index = holder.indexOf(selectedKey);\n\n    if (index > -1) {\n      holder.splice(index, 1);\n    }\n\n    if (checked) {\n      holder.push(selectedKey);\n    }\n\n    handleSelectChange(direction, holder);\n\n    if (!props.selectedKeys) {\n      setStateKeys(direction, holder);\n    }\n  };\n\n  const onLeftItemSelect = (selectedKey, checked) => {\n    onItemSelect('left', selectedKey, checked);\n  };\n\n  const onRightItemSelect = (selectedKey, checked) => {\n    onItemSelect('right', selectedKey, checked);\n  };\n\n  const onRightItemRemove = keys => {\n    setStateKeys('right', []);\n    onChange === null || onChange === void 0 ? void 0 : onChange(targetKeys.filter(key => !keys.includes(key)), 'left', _toConsumableArray(keys));\n  };\n\n  const handleListStyle = direction => {\n    if (typeof listStyle === 'function') {\n      return listStyle({\n        direction\n      });\n    }\n\n    return listStyle || {};\n  };\n\n  const [leftDataSource, rightDataSource] = useMemo(() => {\n    const leftData = [];\n    const rightData = new Array(targetKeys.length);\n    const targetKeysMap = groupKeysMap(targetKeys);\n    dataSource.forEach(record => {\n      if (rowKey) {\n        record = Object.assign(Object.assign({}, record), {\n          key: rowKey(record)\n        });\n      } // rightData should be ordered by targetKeys\n      // leftData should be ordered by dataSource\n\n\n      if (targetKeysMap.has(record.key)) {\n        rightData[targetKeysMap.get(record.key)] = record;\n      } else {\n        leftData.push(record);\n      }\n    });\n    return [leftData, rightData];\n  }, [dataSource, targetKeys, rowKey]);\n  const formItemContext = useContext(FormItemInputContext);\n  const {\n    hasFeedback,\n    status\n  } = formItemContext;\n\n  const getLocale = transferLocale => Object.assign(Object.assign(Object.assign({}, transferLocale), {\n    notFoundContent: (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Transfer')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n      componentName: \"Transfer\"\n    })\n  }), locale);\n\n  const mergedStatus = getMergedStatus(status, customStatus);\n  const mergedPagination = !children && pagination;\n  const leftActive = targetSelectedKeys.length > 0;\n  const rightActive = sourceSelectedKeys.length > 0;\n  const cls = classNames(prefixCls, {\n    [`${prefixCls}-disabled`]: disabled,\n    [`${prefixCls}-customize-list`]: !!children,\n    [`${prefixCls}-rtl`]: dir === 'rtl'\n  }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), className, rootClassName, hashId);\n  const [contextLocale] = useLocale('Transfer', defaultLocale.Transfer);\n  const listLocale = getLocale(contextLocale);\n  const [leftTitle, rightTitle] = getTitles(listLocale);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: style\n  }, /*#__PURE__*/React.createElement(List, Object.assign({\n    prefixCls: `${prefixCls}-list`,\n    titleText: leftTitle,\n    dataSource: leftDataSource,\n    filterOption: filterOption,\n    style: handleListStyle('left'),\n    checkedKeys: sourceSelectedKeys,\n    handleFilter: leftFilter,\n    handleClear: handleLeftClear,\n    onItemSelect: onLeftItemSelect,\n    onItemSelectAll: onLeftItemSelectAll,\n    render: render,\n    showSearch: showSearch,\n    renderList: children,\n    footer: footer,\n    onScroll: handleLeftScroll,\n    disabled: disabled,\n    direction: dir === 'rtl' ? 'right' : 'left',\n    showSelectAll: showSelectAll,\n    selectAllLabel: selectAllLabels[0],\n    pagination: mergedPagination\n  }, listLocale)), /*#__PURE__*/React.createElement(Operation, {\n    className: `${prefixCls}-operation`,\n    rightActive: rightActive,\n    rightArrowText: operations[0],\n    moveToRight: moveToRight,\n    leftActive: leftActive,\n    leftArrowText: operations[1],\n    moveToLeft: moveToLeft,\n    style: operationStyle,\n    disabled: disabled,\n    direction: dir,\n    oneWay: oneWay\n  }), /*#__PURE__*/React.createElement(List, Object.assign({\n    prefixCls: `${prefixCls}-list`,\n    titleText: rightTitle,\n    dataSource: rightDataSource,\n    filterOption: filterOption,\n    style: handleListStyle('right'),\n    checkedKeys: targetSelectedKeys,\n    handleFilter: rightFilter,\n    handleClear: handleRightClear,\n    onItemSelect: onRightItemSelect,\n    onItemSelectAll: onRightItemSelectAll,\n    onItemRemove: onRightItemRemove,\n    render: render,\n    showSearch: showSearch,\n    renderList: children,\n    footer: footer,\n    onScroll: handleRightScroll,\n    disabled: disabled,\n    direction: dir === 'rtl' ? 'left' : 'right',\n    showSelectAll: showSelectAll,\n    selectAllLabel: selectAllLabels[1],\n    showRemove: oneWay,\n    pagination: mergedPagination\n  }, listLocale))));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Transfer.displayName = 'Transfer';\n}\n\nTransfer.List = List;\nTransfer.Search = Search;\nTransfer.Operation = Operation;\nexport default Transfer;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/antd/es/transfer/index.js"],"names":["_toConsumableArray","classNames","React","useCallback","useContext","useEffect","useMemo","useState","getMergedStatus","getStatusClassNames","groupDisabledKeysMap","groupKeysMap","warning","ConfigContext","DefaultRenderEmpty","FormItemInputContext","defaultLocale","useLocale","List","Operation","Search","useStyle","Transfer","props","dataSource","targetKeys","selectedKeys","selectAllLabels","operations","style","listStyle","locale","titles","disabled","showSearch","operationStyle","showSelectAll","oneWay","pagination","status","customStatus","prefixCls","customizePrefixCls","className","rootClassName","filterOption","render","footer","children","rowKey","onScroll","onChange","onSearch","onSelectChange","getPrefixCls","renderEmpty","direction","dir","wrapSSR","hashId","sourceSelectedKeys","setSourceSelectedKeys","filter","key","includes","targetSelectedKeys","setTargetSelectedKeys","process","env","NODE_ENV","setStateKeys","keys","prev","handleSelectChange","holder","getTitles","transferLocale","_a","handleLeftScroll","e","handleRightScroll","moveTo","moveKeys","dataSourceDisabledKeysMap","newMoveKeys","has","newMoveKeysMap","newTargetKeys","concat","targetKey","oppositeDirection","moveToLeft","moveToRight","onItemSelectAll","checkAll","prevKeys","mergedCheckedKeys","Array","from","Set","selectedKeysMap","onLeftItemSelectAll","onRightItemSelectAll","leftFilter","target","value","rightFilter","handleLeftClear","handleRightClear","onItemSelect","selectedKey","checked","index","indexOf","splice","push","onLeftItemSelect","onRightItemSelect","onRightItemRemove","handleListStyle","leftDataSource","rightDataSource","leftData","rightData","length","targetKeysMap","forEach","record","Object","assign","get","formItemContext","hasFeedback","getLocale","notFoundContent","createElement","componentName","mergedStatus","mergedPagination","leftActive","rightActive","cls","contextLocale","listLocale","leftTitle","rightTitle","titleText","checkedKeys","handleFilter","handleClear","renderList","selectAllLabel","rightArrowText","leftArrowText","onItemRemove","showRemove","displayName"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { groupDisabledKeysMap, groupKeysMap } from '../_util/transKeys';\nimport warning from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport { FormItemInputContext } from '../form/context';\nimport defaultLocale from '../locale/en_US';\nimport { useLocale } from '../locale';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport useStyle from './style';\nconst Transfer = props => {\n  const {\n    dataSource = [],\n    targetKeys = [],\n    selectedKeys = [],\n    selectAllLabels = [],\n    operations = [],\n    style = {},\n    listStyle = {},\n    locale = {},\n    titles,\n    disabled,\n    showSearch = false,\n    operationStyle,\n    showSelectAll,\n    oneWay,\n    pagination,\n    status: customStatus,\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    filterOption,\n    render,\n    footer,\n    children,\n    rowKey,\n    onScroll,\n    onChange,\n    onSearch,\n    onSelectChange\n  } = props;\n  const {\n    getPrefixCls,\n    renderEmpty,\n    direction: dir\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const [sourceSelectedKeys, setSourceSelectedKeys] = useState(() => selectedKeys.filter(key => !targetKeys.includes(key)));\n  const [targetSelectedKeys, setTargetSelectedKeys] = useState(() => selectedKeys.filter(key => targetKeys.includes(key)));\n  useEffect(() => {\n    if (props.selectedKeys) {\n      setSourceSelectedKeys(() => selectedKeys.filter(key => !targetKeys.includes(key)));\n      setTargetSelectedKeys(() => selectedKeys.filter(key => targetKeys.includes(key)));\n    }\n  }, [props.selectedKeys, props.targetKeys]);\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!pagination || !children, 'Transfer', '`pagination` not support customize render list.') : void 0;\n  }\n  const setStateKeys = useCallback((direction, keys) => {\n    if (direction === 'left') {\n      setSourceSelectedKeys(prev => typeof keys === 'function' ? keys(prev || []) : keys);\n    } else {\n      setTargetSelectedKeys(prev => typeof keys === 'function' ? keys(prev || []) : keys);\n    }\n  }, [sourceSelectedKeys, targetSelectedKeys]);\n  const handleSelectChange = useCallback((direction, holder) => {\n    if (direction === 'left') {\n      onSelectChange === null || onSelectChange === void 0 ? void 0 : onSelectChange(holder, targetSelectedKeys);\n    } else {\n      onSelectChange === null || onSelectChange === void 0 ? void 0 : onSelectChange(sourceSelectedKeys, holder);\n    }\n  }, [sourceSelectedKeys, targetSelectedKeys]);\n  const getTitles = transferLocale => {\n    var _a;\n    return (_a = titles !== null && titles !== void 0 ? titles : transferLocale.titles) !== null && _a !== void 0 ? _a : [];\n  };\n  const handleLeftScroll = e => {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll('left', e);\n  };\n  const handleRightScroll = e => {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll('right', e);\n  };\n  const moveTo = direction => {\n    const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n    const dataSourceDisabledKeysMap = groupDisabledKeysMap(dataSource);\n    // filter the disabled options\n    const newMoveKeys = moveKeys.filter(key => !dataSourceDisabledKeysMap.has(key));\n    const newMoveKeysMap = groupKeysMap(newMoveKeys);\n    // move items to target box\n    const newTargetKeys = direction === 'right' ? newMoveKeys.concat(targetKeys) : targetKeys.filter(targetKey => !newMoveKeysMap.has(targetKey));\n    // empty checked keys\n    const oppositeDirection = direction === 'right' ? 'left' : 'right';\n    setStateKeys(oppositeDirection, []);\n    handleSelectChange(oppositeDirection, []);\n    onChange === null || onChange === void 0 ? void 0 : onChange(newTargetKeys, direction, newMoveKeys);\n  };\n  const moveToLeft = () => {\n    moveTo('left');\n  };\n  const moveToRight = () => {\n    moveTo('right');\n  };\n  const onItemSelectAll = (direction, keys, checkAll) => {\n    setStateKeys(direction, prevKeys => {\n      let mergedCheckedKeys = [];\n      if (checkAll) {\n        // Merge current keys with origin key\n        mergedCheckedKeys = Array.from(new Set([].concat(_toConsumableArray(prevKeys), _toConsumableArray(keys))));\n      } else {\n        const selectedKeysMap = groupKeysMap(keys);\n        // Remove current keys from origin keys\n        mergedCheckedKeys = prevKeys.filter(key => !selectedKeysMap.has(key));\n      }\n      handleSelectChange(direction, mergedCheckedKeys);\n      return mergedCheckedKeys;\n    });\n  };\n  const onLeftItemSelectAll = (keys, checkAll) => {\n    onItemSelectAll('left', keys, checkAll);\n  };\n  const onRightItemSelectAll = (keys, checkAll) => {\n    onItemSelectAll('right', keys, checkAll);\n  };\n  const leftFilter = e => onSearch === null || onSearch === void 0 ? void 0 : onSearch('left', e.target.value);\n  const rightFilter = e => onSearch === null || onSearch === void 0 ? void 0 : onSearch('right', e.target.value);\n  const handleLeftClear = () => onSearch === null || onSearch === void 0 ? void 0 : onSearch('left', '');\n  const handleRightClear = () => onSearch === null || onSearch === void 0 ? void 0 : onSearch('right', '');\n  const onItemSelect = (direction, selectedKey, checked) => {\n    const holder = _toConsumableArray(direction === 'left' ? sourceSelectedKeys : targetSelectedKeys);\n    const index = holder.indexOf(selectedKey);\n    if (index > -1) {\n      holder.splice(index, 1);\n    }\n    if (checked) {\n      holder.push(selectedKey);\n    }\n    handleSelectChange(direction, holder);\n    if (!props.selectedKeys) {\n      setStateKeys(direction, holder);\n    }\n  };\n  const onLeftItemSelect = (selectedKey, checked) => {\n    onItemSelect('left', selectedKey, checked);\n  };\n  const onRightItemSelect = (selectedKey, checked) => {\n    onItemSelect('right', selectedKey, checked);\n  };\n  const onRightItemRemove = keys => {\n    setStateKeys('right', []);\n    onChange === null || onChange === void 0 ? void 0 : onChange(targetKeys.filter(key => !keys.includes(key)), 'left', _toConsumableArray(keys));\n  };\n  const handleListStyle = direction => {\n    if (typeof listStyle === 'function') {\n      return listStyle({\n        direction\n      });\n    }\n    return listStyle || {};\n  };\n  const [leftDataSource, rightDataSource] = useMemo(() => {\n    const leftData = [];\n    const rightData = new Array(targetKeys.length);\n    const targetKeysMap = groupKeysMap(targetKeys);\n    dataSource.forEach(record => {\n      if (rowKey) {\n        record = Object.assign(Object.assign({}, record), {\n          key: rowKey(record)\n        });\n      }\n      // rightData should be ordered by targetKeys\n      // leftData should be ordered by dataSource\n      if (targetKeysMap.has(record.key)) {\n        rightData[targetKeysMap.get(record.key)] = record;\n      } else {\n        leftData.push(record);\n      }\n    });\n    return [leftData, rightData];\n  }, [dataSource, targetKeys, rowKey]);\n  const formItemContext = useContext(FormItemInputContext);\n  const {\n    hasFeedback,\n    status\n  } = formItemContext;\n  const getLocale = transferLocale => Object.assign(Object.assign(Object.assign({}, transferLocale), {\n    notFoundContent: (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Transfer')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n      componentName: \"Transfer\"\n    })\n  }), locale);\n  const mergedStatus = getMergedStatus(status, customStatus);\n  const mergedPagination = !children && pagination;\n  const leftActive = targetSelectedKeys.length > 0;\n  const rightActive = sourceSelectedKeys.length > 0;\n  const cls = classNames(prefixCls, {\n    [`${prefixCls}-disabled`]: disabled,\n    [`${prefixCls}-customize-list`]: !!children,\n    [`${prefixCls}-rtl`]: dir === 'rtl'\n  }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), className, rootClassName, hashId);\n  const [contextLocale] = useLocale('Transfer', defaultLocale.Transfer);\n  const listLocale = getLocale(contextLocale);\n  const [leftTitle, rightTitle] = getTitles(listLocale);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: style\n  }, /*#__PURE__*/React.createElement(List, Object.assign({\n    prefixCls: `${prefixCls}-list`,\n    titleText: leftTitle,\n    dataSource: leftDataSource,\n    filterOption: filterOption,\n    style: handleListStyle('left'),\n    checkedKeys: sourceSelectedKeys,\n    handleFilter: leftFilter,\n    handleClear: handleLeftClear,\n    onItemSelect: onLeftItemSelect,\n    onItemSelectAll: onLeftItemSelectAll,\n    render: render,\n    showSearch: showSearch,\n    renderList: children,\n    footer: footer,\n    onScroll: handleLeftScroll,\n    disabled: disabled,\n    direction: dir === 'rtl' ? 'right' : 'left',\n    showSelectAll: showSelectAll,\n    selectAllLabel: selectAllLabels[0],\n    pagination: mergedPagination\n  }, listLocale)), /*#__PURE__*/React.createElement(Operation, {\n    className: `${prefixCls}-operation`,\n    rightActive: rightActive,\n    rightArrowText: operations[0],\n    moveToRight: moveToRight,\n    leftActive: leftActive,\n    leftArrowText: operations[1],\n    moveToLeft: moveToLeft,\n    style: operationStyle,\n    disabled: disabled,\n    direction: dir,\n    oneWay: oneWay\n  }), /*#__PURE__*/React.createElement(List, Object.assign({\n    prefixCls: `${prefixCls}-list`,\n    titleText: rightTitle,\n    dataSource: rightDataSource,\n    filterOption: filterOption,\n    style: handleListStyle('right'),\n    checkedKeys: targetSelectedKeys,\n    handleFilter: rightFilter,\n    handleClear: handleRightClear,\n    onItemSelect: onRightItemSelect,\n    onItemSelectAll: onRightItemSelectAll,\n    onItemRemove: onRightItemRemove,\n    render: render,\n    showSearch: showSearch,\n    renderList: children,\n    footer: footer,\n    onScroll: handleRightScroll,\n    disabled: disabled,\n    direction: dir === 'rtl' ? 'left' : 'right',\n    showSelectAll: showSelectAll,\n    selectAllLabel: selectAllLabels[1],\n    showRemove: oneWay,\n    pagination: mergedPagination\n  }, listLocale))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Transfer.displayName = 'Transfer';\n}\nTransfer.List = List;\nTransfer.Search = Search;\nTransfer.Operation = Operation;\nexport default Transfer;"]},"metadata":{},"sourceType":"module"}