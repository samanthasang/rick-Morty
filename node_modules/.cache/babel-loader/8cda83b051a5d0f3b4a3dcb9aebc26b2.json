{"ast":null,"code":"import Trigger from '@rc-component/trigger';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport DropdownMenu from \"./DropdownMenu\";\nvar BUILT_IN_PLACEMENTS = {\n  bottomRight: {\n    points: ['tl', 'br'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1\n    }\n  },\n  bottomLeft: {\n    points: ['tr', 'bl'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1\n    }\n  },\n  topRight: {\n    points: ['bl', 'tr'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1\n    }\n  },\n  topLeft: {\n    points: ['br', 'tl'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1\n    }\n  }\n};\n\nvar KeywordTrigger = function KeywordTrigger(props) {\n  var prefixCls = props.prefixCls,\n      options = props.options,\n      children = props.children,\n      visible = props.visible,\n      transitionName = props.transitionName,\n      getPopupContainer = props.getPopupContainer,\n      dropdownClassName = props.dropdownClassName,\n      direction = props.direction,\n      placement = props.placement;\n  var dropdownPrefix = \"\".concat(prefixCls, \"-dropdown\");\n  var dropdownElement = /*#__PURE__*/React.createElement(DropdownMenu, {\n    prefixCls: dropdownPrefix,\n    options: options\n  });\n  var dropdownPlacement = useMemo(function () {\n    var popupPlacement;\n\n    if (direction === 'rtl') {\n      popupPlacement = placement === 'top' ? 'topLeft' : 'bottomLeft';\n    } else {\n      popupPlacement = placement === 'top' ? 'topRight' : 'bottomRight';\n    }\n\n    return popupPlacement;\n  }, [direction, placement]);\n  return /*#__PURE__*/React.createElement(Trigger, {\n    prefixCls: dropdownPrefix,\n    popupVisible: visible,\n    popup: dropdownElement,\n    popupPlacement: dropdownPlacement,\n    popupTransitionName: transitionName,\n    builtinPlacements: BUILT_IN_PLACEMENTS,\n    getPopupContainer: getPopupContainer,\n    popupClassName: dropdownClassName\n  }, children);\n};\n\nexport default KeywordTrigger;","map":{"version":3,"sources":["/Users/luna/Desktop/Project/Git Project/rick-Morty/node_modules/rc-mentions/es/KeywordTrigger.js"],"names":["Trigger","React","useMemo","DropdownMenu","BUILT_IN_PLACEMENTS","bottomRight","points","offset","overflow","adjustX","adjustY","bottomLeft","topRight","topLeft","KeywordTrigger","props","prefixCls","options","children","visible","transitionName","getPopupContainer","dropdownClassName","direction","placement","dropdownPrefix","concat","dropdownElement","createElement","dropdownPlacement","popupPlacement","popupVisible","popup","popupTransitionName","builtinPlacements","popupClassName"],"mappings":"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","sourcesContent":["import Trigger from '@rc-component/trigger';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport DropdownMenu from \"./DropdownMenu\";\nvar BUILT_IN_PLACEMENTS = {\n  bottomRight: {\n    points: ['tl', 'br'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1\n    }\n  },\n  bottomLeft: {\n    points: ['tr', 'bl'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1\n    }\n  },\n  topRight: {\n    points: ['bl', 'tr'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1\n    }\n  },\n  topLeft: {\n    points: ['br', 'tl'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1\n    }\n  }\n};\nvar KeywordTrigger = function KeywordTrigger(props) {\n  var prefixCls = props.prefixCls,\n    options = props.options,\n    children = props.children,\n    visible = props.visible,\n    transitionName = props.transitionName,\n    getPopupContainer = props.getPopupContainer,\n    dropdownClassName = props.dropdownClassName,\n    direction = props.direction,\n    placement = props.placement;\n  var dropdownPrefix = \"\".concat(prefixCls, \"-dropdown\");\n  var dropdownElement = /*#__PURE__*/React.createElement(DropdownMenu, {\n    prefixCls: dropdownPrefix,\n    options: options\n  });\n  var dropdownPlacement = useMemo(function () {\n    var popupPlacement;\n    if (direction === 'rtl') {\n      popupPlacement = placement === 'top' ? 'topLeft' : 'bottomLeft';\n    } else {\n      popupPlacement = placement === 'top' ? 'topRight' : 'bottomRight';\n    }\n    return popupPlacement;\n  }, [direction, placement]);\n  return /*#__PURE__*/React.createElement(Trigger, {\n    prefixCls: dropdownPrefix,\n    popupVisible: visible,\n    popup: dropdownElement,\n    popupPlacement: dropdownPlacement,\n    popupTransitionName: transitionName,\n    builtinPlacements: BUILT_IN_PLACEMENTS,\n    getPopupContainer: getPopupContainer,\n    popupClassName: dropdownClassName\n  }, children);\n};\nexport default KeywordTrigger;"]},"metadata":{},"sourceType":"module"}